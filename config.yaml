extends: recommended
engine: ast
parallel: true
maxConcurrency: 4

include:
  - "src/**/*.{ts,tsx,js,jsx}"

exclude:
  - "node_modules/**"
  - "dist/**"
  - ".git/**"
  - "tests/**"
  - "src/framework/core/**"
  - "**/*.test.{ts,tsx,js,jsx}"
  - "**/*.spec.{ts,tsx,js,jsx}"

# âœ… FRAMEWORK EXCEPTIONS: Actor-SPA Framework sanctioned patterns
framework:
  name: "Actor-SPA"
  allowedPatterns:
    # Core framework event handling
    sendAttributes:
      - "send="
      - "data-send="
      - "data-action="
    
    # Global window events (acceptable for framework)
    globalEvents:
      - "window.addEventListener('keydown'"
      - "window.addEventListener('resize'"
      - "window.addEventListener('beforeunload'"
      - "window.addEventListener('popstate'"
    
    # Framework event bus patterns
    eventBus:
      - "globalEventBus.emit"
      - "globalEventBus.on"
      - "window.globalEventBus"

rules:
  no-dom-query:
    severity: error
    message: "Use reactive refs instead of DOM queries"
    autofix: true
    exceptions:
      # Allow framework-level queries in specific contexts
      - "document.querySelector.*framework.*"
      - "document.getElementById.*-ref$"
  
  no-event-listeners:
    severity: error
    message: "Use declarative event mapping through state machines"
    autofix: false
    exceptions:
      # Allow global window events for framework functionality
      - "window.addEventListener\\(['\"]keydown"
      - "window.addEventListener\\(['\"]resize"
      - "window.addEventListener\\(['\"]beforeunload"
      - "window.addEventListener\\(['\"]popstate"
      # Allow cleanup patterns
      - "removeEventListener"
  
  no-dom-manipulation:
    severity: error
    message: "Use template functions with state instead of DOM manipulation"
    autofix: true
    exceptions:
      # Allow framework event bus patterns
      - "globalEventBus\\."
      - "window\\.globalEventBus"
      # Allow send attributes (core framework pattern)
      - "send=\"[A-Z_]+\""
      - "data-send=\"[A-Z_]+\""
      # Allow framework lifecycle events
      - "dispatchEvent.*framework.*"
      - "dispatchEvent.*actor.*"
      - "CustomEvent\\(['\"][a-z-]+-[a-z-]+['\"]"
  
  no-timers:
    severity: error
    message: "Use state machine delays/services instead of timers"
    autofix: false
    exceptions:
      # Allow cleanup timers in specific contexts
      - "clearTimeout"
      - "clearInterval"
  
  no-context-booleans:
    severity: warn
    message: "Use machine states instead of boolean flags in context"
    autofix: false
    exceptions:
      # Allow framework configuration flags
      - "isDevelopment"
      - "isProduction"
      - "isTestMode"
      # Allow accessibility states (framework pattern)
      - "isExpanded"
      - "isSelected" 
      - "isDisabled"
      - "isChecked"
  
  no-multiple-data-attributes:
    severity: error
    message: "Use data-state attribute instead of multiple data attributes"
    autofix: true
    exceptions:
      # Allow framework-specific data attributes
      - "data-send"
      - "data-action"
      - "data-ref"

  prefer-extracted-templates:
    severity: error
    message: "Template nesting too deep. Consider extracting nested templates into separate functions"
    autofix: true
    maxNestingDepth: 3  # Increased for framework patterns
    minExtractedLines: 3
    allowInlineExpressions: true
    exceptions:
      # Allow deeper nesting for framework composition patterns
      - ".*map\\(.*Template"
      - ".*Slot\\("
      - "send=\"[A-Z_]+\""

reporters:
  - pretty
  - json

exitCode:
  onError: 1
  onWarning: 0 