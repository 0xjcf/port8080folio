{"version":3,"file":"extension.js","mappings":"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UA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAgB,SAANA,GAAsB,SAANA,GAAgBA,GAAK,QAAUA,GAAK,QAAgB,SAANA,GAAgBA,GAAK,QAAUA,GAAK,QAAgB,SAANA,GAAgBA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAgB,SAANA,GAAsB,SAANA,GAAsB,SAANA,GAAgBA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAgB,SAANA,GAAsB,SAANA,GAAgBA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAgB,SAANA,GAAgBA,GAAK,QAAUA,GAAK,QAAgB,SAANA,GAAgBA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAgB,SAANA,GAAsB,SAANA,GAAsB,SAANA,GAAsB,SAANA,GAAgBA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAgB,SAANA,GAAgBA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAgB,SAANA,GAAsB,SAANA,GAAgBA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAgB,SAANA,GAAgBA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,QAAUA,GAAK,MAC5gG,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","sources":["../webpack/runtime/require chunk loading",".././src/machines/tokenizer.ts","../external node-commonjs \"buffer\"",".././src/types/aiCommunication.ts","../external node-commonjs \"process\"","../external commonjs \"vscode\"","../external node-commonjs \"node:child_process\"","../external node-commonjs \"node:fs/promises\"","../external node-commonjs \"v8\"",".././node_modules/.pnpm/ws@8.18.3/node_modules/ws/lib/limiter.js","../external node-commonjs \"fs/promises\"",".././node_modules/.pnpm/prettier@3.6.2/node_modules/prettier/doc.js",".././src/providers/reactiveLintProvider.ts","../external node-commonjs \"stream\"",".././node_modules/.pnpm/ws@8.18.3/node_modules/ws/lib/stream.js",".././src/machines/coordinatorMachine.ts","../external node-commonjs \"assert\"",".././node_modules/.pnpm/ws@8.18.3/node_modules/ws/lib/extension.js","../external node-commonjs \"node:fs\"","../external node-commonjs \"zlib\"","../external node-commonjs \"module\"",".././src/commands/aiCommunication.ts",".././node_modules/.pnpm/ws@8.18.3/node_modules/ws/lib/websocket.js",".././node_modules/.pnpm/ws@8.18.3/node_modules/ws/index.js",".././src/providers/actorFormattingProvider.ts",".././node_modules/.pnpm/xstate@5.20.1/node_modules/xstate/dev/dist/xstate-dev.esm.js",".././node_modules/.pnpm/xstate@5.20.1/node_modules/xstate/dist/raise-b0a4e862.esm.js",".././node_modules/.pnpm/xstate@5.20.1/node_modules/xstate/actors/dist/xstate-actors.esm.js",".././node_modules/.pnpm/xstate@5.20.1/node_modules/xstate/dist/assign-c3259787.esm.js",".././node_modules/.pnpm/xstate@5.20.1/node_modules/xstate/dist/StateMachine-c88ea5dd.esm.js",".././node_modules/.pnpm/xstate@5.20.1/node_modules/xstate/dist/log-1c257a58.esm.js",".././node_modules/.pnpm/xstate@5.20.1/node_modules/xstate/dist/xstate.esm.js",".././src/machines/formatterMachine.ts","../external node-commonjs \"events\"","../external node-commonjs \"tls\"",".././node_modules/.pnpm/ws@8.18.3/node_modules/ws/lib/receiver.js",".././node_modules/.pnpm/prettier@3.6.2/node_modules/prettier/index.cjs","../external node-commonjs \"https\"",".././src/providers/simpleFormattingProvider.ts",".././node_modules/.pnpm/ws@8.18.3/node_modules/ws/lib/constants.js","../external node-commonjs \"node:path\"",".././node_modules/.pnpm/ws@8.18.3/node_modules/ws/lib/buffer-util.js","../external node-commonjs \"path\"","../external node-commonjs \"crypto\"","../external node-commonjs \"url\"","../external node-commonjs \"node:http\"",".././src/machines/discoveryMachine.ts","../external node-commonjs \"node:crypto\"",".././node_modules/.pnpm/ws@8.18.3/node_modules/ws/lib/validation.js",".././src/providers/xstateFormattingProvider.ts",".././src/extension.ts",".././node_modules/.pnpm/ws@8.18.3/node_modules/ws/lib/sender.js","../external node-commonjs \"node:util\"","../external node-commonjs \"node:os\"",".././node_modules/.pnpm/ws@8.18.3/node_modules/ws/lib/event-target.js",".././node_modules/.pnpm/ws@8.18.3/node_modules/ws/lib/websocket-server.js","../external node-commonjs \"http\"",".././node_modules/.pnpm/ws@8.18.3/node_modules/ws/lib/subprotocol.js","../external node-commonjs \"util\"",".././node_modules/.pnpm/ws@8.18.3/node_modules/ws/lib/permessage-deflate.js",".././src/actors/webSocketServerActor.ts",".././src/actors/aiCommunicationBridge.ts","../external node-commonjs \"net\"",".././src/providers/formattingProvider.ts",".././src/core/debugLogger.ts","../external node-commonjs \"fs\"","../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/startup"],"sourcesContent":["// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"loaded\", otherwise not loaded yet\nvar installedChunks = {\n\t792: 1\n};\n\n// no on chunks loaded\n\nvar installChunk = (chunk) => {\n\tvar moreModules = chunk.modules, chunkIds = chunk.ids, runtime = chunk.runtime;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tfor(var i = 0; i < chunkIds.length; i++)\n\t\tinstalledChunks[chunkIds[i]] = 1;\n\n};\n\n// require() chunk loading for javascript\n__webpack_require__.f.require = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\tinstallChunk(require(\"./\" + __webpack_require__.u(chunkId)));\n\t\t} else installedChunks[chunkId] = 1;\n\t}\n};\n\n// no external install chunk\n\n// no HMR\n\n// no HMR manifest","import * as vscode from 'vscode';\n\n// Add the tokenizer event types\nexport type TokenizerEvent =\n  | { type: 'TEMPLATE_TAG'; tag: 'html' | 'css' }\n  | { type: 'BACKTICK' }\n  | { type: 'DOLLAR_LBRACE' }\n  | { type: 'LBRACE' }\n  | { type: 'RBRACE' }\n  | { type: 'NEWLINE' }\n  | { type: 'CHAR'; char: string }\n  | { type: 'EOF' };\n\nexport function tokenizeForMachine(text: string): TokenizerEvent[] {\n  const events: TokenizerEvent[] = [];\n  let i = 0;\n\n  // Starting tokenization - logging disabled to follow actor pattern\n\n  while (i < text.length) {\n    const char = text[i];\n\n    // Check for template tags\n    if (text.slice(i, i + 5) === 'html`') {\n      events.push({ type: 'TEMPLATE_TAG', tag: 'html' });\n      // Found html template tag\n      i += 4; // advance to the backtick\n    } else if (text.slice(i, i + 4) === 'css`') {\n      events.push({ type: 'TEMPLATE_TAG', tag: 'css' });\n      // Found css template tag\n      i += 3; // advance to the backtick\n    }\n    // Check for template literal markers\n    else if (char === '`') {\n      events.push({ type: 'BACKTICK' });\n    }\n    // Check for interpolation start\n    else if (char === '$' && text[i + 1] === '{') {\n      events.push({ type: 'DOLLAR_LBRACE' });\n      i++; // skip the {\n    }\n    // Check for braces\n    else if (char === '{') {\n      events.push({ type: 'LBRACE' });\n    } else if (char === '}') {\n      events.push({ type: 'RBRACE' });\n    }\n    // Check for newlines\n    else if (char === '\\n') {\n      events.push({ type: 'NEWLINE' });\n    }\n    // Regular character\n    else {\n      events.push({ type: 'CHAR', char });\n    }\n\n    i++;\n  }\n\n  events.push({ type: 'EOF' });\n  return events;\n}\n\n// Helper function to format document using XState machine\nexport function formatWithMachine(\n  text: string,\n  _version: string,\n  options: vscode.FormattingOptions\n): { edits: Array<{ range: vscode.Range; newText: string }> } {\n  const events = tokenizeForMachine(text);\n  const edits: Array<{ range: vscode.Range; newText: string }> = [];\n\n  // Tokenized events - logging disabled to follow actor pattern\n\n  // Process events to generate formatting edits\n  let currentLine = 0;\n  let currentColumn = 0;\n  const indentLevel = 0;\n  let inTemplate = false;\n  let templateType: 'html' | 'css' | null = null;\n\n  for (let i = 0; i < events.length; i++) {\n    const event = events[i];\n    const nextEvent = events[i + 1];\n\n    switch (event.type) {\n      case 'TEMPLATE_TAG':\n        templateType = event.tag;\n        inTemplate = true;\n        break;\n\n      case 'BACKTICK':\n        if (inTemplate && templateType) {\n          if (nextEvent && nextEvent.type !== 'EOF') {\n            // Add newline after opening backtick\n            const position = new vscode.Position(currentLine, currentColumn + 1);\n            const indent = options.insertSpaces\n              ? ' '.repeat(options.tabSize * (indentLevel + 1))\n              : '\\t'.repeat(indentLevel + 1);\n            const range = new vscode.Range(position, position);\n            edits.push({\n              range,\n              newText: `\\n${indent}`,\n            });\n          }\n          inTemplate = !inTemplate;\n        }\n        break;\n\n      case 'NEWLINE':\n        currentLine++;\n        currentColumn = 0;\n\n        if (inTemplate && templateType) {\n          // Add proper indentation for template content\n          const nextPos = new vscode.Position(currentLine, 0);\n          const indent = options.insertSpaces\n            ? ' '.repeat(options.tabSize * (indentLevel + 1))\n            : '\\t'.repeat(indentLevel + 1);\n          const range = new vscode.Range(nextPos, nextPos);\n          edits.push({\n            range,\n            newText: indent,\n          });\n        }\n        break;\n\n      case 'DOLLAR_LBRACE':\n        // Handle template expressions - no special formatting needed for now\n        break;\n\n      case 'LBRACE':\n      case 'RBRACE':\n        // Handle brace matching - no special formatting needed for now\n        break;\n\n      case 'CHAR':\n        currentColumn++;\n        break;\n\n      case 'EOF':\n        // End of file - finalize any pending edits\n        break;\n    }\n  }\n\n  return { edits };\n}\n","module.exports = require(\"buffer\");","/**\n * AI Communication Types and Interfaces\n *\n * This module defines the types for inter-AI communication using the actor model.\n * It enables AI agents like Claude (Claude Code) and Cursor to communicate through\n * a standardized message-passing interface.\n */\n\nimport type { ActorRef } from 'xstate';\n\n/**\n * Supported AI agent types\n */\nexport type AIAgentType = 'claude' | 'cursor' | 'copilot' | 'codewhisperer' | 'custom';\n\n/**\n * Message types for different communication scenarios\n */\nexport enum MessageType {\n  // Code Review\n  CODE_REVIEW_REQUEST = 'CODE_REVIEW_REQUEST',\n  CODE_REVIEW_RESPONSE = 'CODE_REVIEW_RESPONSE',\n\n  // Refactoring\n  REFACTOR_SUGGESTION = 'REFACTOR_SUGGESTION',\n  REFACTOR_ACCEPTED = 'REFACTOR_ACCEPTED',\n  REFACTOR_REJECTED = 'REFACTOR_REJECTED',\n\n  // Architecture\n  ARCHITECTURE_PROPOSAL = 'ARCHITECTURE_PROPOSAL',\n  ARCHITECTURE_FEEDBACK = 'ARCHITECTURE_FEEDBACK',\n\n  // Task Coordination\n  TASK_ASSIGNMENT = 'TASK_ASSIGNMENT',\n  TASK_STATUS_UPDATE = 'TASK_STATUS_UPDATE',\n  TASK_COMPLETED = 'TASK_COMPLETED',\n\n  // Collaboration\n  PAIR_PROGRAMMING_REQUEST = 'PAIR_PROGRAMMING_REQUEST',\n  PAIR_PROGRAMMING_RESPONSE = 'PAIR_PROGRAMMING_RESPONSE',\n\n  // Knowledge Sharing\n  KNOWLEDGE_QUERY = 'KNOWLEDGE_QUERY',\n  KNOWLEDGE_RESPONSE = 'KNOWLEDGE_RESPONSE',\n\n  // System\n  HANDSHAKE = 'HANDSHAKE',\n  HEARTBEAT = 'HEARTBEAT',\n  ACKNOWLEDGMENT = 'ACKNOWLEDGMENT',\n  ERROR = 'ERROR',\n\n  // Custom\n  CUSTOM = 'CUSTOM',\n}\n\n/**\n * Priority levels for message handling\n */\nexport enum MessagePriority {\n  LOW = 0,\n  NORMAL = 1,\n  HIGH = 2,\n  CRITICAL = 3,\n}\n\n/**\n * Communication channels for organizing messages\n */\nexport enum CommunicationChannel {\n  CODE_REVIEW = 'code_review',\n  REFACTORING = 'refactoring',\n  ARCHITECTURE = 'architecture',\n  TASK_COORDINATION = 'task_coordination',\n  KNOWLEDGE_SHARING = 'knowledge_sharing',\n  SYSTEM = 'system',\n  GENERAL = 'general',\n}\n\n/**\n * AI Agent identification and capabilities\n */\nexport interface AIAgent {\n  id: string;\n  type: AIAgentType;\n  name: string;\n  version: string;\n  capabilities: AICapability[];\n  metadata?: Record<string, unknown>;\n}\n\n/**\n * Capabilities that an AI agent can have\n */\nexport interface AICapability {\n  name: string;\n  version: string;\n  parameters?: Record<string, unknown>;\n}\n\n/**\n * Message metadata for tracking and debugging\n */\nexport interface MessageMetadata {\n  correlationId?: string;\n  replyTo?: string;\n  expiresAt?: number;\n  priority: MessagePriority;\n  channel: CommunicationChannel;\n  retryCount?: number;\n  encrypted?: boolean;\n  compressed?: boolean;\n}\n\n/**\n * Main message structure for AI communication\n */\nexport interface AIMessage<T = unknown> {\n  id: string;\n  timestamp: number;\n  source: AIAgent;\n  target: AIAgent | 'broadcast';\n  type: MessageType;\n  payload: T;\n  metadata: MessageMetadata;\n  signature?: string;\n}\n\n/**\n * Message acknowledgment\n */\nexport interface MessageAcknowledgment {\n  messageId: string;\n  status: 'received' | 'processing' | 'completed' | 'failed';\n  timestamp: number;\n  error?: string;\n}\n\n/**\n * Communication statistics\n */\nexport interface CommunicationStats {\n  messagesSent: number;\n  messagesReceived: number;\n  messagesDropped: number;\n  averageLatency: number;\n  activeConnections: number;\n  lastActivity: number;\n}\n\n/**\n * Events for the AI Communication Bridge Actor\n */\nexport type AICommunicationEvent =\n  | { type: 'SEND_MESSAGE'; message: AIMessage }\n  | { type: 'MESSAGE_RECEIVED'; message: AIMessage }\n  | { type: 'SUBSCRIBE'; channel: CommunicationChannel; callback: MessageHandler }\n  | { type: 'UNSUBSCRIBE'; channel: CommunicationChannel; handlerId: string }\n  | { type: 'CONNECT'; agent: AIAgent }\n  | { type: 'DISCONNECT'; agentId: string }\n  | { type: 'HEARTBEAT'; agentId: string }\n  | { type: 'GET_STATS' }\n  | { type: 'CLEAR_HISTORY' }\n  | { type: 'REPLAY_MESSAGES'; since: number }\n  | { type: 'ERROR'; error: Error };\n\n/**\n * Context for the AI Communication Bridge Actor\n */\nexport interface AICommunicationContext {\n  agents: Map<string, AIAgent>;\n  messageQueue: AIMessage[];\n  messageHistory: AIMessage[];\n  subscriptions: Map<CommunicationChannel, Set<MessageSubscription>>;\n  stats: CommunicationStats;\n  config: CommunicationConfig;\n  errors: Error[];\n}\n\n/**\n * Message handler function type\n */\nexport type MessageHandler = (message: AIMessage) => void | Promise<void>;\n\n/**\n * Message subscription\n */\nexport interface MessageSubscription {\n  id: string;\n  channel: CommunicationChannel;\n  handler: MessageHandler;\n  filter?: MessageFilter;\n}\n\n/**\n * Message filter for selective subscription\n */\nexport interface MessageFilter {\n  types?: MessageType[];\n  sources?: string[];\n  priority?: MessagePriority;\n}\n\n/**\n * Communication configuration\n */\nexport interface CommunicationConfig {\n  maxQueueSize: number;\n  maxHistorySize: number;\n  messageTimeout: number;\n  retryAttempts: number;\n  retryDelay: number;\n  enableEncryption: boolean;\n  enableCompression: boolean;\n  communicationMethod: 'file' | 'websocket' | 'ipc' | 'vscode-api';\n  fileStoragePath?: string;\n  websocketPort?: number;\n}\n\n/**\n * Common payload types for different message types\n */\nexport namespace MessagePayloads {\n  export interface CodeReviewRequest {\n    file: string;\n    lines?: [number, number];\n    context?: string;\n    urgency?: 'low' | 'medium' | 'high';\n  }\n\n  export interface CodeReviewResponse {\n    suggestions: CodeSuggestion[];\n    overallFeedback?: string;\n    approved?: boolean;\n  }\n\n  export interface CodeSuggestion {\n    line: number;\n    type: 'error' | 'warning' | 'info' | 'style';\n    message: string;\n    fix?: string;\n  }\n\n  export interface RefactoringSuggestion {\n    file: string;\n    description: string;\n    changes: FileChange[];\n    benefits: string[];\n    risks?: string[];\n  }\n\n  export interface FileChange {\n    file: string;\n    diff: string;\n    description: string;\n  }\n\n  export interface TaskAssignment {\n    taskId: string;\n    title: string;\n    description: string;\n    priority: 'low' | 'medium' | 'high' | 'critical';\n    deadline?: number;\n    dependencies?: string[];\n  }\n\n  export interface KnowledgeQuery {\n    question: string;\n    context?: string;\n    tags?: string[];\n  }\n\n  export interface KnowledgeResponse {\n    answer: string;\n    confidence: number;\n    sources?: string[];\n    followUpQuestions?: string[];\n  }\n}\n\n/**\n * Type guards for message types\n */\nexport const isCodeReviewRequest = (\n  message: AIMessage\n): message is AIMessage<MessagePayloads.CodeReviewRequest> => {\n  return message.type === MessageType.CODE_REVIEW_REQUEST;\n};\n\nexport const isCodeReviewResponse = (\n  message: AIMessage\n): message is AIMessage<MessagePayloads.CodeReviewResponse> => {\n  return message.type === MessageType.CODE_REVIEW_RESPONSE;\n};\n\n/**\n * Actor reference type for the communication bridge\n * The snapshot type is intentionally any as it varies based on the specific actor implementation\n */\n// biome-ignore lint/suspicious/noExplicitAny: Actor snapshot type varies by implementation\nexport type AICommunicationActor = ActorRef<any, AICommunicationEvent>;\n","module.exports = require(\"process\");","module.exports = require(\"vscode\");","module.exports = require(\"node:child_process\");","module.exports = require(\"node:fs/promises\");","module.exports = require(\"v8\");","'use strict';\n\nconst kDone = Symbol('kDone');\nconst kRun = Symbol('kRun');\n\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */\nclass Limiter {\n  /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */\n  constructor(concurrency) {\n    this[kDone] = () => {\n      this.pending--;\n      this[kRun]();\n    };\n    this.concurrency = concurrency || Infinity;\n    this.jobs = [];\n    this.pending = 0;\n  }\n\n  /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */\n  add(job) {\n    this.jobs.push(job);\n    this[kRun]();\n  }\n\n  /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */\n  [kRun]() {\n    if (this.pending === this.concurrency) return;\n\n    if (this.jobs.length) {\n      const job = this.jobs.shift();\n\n      this.pending++;\n      job(this[kDone]);\n    }\n  }\n}\n\nmodule.exports = Limiter;\n","module.exports = require(\"fs/promises\");","(function (factory) {\n  function interopModuleDefault() {\n    var module = factory();\n    return module.default || module;\n  }\n\n  if (typeof exports === \"object\" && typeof module === \"object\") {\n    module.exports = interopModuleDefault();\n  } else if (typeof define === \"function\" && define.amd) {\n    define(interopModuleDefault);\n  } else {\n    var root =\n      typeof globalThis !== \"undefined\"\n        ? globalThis\n        : typeof global !== \"undefined\"\n          ? global\n          : typeof self !== \"undefined\"\n            ? self\n            : this || {};\n    root.doc = interopModuleDefault();\n  }\n})(function () {\n  \"use strict\";\n  var __defProp = Object.defineProperty;\n  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;\n  var __getOwnPropNames = Object.getOwnPropertyNames;\n  var __hasOwnProp = Object.prototype.hasOwnProperty;\n  var __export = (target, all) => {\n    for (var name in all)\n      __defProp(target, name, { get: all[name], enumerable: true });\n  };\n  var __copyProps = (to, from, except, desc) => {\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n      for (let key of __getOwnPropNames(from))\n        if (!__hasOwnProp.call(to, key) && key !== except)\n          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n    }\n    return to;\n  };\n  var __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n  // src/document/public.js\n  var public_exports = {};\n  __export(public_exports, {\n    builders: () => builders,\n    printer: () => printer,\n    utils: () => utils\n  });\n\n  // src/document/constants.js\n  var DOC_TYPE_STRING = \"string\";\n  var DOC_TYPE_ARRAY = \"array\";\n  var DOC_TYPE_CURSOR = \"cursor\";\n  var DOC_TYPE_INDENT = \"indent\";\n  var DOC_TYPE_ALIGN = \"align\";\n  var DOC_TYPE_TRIM = \"trim\";\n  var DOC_TYPE_GROUP = \"group\";\n  var DOC_TYPE_FILL = \"fill\";\n  var DOC_TYPE_IF_BREAK = \"if-break\";\n  var DOC_TYPE_INDENT_IF_BREAK = \"indent-if-break\";\n  var DOC_TYPE_LINE_SUFFIX = \"line-suffix\";\n  var DOC_TYPE_LINE_SUFFIX_BOUNDARY = \"line-suffix-boundary\";\n  var DOC_TYPE_LINE = \"line\";\n  var DOC_TYPE_LABEL = \"label\";\n  var DOC_TYPE_BREAK_PARENT = \"break-parent\";\n  var VALID_OBJECT_DOC_TYPES = /* @__PURE__ */ new Set([\n    DOC_TYPE_CURSOR,\n    DOC_TYPE_INDENT,\n    DOC_TYPE_ALIGN,\n    DOC_TYPE_TRIM,\n    DOC_TYPE_GROUP,\n    DOC_TYPE_FILL,\n    DOC_TYPE_IF_BREAK,\n    DOC_TYPE_INDENT_IF_BREAK,\n    DOC_TYPE_LINE_SUFFIX,\n    DOC_TYPE_LINE_SUFFIX_BOUNDARY,\n    DOC_TYPE_LINE,\n    DOC_TYPE_LABEL,\n    DOC_TYPE_BREAK_PARENT\n  ]);\n\n  // scripts/build/shims/at.js\n  var at = (isOptionalObject, object, index) => {\n    if (isOptionalObject && (object === void 0 || object === null)) {\n      return;\n    }\n    if (Array.isArray(object) || typeof object === \"string\") {\n      return object[index < 0 ? object.length + index : index];\n    }\n    return object.at(index);\n  };\n  var at_default = at;\n\n  // node_modules/trim-newlines/index.js\n  function trimNewlinesEnd(string) {\n    let end = string.length;\n    while (end > 0 && (string[end - 1] === \"\\r\" || string[end - 1] === \"\\n\")) {\n      end--;\n    }\n    return end < string.length ? string.slice(0, end) : string;\n  }\n\n  // src/document/utils/get-doc-type.js\n  function getDocType(doc) {\n    if (typeof doc === \"string\") {\n      return DOC_TYPE_STRING;\n    }\n    if (Array.isArray(doc)) {\n      return DOC_TYPE_ARRAY;\n    }\n    if (!doc) {\n      return;\n    }\n    const { type } = doc;\n    if (VALID_OBJECT_DOC_TYPES.has(type)) {\n      return type;\n    }\n  }\n  var get_doc_type_default = getDocType;\n\n  // src/document/invalid-doc-error.js\n  var disjunctionListFormat = (list) => new Intl.ListFormat(\"en-US\", { type: \"disjunction\" }).format(list);\n  function getDocErrorMessage(doc) {\n    const type = doc === null ? \"null\" : typeof doc;\n    if (type !== \"string\" && type !== \"object\") {\n      return `Unexpected doc '${type}', \nExpected it to be 'string' or 'object'.`;\n    }\n    if (get_doc_type_default(doc)) {\n      throw new Error(\"doc is valid.\");\n    }\n    const objectType = Object.prototype.toString.call(doc);\n    if (objectType !== \"[object Object]\") {\n      return `Unexpected doc '${objectType}'.`;\n    }\n    const EXPECTED_TYPE_VALUES = disjunctionListFormat(\n      [...VALID_OBJECT_DOC_TYPES].map((type2) => `'${type2}'`)\n    );\n    return `Unexpected doc.type '${doc.type}'.\nExpected it to be ${EXPECTED_TYPE_VALUES}.`;\n  }\n  var InvalidDocError = class extends Error {\n    name = \"InvalidDocError\";\n    constructor(doc) {\n      super(getDocErrorMessage(doc));\n      this.doc = doc;\n    }\n  };\n  var invalid_doc_error_default = InvalidDocError;\n\n  // src/document/utils/traverse-doc.js\n  var traverseDocOnExitStackMarker = {};\n  function traverseDoc(doc, onEnter, onExit, shouldTraverseConditionalGroups) {\n    const docsStack = [doc];\n    while (docsStack.length > 0) {\n      const doc2 = docsStack.pop();\n      if (doc2 === traverseDocOnExitStackMarker) {\n        onExit(docsStack.pop());\n        continue;\n      }\n      if (onExit) {\n        docsStack.push(doc2, traverseDocOnExitStackMarker);\n      }\n      const docType = get_doc_type_default(doc2);\n      if (!docType) {\n        throw new invalid_doc_error_default(doc2);\n      }\n      if ((onEnter == null ? void 0 : onEnter(doc2)) === false) {\n        continue;\n      }\n      switch (docType) {\n        case DOC_TYPE_ARRAY:\n        case DOC_TYPE_FILL: {\n          const parts = docType === DOC_TYPE_ARRAY ? doc2 : doc2.parts;\n          for (let ic = parts.length, i = ic - 1; i >= 0; --i) {\n            docsStack.push(parts[i]);\n          }\n          break;\n        }\n        case DOC_TYPE_IF_BREAK:\n          docsStack.push(doc2.flatContents, doc2.breakContents);\n          break;\n        case DOC_TYPE_GROUP:\n          if (shouldTraverseConditionalGroups && doc2.expandedStates) {\n            for (let ic = doc2.expandedStates.length, i = ic - 1; i >= 0; --i) {\n              docsStack.push(doc2.expandedStates[i]);\n            }\n          } else {\n            docsStack.push(doc2.contents);\n          }\n          break;\n        case DOC_TYPE_ALIGN:\n        case DOC_TYPE_INDENT:\n        case DOC_TYPE_INDENT_IF_BREAK:\n        case DOC_TYPE_LABEL:\n        case DOC_TYPE_LINE_SUFFIX:\n          docsStack.push(doc2.contents);\n          break;\n        case DOC_TYPE_STRING:\n        case DOC_TYPE_CURSOR:\n        case DOC_TYPE_TRIM:\n        case DOC_TYPE_LINE_SUFFIX_BOUNDARY:\n        case DOC_TYPE_LINE:\n        case DOC_TYPE_BREAK_PARENT:\n          break;\n        default:\n          throw new invalid_doc_error_default(doc2);\n      }\n    }\n  }\n  var traverse_doc_default = traverseDoc;\n\n  // src/document/utils.js\n  function mapDoc(doc, cb) {\n    if (typeof doc === \"string\") {\n      return cb(doc);\n    }\n    const mapped = /* @__PURE__ */ new Map();\n    return rec(doc);\n    function rec(doc2) {\n      if (mapped.has(doc2)) {\n        return mapped.get(doc2);\n      }\n      const result = process2(doc2);\n      mapped.set(doc2, result);\n      return result;\n    }\n    function process2(doc2) {\n      switch (get_doc_type_default(doc2)) {\n        case DOC_TYPE_ARRAY:\n          return cb(doc2.map(rec));\n        case DOC_TYPE_FILL:\n          return cb({ ...doc2, parts: doc2.parts.map(rec) });\n        case DOC_TYPE_IF_BREAK:\n          return cb({\n            ...doc2,\n            breakContents: rec(doc2.breakContents),\n            flatContents: rec(doc2.flatContents)\n          });\n        case DOC_TYPE_GROUP: {\n          let { expandedStates, contents } = doc2;\n          if (expandedStates) {\n            expandedStates = expandedStates.map(rec);\n            contents = expandedStates[0];\n          } else {\n            contents = rec(contents);\n          }\n          return cb({ ...doc2, contents, expandedStates });\n        }\n        case DOC_TYPE_ALIGN:\n        case DOC_TYPE_INDENT:\n        case DOC_TYPE_INDENT_IF_BREAK:\n        case DOC_TYPE_LABEL:\n        case DOC_TYPE_LINE_SUFFIX:\n          return cb({ ...doc2, contents: rec(doc2.contents) });\n        case DOC_TYPE_STRING:\n        case DOC_TYPE_CURSOR:\n        case DOC_TYPE_TRIM:\n        case DOC_TYPE_LINE_SUFFIX_BOUNDARY:\n        case DOC_TYPE_LINE:\n        case DOC_TYPE_BREAK_PARENT:\n          return cb(doc2);\n        default:\n          throw new invalid_doc_error_default(doc2);\n      }\n    }\n  }\n  function findInDoc(doc, fn, defaultValue) {\n    let result = defaultValue;\n    let shouldSkipFurtherProcessing = false;\n    function findInDocOnEnterFn(doc2) {\n      if (shouldSkipFurtherProcessing) {\n        return false;\n      }\n      const maybeResult = fn(doc2);\n      if (maybeResult !== void 0) {\n        shouldSkipFurtherProcessing = true;\n        result = maybeResult;\n      }\n    }\n    traverse_doc_default(doc, findInDocOnEnterFn);\n    return result;\n  }\n  function willBreakFn(doc) {\n    if (doc.type === DOC_TYPE_GROUP && doc.break) {\n      return true;\n    }\n    if (doc.type === DOC_TYPE_LINE && doc.hard) {\n      return true;\n    }\n    if (doc.type === DOC_TYPE_BREAK_PARENT) {\n      return true;\n    }\n  }\n  function willBreak(doc) {\n    return findInDoc(doc, willBreakFn, false);\n  }\n  function breakParentGroup(groupStack) {\n    if (groupStack.length > 0) {\n      const parentGroup = at_default(\n        /* isOptionalObject */\n        false,\n        groupStack,\n        -1\n      );\n      if (!parentGroup.expandedStates && !parentGroup.break) {\n        parentGroup.break = \"propagated\";\n      }\n    }\n    return null;\n  }\n  function propagateBreaks(doc) {\n    const alreadyVisitedSet = /* @__PURE__ */ new Set();\n    const groupStack = [];\n    function propagateBreaksOnEnterFn(doc2) {\n      if (doc2.type === DOC_TYPE_BREAK_PARENT) {\n        breakParentGroup(groupStack);\n      }\n      if (doc2.type === DOC_TYPE_GROUP) {\n        groupStack.push(doc2);\n        if (alreadyVisitedSet.has(doc2)) {\n          return false;\n        }\n        alreadyVisitedSet.add(doc2);\n      }\n    }\n    function propagateBreaksOnExitFn(doc2) {\n      if (doc2.type === DOC_TYPE_GROUP) {\n        const group2 = groupStack.pop();\n        if (group2.break) {\n          breakParentGroup(groupStack);\n        }\n      }\n    }\n    traverse_doc_default(\n      doc,\n      propagateBreaksOnEnterFn,\n      propagateBreaksOnExitFn,\n      /* shouldTraverseConditionalGroups */\n      true\n    );\n  }\n  function removeLinesFn(doc) {\n    if (doc.type === DOC_TYPE_LINE && !doc.hard) {\n      return doc.soft ? \"\" : \" \";\n    }\n    if (doc.type === DOC_TYPE_IF_BREAK) {\n      return doc.flatContents;\n    }\n    return doc;\n  }\n  function removeLines(doc) {\n    return mapDoc(doc, removeLinesFn);\n  }\n  function stripTrailingHardlineFromParts(parts) {\n    parts = [...parts];\n    while (parts.length >= 2 && at_default(\n      /* isOptionalObject */\n      false,\n      parts,\n      -2\n    ).type === DOC_TYPE_LINE && at_default(\n      /* isOptionalObject */\n      false,\n      parts,\n      -1\n    ).type === DOC_TYPE_BREAK_PARENT) {\n      parts.length -= 2;\n    }\n    if (parts.length > 0) {\n      const lastPart = stripTrailingHardlineFromDoc(at_default(\n        /* isOptionalObject */\n        false,\n        parts,\n        -1\n      ));\n      parts[parts.length - 1] = lastPart;\n    }\n    return parts;\n  }\n  function stripTrailingHardlineFromDoc(doc) {\n    switch (get_doc_type_default(doc)) {\n      case DOC_TYPE_INDENT:\n      case DOC_TYPE_INDENT_IF_BREAK:\n      case DOC_TYPE_GROUP:\n      case DOC_TYPE_LINE_SUFFIX:\n      case DOC_TYPE_LABEL: {\n        const contents = stripTrailingHardlineFromDoc(doc.contents);\n        return { ...doc, contents };\n      }\n      case DOC_TYPE_IF_BREAK:\n        return {\n          ...doc,\n          breakContents: stripTrailingHardlineFromDoc(doc.breakContents),\n          flatContents: stripTrailingHardlineFromDoc(doc.flatContents)\n        };\n      case DOC_TYPE_FILL:\n        return { ...doc, parts: stripTrailingHardlineFromParts(doc.parts) };\n      case DOC_TYPE_ARRAY:\n        return stripTrailingHardlineFromParts(doc);\n      case DOC_TYPE_STRING:\n        return trimNewlinesEnd(doc);\n      case DOC_TYPE_ALIGN:\n      case DOC_TYPE_CURSOR:\n      case DOC_TYPE_TRIM:\n      case DOC_TYPE_LINE_SUFFIX_BOUNDARY:\n      case DOC_TYPE_LINE:\n      case DOC_TYPE_BREAK_PARENT:\n        break;\n      default:\n        throw new invalid_doc_error_default(doc);\n    }\n    return doc;\n  }\n  function stripTrailingHardline(doc) {\n    return stripTrailingHardlineFromDoc(cleanDoc(doc));\n  }\n  function cleanDocFn(doc) {\n    switch (get_doc_type_default(doc)) {\n      case DOC_TYPE_FILL:\n        if (doc.parts.every((part) => part === \"\")) {\n          return \"\";\n        }\n        break;\n      case DOC_TYPE_GROUP:\n        if (!doc.contents && !doc.id && !doc.break && !doc.expandedStates) {\n          return \"\";\n        }\n        if (doc.contents.type === DOC_TYPE_GROUP && doc.contents.id === doc.id && doc.contents.break === doc.break && doc.contents.expandedStates === doc.expandedStates) {\n          return doc.contents;\n        }\n        break;\n      case DOC_TYPE_ALIGN:\n      case DOC_TYPE_INDENT:\n      case DOC_TYPE_INDENT_IF_BREAK:\n      case DOC_TYPE_LINE_SUFFIX:\n        if (!doc.contents) {\n          return \"\";\n        }\n        break;\n      case DOC_TYPE_IF_BREAK:\n        if (!doc.flatContents && !doc.breakContents) {\n          return \"\";\n        }\n        break;\n      case DOC_TYPE_ARRAY: {\n        const parts = [];\n        for (const part of doc) {\n          if (!part) {\n            continue;\n          }\n          const [currentPart, ...restParts] = Array.isArray(part) ? part : [part];\n          if (typeof currentPart === \"string\" && typeof at_default(\n            /* isOptionalObject */\n            false,\n            parts,\n            -1\n          ) === \"string\") {\n            parts[parts.length - 1] += currentPart;\n          } else {\n            parts.push(currentPart);\n          }\n          parts.push(...restParts);\n        }\n        if (parts.length === 0) {\n          return \"\";\n        }\n        if (parts.length === 1) {\n          return parts[0];\n        }\n        return parts;\n      }\n      case DOC_TYPE_STRING:\n      case DOC_TYPE_CURSOR:\n      case DOC_TYPE_TRIM:\n      case DOC_TYPE_LINE_SUFFIX_BOUNDARY:\n      case DOC_TYPE_LINE:\n      case DOC_TYPE_LABEL:\n      case DOC_TYPE_BREAK_PARENT:\n        break;\n      default:\n        throw new invalid_doc_error_default(doc);\n    }\n    return doc;\n  }\n  function cleanDoc(doc) {\n    return mapDoc(doc, (currentDoc) => cleanDocFn(currentDoc));\n  }\n  function replaceEndOfLine(doc, replacement = literalline) {\n    return mapDoc(\n      doc,\n      (currentDoc) => typeof currentDoc === \"string\" ? join(replacement, currentDoc.split(\"\\n\")) : currentDoc\n    );\n  }\n  function canBreakFn(doc) {\n    if (doc.type === DOC_TYPE_LINE) {\n      return true;\n    }\n  }\n  function canBreak(doc) {\n    return findInDoc(doc, canBreakFn, false);\n  }\n\n  // src/document/utils/assert-doc.js\n  var noop = () => {\n  };\n  var assertDoc = true ? noop : function(doc) {\n    traverse_doc_default(doc, (doc2) => {\n      if (checked.has(doc2)) {\n        return false;\n      }\n      if (typeof doc2 !== \"string\") {\n        checked.add(doc2);\n      }\n    });\n  };\n  var assertDocArray = true ? noop : function(docs, optional = false) {\n    if (optional && !docs) {\n      return;\n    }\n    if (!Array.isArray(docs)) {\n      throw new TypeError(\"Unexpected doc array.\");\n    }\n    for (const doc of docs) {\n      assertDoc(doc);\n    }\n  };\n  var assertDocFillParts = true ? noop : (\n    /**\n     * @param {Doc[]} parts\n     */\n    function(parts) {\n      assertDocArray(parts);\n      if (parts.length > 1 && isEmptyDoc(at_default(\n        /* isOptionalObject */\n        false,\n        parts,\n        -1\n      ))) {\n        parts = parts.slice(0, -1);\n      }\n      for (const [i, doc] of parts.entries()) {\n        if (i % 2 === 1 && !isValidSeparator(doc)) {\n          const type = get_doc_type_default(doc);\n          throw new Error(\n            `Unexpected non-line-break doc at ${i}. Doc type is ${type}.`\n          );\n        }\n      }\n    }\n  );\n\n  // src/document/builders.js\n  function indent(contents) {\n    assertDoc(contents);\n    return { type: DOC_TYPE_INDENT, contents };\n  }\n  function align(widthOrString, contents) {\n    assertDoc(contents);\n    return { type: DOC_TYPE_ALIGN, contents, n: widthOrString };\n  }\n  function group(contents, opts = {}) {\n    assertDoc(contents);\n    assertDocArray(\n      opts.expandedStates,\n      /* optional */\n      true\n    );\n    return {\n      type: DOC_TYPE_GROUP,\n      id: opts.id,\n      contents,\n      break: Boolean(opts.shouldBreak),\n      expandedStates: opts.expandedStates\n    };\n  }\n  function dedentToRoot(contents) {\n    return align(Number.NEGATIVE_INFINITY, contents);\n  }\n  function markAsRoot(contents) {\n    return align({ type: \"root\" }, contents);\n  }\n  function dedent(contents) {\n    return align(-1, contents);\n  }\n  function conditionalGroup(states, opts) {\n    return group(states[0], { ...opts, expandedStates: states });\n  }\n  function fill(parts) {\n    assertDocFillParts(parts);\n    return { type: DOC_TYPE_FILL, parts };\n  }\n  function ifBreak(breakContents, flatContents = \"\", opts = {}) {\n    assertDoc(breakContents);\n    if (flatContents !== \"\") {\n      assertDoc(flatContents);\n    }\n    return {\n      type: DOC_TYPE_IF_BREAK,\n      breakContents,\n      flatContents,\n      groupId: opts.groupId\n    };\n  }\n  function indentIfBreak(contents, opts) {\n    assertDoc(contents);\n    return {\n      type: DOC_TYPE_INDENT_IF_BREAK,\n      contents,\n      groupId: opts.groupId,\n      negate: opts.negate\n    };\n  }\n  function lineSuffix(contents) {\n    assertDoc(contents);\n    return { type: DOC_TYPE_LINE_SUFFIX, contents };\n  }\n  var lineSuffixBoundary = { type: DOC_TYPE_LINE_SUFFIX_BOUNDARY };\n  var breakParent = { type: DOC_TYPE_BREAK_PARENT };\n  var trim = { type: DOC_TYPE_TRIM };\n  var hardlineWithoutBreakParent = { type: DOC_TYPE_LINE, hard: true };\n  var literallineWithoutBreakParent = {\n    type: DOC_TYPE_LINE,\n    hard: true,\n    literal: true\n  };\n  var line = { type: DOC_TYPE_LINE };\n  var softline = { type: DOC_TYPE_LINE, soft: true };\n  var hardline = [hardlineWithoutBreakParent, breakParent];\n  var literalline = [literallineWithoutBreakParent, breakParent];\n  var cursor = { type: DOC_TYPE_CURSOR };\n  function join(separator, docs) {\n    assertDoc(separator);\n    assertDocArray(docs);\n    const parts = [];\n    for (let i = 0; i < docs.length; i++) {\n      if (i !== 0) {\n        parts.push(separator);\n      }\n      parts.push(docs[i]);\n    }\n    return parts;\n  }\n  function addAlignmentToDoc(doc, size, tabWidth) {\n    assertDoc(doc);\n    let aligned = doc;\n    if (size > 0) {\n      for (let i = 0; i < Math.floor(size / tabWidth); ++i) {\n        aligned = indent(aligned);\n      }\n      aligned = align(size % tabWidth, aligned);\n      aligned = align(Number.NEGATIVE_INFINITY, aligned);\n    }\n    return aligned;\n  }\n  function label(label2, contents) {\n    assertDoc(contents);\n    return label2 ? { type: DOC_TYPE_LABEL, label: label2, contents } : contents;\n  }\n\n  // scripts/build/shims/string-replace-all.js\n  var stringReplaceAll = (isOptionalObject, original, pattern, replacement) => {\n    if (isOptionalObject && (original === void 0 || original === null)) {\n      return;\n    }\n    if (original.replaceAll) {\n      return original.replaceAll(pattern, replacement);\n    }\n    if (pattern.global) {\n      return original.replace(pattern, replacement);\n    }\n    return original.split(pattern).join(replacement);\n  };\n  var string_replace_all_default = stringReplaceAll;\n\n  // src/common/end-of-line.js\n  function convertEndOfLineToChars(value) {\n    switch (value) {\n      case \"cr\":\n        return \"\\r\";\n      case \"crlf\":\n        return \"\\r\\n\";\n      default:\n        return \"\\n\";\n    }\n  }\n\n  // node_modules/emoji-regex/index.mjs\n  var emoji_regex_default = () => {\n    return /[#*0-9]\\uFE0F?\\u20E3|[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23ED-\\u23EF\\u23F1\\u23F2\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB\\u25FC\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692\\u2694-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A7\\u26AA\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C8\\u26CF\\u26D1\\u26E9\\u26F0-\\u26F5\\u26F7\\u26F8\\u26FA\\u2702\\u2708\\u2709\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2733\\u2734\\u2744\\u2747\\u2757\\u2763\\u27A1\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B55\\u3030\\u303D\\u3297\\u3299]\\uFE0F?|[\\u261D\\u270C\\u270D](?:\\uD83C[\\uDFFB-\\uDFFF]|\\uFE0F)?|[\\u270A\\u270B](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u2693\\u26A1\\u26AB\\u26C5\\u26CE\\u26D4\\u26EA\\u26FD\\u2705\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2795-\\u2797\\u27B0\\u27BF\\u2B50]|\\u26D3\\uFE0F?(?:\\u200D\\uD83D\\uDCA5)?|\\u26F9(?:\\uD83C[\\uDFFB-\\uDFFF]|\\uFE0F)?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\u2764\\uFE0F?(?:\\u200D(?:\\uD83D\\uDD25|\\uD83E\\uDE79))?|\\uD83C(?:[\\uDC04\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDE02\\uDE37\\uDF21\\uDF24-\\uDF2C\\uDF36\\uDF7D\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E\\uDF9F\\uDFCD\\uDFCE\\uDFD4-\\uDFDF\\uDFF5\\uDFF7]\\uFE0F?|[\\uDF85\\uDFC2\\uDFC7](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDFC4\\uDFCA](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDFCB\\uDFCC](?:\\uD83C[\\uDFFB-\\uDFFF]|\\uFE0F)?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF43\\uDF45-\\uDF4A\\uDF4C-\\uDF7C\\uDF7E-\\uDF84\\uDF86-\\uDF93\\uDFA0-\\uDFC1\\uDFC5\\uDFC6\\uDFC8\\uDFC9\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF8-\\uDFFF]|\\uDDE6\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF]|\\uDDE7\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF]|\\uDDE8\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF7\\uDDFA-\\uDDFF]|\\uDDE9\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF]|\\uDDEA\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA]|\\uDDEB\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7]|\\uDDEC\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE]|\\uDDED\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA]|\\uDDEE\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9]|\\uDDEF\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5]|\\uDDF0\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF]|\\uDDF1\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE]|\\uDDF2\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF]|\\uDDF3\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF]|\\uDDF4\\uD83C\\uDDF2|\\uDDF5\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE]|\\uDDF6\\uD83C\\uDDE6|\\uDDF7\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC]|\\uDDF8\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF]|\\uDDF9\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF]|\\uDDFA\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF]|\\uDDFB\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA]|\\uDDFC\\uD83C[\\uDDEB\\uDDF8]|\\uDDFD\\uD83C\\uDDF0|\\uDDFE\\uD83C[\\uDDEA\\uDDF9]|\\uDDFF\\uD83C[\\uDDE6\\uDDF2\\uDDFC]|\\uDF44(?:\\u200D\\uD83D\\uDFEB)?|\\uDF4B(?:\\u200D\\uD83D\\uDFE9)?|\\uDFC3(?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D(?:[\\u2640\\u2642]\\uFE0F?(?:\\u200D\\u27A1\\uFE0F?)?|\\u27A1\\uFE0F?))?|\\uDFF3\\uFE0F?(?:\\u200D(?:\\u26A7\\uFE0F?|\\uD83C\\uDF08))?|\\uDFF4(?:\\u200D\\u2620\\uFE0F?|\\uDB40\\uDC67\\uDB40\\uDC62\\uDB40(?:\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F)?)|\\uD83D(?:[\\uDC3F\\uDCFD\\uDD49\\uDD4A\\uDD6F\\uDD70\\uDD73\\uDD76-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA\\uDECB\\uDECD-\\uDECF\\uDEE0-\\uDEE5\\uDEE9\\uDEF0\\uDEF3]\\uFE0F?|[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDC8F\\uDC91\\uDCAA\\uDD7A\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4\\uDEB5](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDD74\\uDD90](?:\\uD83C[\\uDFFB-\\uDFFF]|\\uFE0F)?|[\\uDC00-\\uDC07\\uDC09-\\uDC14\\uDC16-\\uDC25\\uDC27-\\uDC3A\\uDC3C-\\uDC3E\\uDC40\\uDC44\\uDC45\\uDC51-\\uDC65\\uDC6A\\uDC79-\\uDC7B\\uDC7D-\\uDC80\\uDC84\\uDC88-\\uDC8E\\uDC90\\uDC92-\\uDCA9\\uDCAB-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDDA4\\uDDFB-\\uDE2D\\uDE2F-\\uDE34\\uDE37-\\uDE41\\uDE43\\uDE44\\uDE48-\\uDE4A\\uDE80-\\uDEA2\\uDEA4-\\uDEB3\\uDEB7-\\uDEBF\\uDEC1-\\uDEC5\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEDC-\\uDEDF\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB\\uDFF0]|\\uDC08(?:\\u200D\\u2B1B)?|\\uDC15(?:\\u200D\\uD83E\\uDDBA)?|\\uDC26(?:\\u200D(?:\\u2B1B|\\uD83D\\uDD25))?|\\uDC3B(?:\\u200D\\u2744\\uFE0F?)?|\\uDC41\\uFE0F?(?:\\u200D\\uD83D\\uDDE8\\uFE0F?)?|\\uDC68(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D(?:[\\uDC68\\uDC69]\\u200D\\uD83D(?:\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?)|[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?)|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]))|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFC-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB-\\uDFFE])))?))?|\\uDC69(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?[\\uDC68\\uDC69]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D(?:[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?|\\uDC69\\u200D\\uD83D(?:\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?))|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]))|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFC-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB-\\uDFFE])))?))?|\\uDC6F(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\uDD75(?:\\uD83C[\\uDFFB-\\uDFFF]|\\uFE0F)?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\uDE2E(?:\\u200D\\uD83D\\uDCA8)?|\\uDE35(?:\\u200D\\uD83D\\uDCAB)?|\\uDE36(?:\\u200D\\uD83C\\uDF2B\\uFE0F?)?|\\uDE42(?:\\u200D[\\u2194\\u2195]\\uFE0F?)?|\\uDEB6(?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D(?:[\\u2640\\u2642]\\uFE0F?(?:\\u200D\\u27A1\\uFE0F?)?|\\u27A1\\uFE0F?))?)|\\uD83E(?:[\\uDD0C\\uDD0F\\uDD18-\\uDD1F\\uDD30-\\uDD34\\uDD36\\uDD77\\uDDB5\\uDDB6\\uDDBB\\uDDD2\\uDDD3\\uDDD5\\uDEC3-\\uDEC5\\uDEF0\\uDEF2-\\uDEF8](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD\\uDDCF\\uDDD4\\uDDD6-\\uDDDD](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDDDE\\uDDDF](?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDD0D\\uDD0E\\uDD10-\\uDD17\\uDD20-\\uDD25\\uDD27-\\uDD2F\\uDD3A\\uDD3F-\\uDD45\\uDD47-\\uDD76\\uDD78-\\uDDB4\\uDDB7\\uDDBA\\uDDBC-\\uDDCC\\uDDD0\\uDDE0-\\uDDFF\\uDE70-\\uDE7C\\uDE80-\\uDE89\\uDE8F-\\uDEC2\\uDEC6\\uDECE-\\uDEDC\\uDEDF-\\uDEE9]|\\uDD3C(?:\\u200D[\\u2640\\u2642]\\uFE0F?|\\uD83C[\\uDFFB-\\uDFFF])?|\\uDDCE(?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D(?:[\\u2640\\u2642]\\uFE0F?(?:\\u200D\\u27A1\\uFE0F?)?|\\u27A1\\uFE0F?))?|\\uDDD1(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1|\\uDDD1\\u200D\\uD83E\\uDDD2(?:\\u200D\\uD83E\\uDDD2)?|\\uDDD2(?:\\u200D\\uD83E\\uDDD2)?))|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFC-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB\\uDFFD-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFD\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFE]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?))?|\\uDEF1(?:\\uD83C(?:\\uDFFB(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFC-\\uDFFF])?|\\uDFFC(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])?|\\uDFFD(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])?|\\uDFFE(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])?|\\uDFFF(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB-\\uDFFE])?))?)/g;\n  };\n\n  // node_modules/get-east-asian-width/lookup.js\n  function isFullWidth(x) {\n    return x === 12288 || x >= 65281 && x <= 65376 || x >= 65504 && x <= 65510;\n  }\n  function isWide(x) {\n    return x >= 4352 && x <= 4447 || x === 8986 || x === 8987 || x === 9001 || x === 9002 || x >= 9193 && x <= 9196 || x === 9200 || x === 9203 || x === 9725 || x === 9726 || x === 9748 || x === 9749 || x >= 9776 && x <= 9783 || x >= 9800 && x <= 9811 || x === 9855 || x >= 9866 && x <= 9871 || x === 9875 || x === 9889 || x === 9898 || x === 9899 || x === 9917 || x === 9918 || x === 9924 || x === 9925 || x === 9934 || x === 9940 || x === 9962 || x === 9970 || x === 9971 || x === 9973 || x === 9978 || x === 9981 || x === 9989 || x === 9994 || x === 9995 || x === 10024 || x === 10060 || x === 10062 || x >= 10067 && x <= 10069 || x === 10071 || x >= 10133 && x <= 10135 || x === 10160 || x === 10175 || x === 11035 || x === 11036 || x === 11088 || x === 11093 || x >= 11904 && x <= 11929 || x >= 11931 && x <= 12019 || x >= 12032 && x <= 12245 || x >= 12272 && x <= 12287 || x >= 12289 && x <= 12350 || x >= 12353 && x <= 12438 || x >= 12441 && x <= 12543 || x >= 12549 && x <= 12591 || x >= 12593 && x <= 12686 || x >= 12688 && x <= 12773 || x >= 12783 && x <= 12830 || x >= 12832 && x <= 12871 || x >= 12880 && x <= 42124 || x >= 42128 && x <= 42182 || x >= 43360 && x <= 43388 || x >= 44032 && x <= 55203 || x >= 63744 && x <= 64255 || x >= 65040 && x <= 65049 || x >= 65072 && x <= 65106 || x >= 65108 && x <= 65126 || x >= 65128 && x <= 65131 || x >= 94176 && x <= 94180 || x === 94192 || x === 94193 || x >= 94208 && x <= 100343 || x >= 100352 && x <= 101589 || x >= 101631 && x <= 101640 || x >= 110576 && x <= 110579 || x >= 110581 && x <= 110587 || x === 110589 || x === 110590 || x >= 110592 && x <= 110882 || x === 110898 || x >= 110928 && x <= 110930 || x === 110933 || x >= 110948 && x <= 110951 || x >= 110960 && x <= 111355 || x >= 119552 && x <= 119638 || x >= 119648 && x <= 119670 || x === 126980 || x === 127183 || x === 127374 || x >= 127377 && x <= 127386 || x >= 127488 && x <= 127490 || x >= 127504 && x <= 127547 || x >= 127552 && x <= 127560 || x === 127568 || x === 127569 || x >= 127584 && x <= 127589 || x >= 127744 && x <= 127776 || x >= 127789 && x <= 127797 || x >= 127799 && x <= 127868 || x >= 127870 && x <= 127891 || x >= 127904 && x <= 127946 || x >= 127951 && x <= 127955 || x >= 127968 && x <= 127984 || x === 127988 || x >= 127992 && x <= 128062 || x === 128064 || x >= 128066 && x <= 128252 || x >= 128255 && x <= 128317 || x >= 128331 && x <= 128334 || x >= 128336 && x <= 128359 || x === 128378 || x === 128405 || x === 128406 || x === 128420 || x >= 128507 && x <= 128591 || x >= 128640 && x <= 128709 || x === 128716 || x >= 128720 && x <= 128722 || x >= 128725 && x <= 128727 || x >= 128732 && x <= 128735 || x === 128747 || x === 128748 || x >= 128756 && x <= 128764 || x >= 128992 && x <= 129003 || x === 129008 || x >= 129292 && x <= 129338 || x >= 129340 && x <= 129349 || x >= 129351 && x <= 129535 || x >= 129648 && x <= 129660 || x >= 129664 && x <= 129673 || x >= 129679 && x <= 129734 || x >= 129742 && x <= 129756 || x >= 129759 && x <= 129769 || x >= 129776 && x <= 129784 || x >= 131072 && x <= 196605 || x >= 196608 && x <= 262141;\n  }\n\n  // node_modules/get-east-asian-width/index.js\n  var _isNarrowWidth = (codePoint) => !(isFullWidth(codePoint) || isWide(codePoint));\n\n  // src/utils/get-string-width.js\n  var notAsciiRegex = /[^\\x20-\\x7F]/u;\n  function getStringWidth(text) {\n    if (!text) {\n      return 0;\n    }\n    if (!notAsciiRegex.test(text)) {\n      return text.length;\n    }\n    text = text.replace(emoji_regex_default(), \"  \");\n    let width = 0;\n    for (const character of text) {\n      const codePoint = character.codePointAt(0);\n      if (codePoint <= 31 || codePoint >= 127 && codePoint <= 159) {\n        continue;\n      }\n      if (codePoint >= 768 && codePoint <= 879) {\n        continue;\n      }\n      width += _isNarrowWidth(codePoint) ? 1 : 2;\n    }\n    return width;\n  }\n  var get_string_width_default = getStringWidth;\n\n  // src/document/printer.js\n  var MODE_BREAK = Symbol(\"MODE_BREAK\");\n  var MODE_FLAT = Symbol(\"MODE_FLAT\");\n  var CURSOR_PLACEHOLDER = Symbol(\"cursor\");\n  var DOC_FILL_PRINTED_LENGTH = Symbol(\"DOC_FILL_PRINTED_LENGTH\");\n  function rootIndent() {\n    return { value: \"\", length: 0, queue: [] };\n  }\n  function makeIndent(ind, options) {\n    return generateInd(ind, { type: \"indent\" }, options);\n  }\n  function makeAlign(indent2, widthOrDoc, options) {\n    if (widthOrDoc === Number.NEGATIVE_INFINITY) {\n      return indent2.root || rootIndent();\n    }\n    if (widthOrDoc < 0) {\n      return generateInd(indent2, { type: \"dedent\" }, options);\n    }\n    if (!widthOrDoc) {\n      return indent2;\n    }\n    if (widthOrDoc.type === \"root\") {\n      return { ...indent2, root: indent2 };\n    }\n    const alignType = typeof widthOrDoc === \"string\" ? \"stringAlign\" : \"numberAlign\";\n    return generateInd(indent2, { type: alignType, n: widthOrDoc }, options);\n  }\n  function generateInd(ind, newPart, options) {\n    const queue = newPart.type === \"dedent\" ? ind.queue.slice(0, -1) : [...ind.queue, newPart];\n    let value = \"\";\n    let length = 0;\n    let lastTabs = 0;\n    let lastSpaces = 0;\n    for (const part of queue) {\n      switch (part.type) {\n        case \"indent\":\n          flush();\n          if (options.useTabs) {\n            addTabs(1);\n          } else {\n            addSpaces(options.tabWidth);\n          }\n          break;\n        case \"stringAlign\":\n          flush();\n          value += part.n;\n          length += part.n.length;\n          break;\n        case \"numberAlign\":\n          lastTabs += 1;\n          lastSpaces += part.n;\n          break;\n        default:\n          throw new Error(`Unexpected type '${part.type}'`);\n      }\n    }\n    flushSpaces();\n    return { ...ind, value, length, queue };\n    function addTabs(count) {\n      value += \"\t\".repeat(count);\n      length += options.tabWidth * count;\n    }\n    function addSpaces(count) {\n      value += \" \".repeat(count);\n      length += count;\n    }\n    function flush() {\n      if (options.useTabs) {\n        flushTabs();\n      } else {\n        flushSpaces();\n      }\n    }\n    function flushTabs() {\n      if (lastTabs > 0) {\n        addTabs(lastTabs);\n      }\n      resetLast();\n    }\n    function flushSpaces() {\n      if (lastSpaces > 0) {\n        addSpaces(lastSpaces);\n      }\n      resetLast();\n    }\n    function resetLast() {\n      lastTabs = 0;\n      lastSpaces = 0;\n    }\n  }\n  function trim2(out) {\n    let trimCount = 0;\n    let cursorCount = 0;\n    let outIndex = out.length;\n    outer: while (outIndex--) {\n      const last = out[outIndex];\n      if (last === CURSOR_PLACEHOLDER) {\n        cursorCount++;\n        continue;\n      }\n      if (false) {\n        throw new Error(`Unexpected value in trim: '${typeof last}'`);\n      }\n      for (let charIndex = last.length - 1; charIndex >= 0; charIndex--) {\n        const char = last[charIndex];\n        if (char === \" \" || char === \"\t\") {\n          trimCount++;\n        } else {\n          out[outIndex] = last.slice(0, charIndex + 1);\n          break outer;\n        }\n      }\n    }\n    if (trimCount > 0 || cursorCount > 0) {\n      out.length = outIndex + 1;\n      while (cursorCount-- > 0) {\n        out.push(CURSOR_PLACEHOLDER);\n      }\n    }\n    return trimCount;\n  }\n  function fits(next, restCommands, width, hasLineSuffix, groupModeMap, mustBeFlat) {\n    if (width === Number.POSITIVE_INFINITY) {\n      return true;\n    }\n    let restIdx = restCommands.length;\n    const cmds = [next];\n    const out = [];\n    while (width >= 0) {\n      if (cmds.length === 0) {\n        if (restIdx === 0) {\n          return true;\n        }\n        cmds.push(restCommands[--restIdx]);\n        continue;\n      }\n      const { mode, doc } = cmds.pop();\n      const docType = get_doc_type_default(doc);\n      switch (docType) {\n        case DOC_TYPE_STRING:\n          out.push(doc);\n          width -= get_string_width_default(doc);\n          break;\n        case DOC_TYPE_ARRAY:\n        case DOC_TYPE_FILL: {\n          const parts = docType === DOC_TYPE_ARRAY ? doc : doc.parts;\n          const end = doc[DOC_FILL_PRINTED_LENGTH] ?? 0;\n          for (let i = parts.length - 1; i >= end; i--) {\n            cmds.push({ mode, doc: parts[i] });\n          }\n          break;\n        }\n        case DOC_TYPE_INDENT:\n        case DOC_TYPE_ALIGN:\n        case DOC_TYPE_INDENT_IF_BREAK:\n        case DOC_TYPE_LABEL:\n          cmds.push({ mode, doc: doc.contents });\n          break;\n        case DOC_TYPE_TRIM:\n          width += trim2(out);\n          break;\n        case DOC_TYPE_GROUP: {\n          if (mustBeFlat && doc.break) {\n            return false;\n          }\n          const groupMode = doc.break ? MODE_BREAK : mode;\n          const contents = doc.expandedStates && groupMode === MODE_BREAK ? at_default(\n            /* isOptionalObject */\n            false,\n            doc.expandedStates,\n            -1\n          ) : doc.contents;\n          cmds.push({ mode: groupMode, doc: contents });\n          break;\n        }\n        case DOC_TYPE_IF_BREAK: {\n          const groupMode = doc.groupId ? groupModeMap[doc.groupId] || MODE_FLAT : mode;\n          const contents = groupMode === MODE_BREAK ? doc.breakContents : doc.flatContents;\n          if (contents) {\n            cmds.push({ mode, doc: contents });\n          }\n          break;\n        }\n        case DOC_TYPE_LINE:\n          if (mode === MODE_BREAK || doc.hard) {\n            return true;\n          }\n          if (!doc.soft) {\n            out.push(\" \");\n            width--;\n          }\n          break;\n        case DOC_TYPE_LINE_SUFFIX:\n          hasLineSuffix = true;\n          break;\n        case DOC_TYPE_LINE_SUFFIX_BOUNDARY:\n          if (hasLineSuffix) {\n            return false;\n          }\n          break;\n      }\n    }\n    return false;\n  }\n  function printDocToString(doc, options) {\n    const groupModeMap = {};\n    const width = options.printWidth;\n    const newLine = convertEndOfLineToChars(options.endOfLine);\n    let pos = 0;\n    const cmds = [{ ind: rootIndent(), mode: MODE_BREAK, doc }];\n    const out = [];\n    let shouldRemeasure = false;\n    const lineSuffix2 = [];\n    let printedCursorCount = 0;\n    propagateBreaks(doc);\n    while (cmds.length > 0) {\n      const { ind, mode, doc: doc2 } = cmds.pop();\n      switch (get_doc_type_default(doc2)) {\n        case DOC_TYPE_STRING: {\n          const formatted = newLine !== \"\\n\" ? string_replace_all_default(\n            /* isOptionalObject */\n            false,\n            doc2,\n            \"\\n\",\n            newLine\n          ) : doc2;\n          out.push(formatted);\n          if (cmds.length > 0) {\n            pos += get_string_width_default(formatted);\n          }\n          break;\n        }\n        case DOC_TYPE_ARRAY:\n          for (let i = doc2.length - 1; i >= 0; i--) {\n            cmds.push({ ind, mode, doc: doc2[i] });\n          }\n          break;\n        case DOC_TYPE_CURSOR:\n          if (printedCursorCount >= 2) {\n            throw new Error(\"There are too many 'cursor' in doc.\");\n          }\n          out.push(CURSOR_PLACEHOLDER);\n          printedCursorCount++;\n          break;\n        case DOC_TYPE_INDENT:\n          cmds.push({ ind: makeIndent(ind, options), mode, doc: doc2.contents });\n          break;\n        case DOC_TYPE_ALIGN:\n          cmds.push({\n            ind: makeAlign(ind, doc2.n, options),\n            mode,\n            doc: doc2.contents\n          });\n          break;\n        case DOC_TYPE_TRIM:\n          pos -= trim2(out);\n          break;\n        case DOC_TYPE_GROUP:\n          switch (mode) {\n            case MODE_FLAT:\n              if (!shouldRemeasure) {\n                cmds.push({\n                  ind,\n                  mode: doc2.break ? MODE_BREAK : MODE_FLAT,\n                  doc: doc2.contents\n                });\n                break;\n              }\n            // fallthrough\n            case MODE_BREAK: {\n              shouldRemeasure = false;\n              const next = { ind, mode: MODE_FLAT, doc: doc2.contents };\n              const rem = width - pos;\n              const hasLineSuffix = lineSuffix2.length > 0;\n              if (!doc2.break && fits(next, cmds, rem, hasLineSuffix, groupModeMap)) {\n                cmds.push(next);\n              } else {\n                if (doc2.expandedStates) {\n                  const mostExpanded = at_default(\n                    /* isOptionalObject */\n                    false,\n                    doc2.expandedStates,\n                    -1\n                  );\n                  if (doc2.break) {\n                    cmds.push({ ind, mode: MODE_BREAK, doc: mostExpanded });\n                    break;\n                  } else {\n                    for (let i = 1; i < doc2.expandedStates.length + 1; i++) {\n                      if (i >= doc2.expandedStates.length) {\n                        cmds.push({ ind, mode: MODE_BREAK, doc: mostExpanded });\n                        break;\n                      } else {\n                        const state = doc2.expandedStates[i];\n                        const cmd = { ind, mode: MODE_FLAT, doc: state };\n                        if (fits(cmd, cmds, rem, hasLineSuffix, groupModeMap)) {\n                          cmds.push(cmd);\n                          break;\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  cmds.push({ ind, mode: MODE_BREAK, doc: doc2.contents });\n                }\n              }\n              break;\n            }\n          }\n          if (doc2.id) {\n            groupModeMap[doc2.id] = at_default(\n              /* isOptionalObject */\n              false,\n              cmds,\n              -1\n            ).mode;\n          }\n          break;\n        // Fills each line with as much code as possible before moving to a new\n        // line with the same indentation.\n        //\n        // Expects doc.parts to be an array of alternating content and\n        // whitespace. The whitespace contains the linebreaks.\n        //\n        // For example:\n        //   [\"I\", line, \"love\", line, \"monkeys\"]\n        // or\n        //   [{ type: group, ... }, softline, { type: group, ... }]\n        //\n        // It uses this parts structure to handle three main layout cases:\n        // * The first two content items fit on the same line without\n        //   breaking\n        //   -> output the first content item and the whitespace \"flat\".\n        // * Only the first content item fits on the line without breaking\n        //   -> output the first content item \"flat\" and the whitespace with\n        //   \"break\".\n        // * Neither content item fits on the line without breaking\n        //   -> output the first content item and the whitespace with \"break\".\n        case DOC_TYPE_FILL: {\n          const rem = width - pos;\n          const offset = doc2[DOC_FILL_PRINTED_LENGTH] ?? 0;\n          const { parts } = doc2;\n          const length = parts.length - offset;\n          if (length === 0) {\n            break;\n          }\n          const content = parts[offset + 0];\n          const whitespace = parts[offset + 1];\n          const contentFlatCmd = { ind, mode: MODE_FLAT, doc: content };\n          const contentBreakCmd = { ind, mode: MODE_BREAK, doc: content };\n          const contentFits = fits(\n            contentFlatCmd,\n            [],\n            rem,\n            lineSuffix2.length > 0,\n            groupModeMap,\n            true\n          );\n          if (length === 1) {\n            if (contentFits) {\n              cmds.push(contentFlatCmd);\n            } else {\n              cmds.push(contentBreakCmd);\n            }\n            break;\n          }\n          const whitespaceFlatCmd = { ind, mode: MODE_FLAT, doc: whitespace };\n          const whitespaceBreakCmd = { ind, mode: MODE_BREAK, doc: whitespace };\n          if (length === 2) {\n            if (contentFits) {\n              cmds.push(whitespaceFlatCmd, contentFlatCmd);\n            } else {\n              cmds.push(whitespaceBreakCmd, contentBreakCmd);\n            }\n            break;\n          }\n          const secondContent = parts[offset + 2];\n          const remainingCmd = {\n            ind,\n            mode,\n            doc: { ...doc2, [DOC_FILL_PRINTED_LENGTH]: offset + 2 }\n          };\n          const firstAndSecondContentFlatCmd = {\n            ind,\n            mode: MODE_FLAT,\n            doc: [content, whitespace, secondContent]\n          };\n          const firstAndSecondContentFits = fits(\n            firstAndSecondContentFlatCmd,\n            [],\n            rem,\n            lineSuffix2.length > 0,\n            groupModeMap,\n            true\n          );\n          if (firstAndSecondContentFits) {\n            cmds.push(remainingCmd, whitespaceFlatCmd, contentFlatCmd);\n          } else if (contentFits) {\n            cmds.push(remainingCmd, whitespaceBreakCmd, contentFlatCmd);\n          } else {\n            cmds.push(remainingCmd, whitespaceBreakCmd, contentBreakCmd);\n          }\n          break;\n        }\n        case DOC_TYPE_IF_BREAK:\n        case DOC_TYPE_INDENT_IF_BREAK: {\n          const groupMode = doc2.groupId ? groupModeMap[doc2.groupId] : mode;\n          if (groupMode === MODE_BREAK) {\n            const breakContents = doc2.type === DOC_TYPE_IF_BREAK ? doc2.breakContents : doc2.negate ? doc2.contents : indent(doc2.contents);\n            if (breakContents) {\n              cmds.push({ ind, mode, doc: breakContents });\n            }\n          }\n          if (groupMode === MODE_FLAT) {\n            const flatContents = doc2.type === DOC_TYPE_IF_BREAK ? doc2.flatContents : doc2.negate ? indent(doc2.contents) : doc2.contents;\n            if (flatContents) {\n              cmds.push({ ind, mode, doc: flatContents });\n            }\n          }\n          break;\n        }\n        case DOC_TYPE_LINE_SUFFIX:\n          lineSuffix2.push({ ind, mode, doc: doc2.contents });\n          break;\n        case DOC_TYPE_LINE_SUFFIX_BOUNDARY:\n          if (lineSuffix2.length > 0) {\n            cmds.push({ ind, mode, doc: hardlineWithoutBreakParent });\n          }\n          break;\n        case DOC_TYPE_LINE:\n          switch (mode) {\n            case MODE_FLAT:\n              if (!doc2.hard) {\n                if (!doc2.soft) {\n                  out.push(\" \");\n                  pos += 1;\n                }\n                break;\n              } else {\n                shouldRemeasure = true;\n              }\n            // fallthrough\n            case MODE_BREAK:\n              if (lineSuffix2.length > 0) {\n                cmds.push({ ind, mode, doc: doc2 }, ...lineSuffix2.reverse());\n                lineSuffix2.length = 0;\n                break;\n              }\n              if (doc2.literal) {\n                if (ind.root) {\n                  out.push(newLine, ind.root.value);\n                  pos = ind.root.length;\n                } else {\n                  out.push(newLine);\n                  pos = 0;\n                }\n              } else {\n                pos -= trim2(out);\n                out.push(newLine + ind.value);\n                pos = ind.length;\n              }\n              break;\n          }\n          break;\n        case DOC_TYPE_LABEL:\n          cmds.push({ ind, mode, doc: doc2.contents });\n          break;\n        case DOC_TYPE_BREAK_PARENT:\n          break;\n        default:\n          throw new invalid_doc_error_default(doc2);\n      }\n      if (cmds.length === 0 && lineSuffix2.length > 0) {\n        cmds.push(...lineSuffix2.reverse());\n        lineSuffix2.length = 0;\n      }\n    }\n    const cursorPlaceholderIndex = out.indexOf(CURSOR_PLACEHOLDER);\n    if (cursorPlaceholderIndex !== -1) {\n      const otherCursorPlaceholderIndex = out.indexOf(\n        CURSOR_PLACEHOLDER,\n        cursorPlaceholderIndex + 1\n      );\n      if (otherCursorPlaceholderIndex === -1) {\n        return {\n          formatted: out.filter((char) => char !== CURSOR_PLACEHOLDER).join(\"\")\n        };\n      }\n      const beforeCursor = out.slice(0, cursorPlaceholderIndex).join(\"\");\n      const aroundCursor = out.slice(cursorPlaceholderIndex + 1, otherCursorPlaceholderIndex).join(\"\");\n      const afterCursor = out.slice(otherCursorPlaceholderIndex + 1).join(\"\");\n      return {\n        formatted: beforeCursor + aroundCursor + afterCursor,\n        cursorNodeStart: beforeCursor.length,\n        cursorNodeText: aroundCursor\n      };\n    }\n    return { formatted: out.join(\"\") };\n  }\n\n  // src/document/public.js\n  var builders = {\n    join,\n    line,\n    softline,\n    hardline,\n    literalline,\n    group,\n    conditionalGroup,\n    fill,\n    lineSuffix,\n    lineSuffixBoundary,\n    cursor,\n    breakParent,\n    ifBreak,\n    trim,\n    indent,\n    indentIfBreak,\n    align,\n    addAlignmentToDoc,\n    markAsRoot,\n    dedentToRoot,\n    dedent,\n    hardlineWithoutBreakParent,\n    literallineWithoutBreakParent,\n    label,\n    // TODO: Remove this in v4\n    concat: (parts) => parts\n  };\n  var printer = { printDocToString };\n  var utils = {\n    willBreak,\n    traverseDoc: traverse_doc_default,\n    findInDoc,\n    mapDoc,\n    removeLines,\n    stripTrailingHardline,\n    replaceEndOfLine,\n    canBreak\n  };\n  return __toCommonJS(public_exports);\n});","import { spawn } from 'node:child_process';\nimport * as path from 'node:path';\nimport * as vscode from 'vscode';\n\ninterface ReactiveLintViolation {\n  file: string;\n  line: number;\n  column: number;\n  rule: string;\n  message: string;\n  severity: 'error' | 'warning';\n  fix?: string;\n}\n\n// Future use: Interface for reactive-lint results\n// interface ReactiveLintResult {\n//   violations: ReactiveLintViolation[];\n//   summary: {\n//     errors: number;\n//     warnings: number;\n//     files: number;\n//   };\n// }\n\nexport class ReactiveLintProvider implements vscode.CodeActionProvider {\n  private static readonly DIAGNOSTIC_COLLECTION_NAME = 'reactive-lint';\n  private diagnosticCollection: vscode.DiagnosticCollection;\n  private outputChannel: vscode.OutputChannel;\n\n  constructor(outputChannel: vscode.OutputChannel) {\n    this.outputChannel = outputChannel;\n    this.diagnosticCollection = vscode.languages.createDiagnosticCollection(\n      ReactiveLintProvider.DIAGNOSTIC_COLLECTION_NAME\n    );\n  }\n\n  /**\n   * Run reactive-lint on a file and update diagnostics\n   */\n  async analyzeFile(document: vscode.TextDocument): Promise<void> {\n    if (!this.shouldAnalyze(document)) {\n      return;\n    }\n\n    try {\n      const violations = await this.runReactiveLint(document.uri.fsPath);\n      this.updateDiagnostics(document, violations);\n    } catch (error) {\n      this.outputChannel.appendLine(`Reactive-lint error: ${error}`);\n    }\n  }\n\n  /**\n   * Check if document should be analyzed\n   */\n  private shouldAnalyze(document: vscode.TextDocument): boolean {\n    const config = vscode.workspace.getConfiguration('actor-spa');\n    const isEnabled = config.get('enableDiagnostics', true);\n\n    if (!isEnabled) {\n      return false;\n    }\n\n    // Only analyze TypeScript files\n    const isTypeScript =\n      document.languageId === 'typescript' || document.languageId === 'typescriptreact';\n\n    // Skip test files and node_modules\n    const isTestFile =\n      document.uri.fsPath.includes('.test.') || document.uri.fsPath.includes('.spec.');\n    const isNodeModules = document.uri.fsPath.includes('node_modules');\n\n    return isTypeScript && !isTestFile && !isNodeModules;\n  }\n\n  /**\n   * Run reactive-lint CLI on a file\n   */\n  private async runReactiveLint(filePath: string): Promise<ReactiveLintViolation[]> {\n    return new Promise((resolve, reject) => {\n      const workspaceFolder = vscode.workspace.getWorkspaceFolder(vscode.Uri.file(filePath));\n      const cwd = workspaceFolder?.uri.fsPath || path.dirname(filePath);\n\n      // Path to reactive-lint CLI\n      const reactiveLintPath = path.join(cwd, 'node_modules', '.bin', 'reactive-lint');\n      const extensionReactiveLintPath = path.join(\n        cwd,\n        'extensions',\n        'reactive-lint',\n        'dist',\n        'cli.js'\n      );\n\n      // Try extension path first, then node_modules\n      const cliPath = require('node:fs').existsSync(extensionReactiveLintPath)\n        ? extensionReactiveLintPath\n        : reactiveLintPath;\n\n      const args = [cliPath, filePath, '--format', 'json'];\n\n      const child = spawn('node', args, { cwd });\n      let stdout = '';\n      let stderr = '';\n\n      child.stdout.on('data', (data) => {\n        stdout += data.toString();\n      });\n\n      child.stderr.on('data', (data) => {\n        stderr += data.toString();\n      });\n\n      child.on('close', (code) => {\n        if (code !== 0 && code !== 1) {\n          // Code 1 is expected when violations are found\n          reject(new Error(`Reactive-lint failed with code ${code}: ${stderr}`));\n          return;\n        }\n\n        try {\n          const violations = this.parseReactiveLintOutput(stdout, filePath);\n          resolve(violations);\n        } catch (_error) {\n          // If JSON parsing fails, try parsing plain text output\n          const violations = this.parsePlainTextOutput(stdout, filePath);\n          resolve(violations);\n        }\n      });\n\n      child.on('error', (error) => {\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * Parse reactive-lint JSON output\n   */\n  private parseReactiveLintOutput(output: string, filePath: string): ReactiveLintViolation[] {\n    if (!output.trim()) {\n      return [];\n    }\n\n    const violations: ReactiveLintViolation[] = [];\n\n    try {\n      const result = JSON.parse(output);\n\n      if (result.violations) {\n        for (const violation of result.violations) {\n          violations.push({\n            file: filePath,\n            line: violation.line - 1, // VS Code uses 0-based line numbers\n            column: violation.column - 1,\n            rule: violation.rule,\n            message: violation.message,\n            severity: violation.severity === 'error' ? 'error' : 'warning',\n            fix: violation.fix,\n          });\n        }\n      }\n    } catch (_error) {\n      // Fallback to plain text parsing\n      return this.parsePlainTextOutput(output, filePath);\n    }\n\n    return violations;\n  }\n\n  /**\n   * Parse reactive-lint plain text output\n   */\n  private parsePlainTextOutput(output: string, filePath: string): ReactiveLintViolation[] {\n    const violations: ReactiveLintViolation[] = [];\n    const lines = output.split('\\n');\n\n    for (const line of lines) {\n      // Match pattern: ❌ ERROR ./path/to/file.ts:123:45 Message (rule-name)\n      const errorMatch = line.match(/❌ ERROR\\s+.*:(\\d+):(\\d+)\\s+(.+?)\\s+\\(([^)]+)\\)/);\n      if (errorMatch) {\n        violations.push({\n          file: filePath,\n          line: Number.parseInt(errorMatch[1]) - 1,\n          column: Number.parseInt(errorMatch[2]) - 1,\n          rule: errorMatch[4],\n          message: errorMatch[3],\n          severity: 'error',\n        });\n        continue;\n      }\n\n      // Match pattern: ● WARN ./path/to/file.ts:123:45 Message (rule-name)\n      const warnMatch = line.match(/● WARN\\s+.*:(\\d+):(\\d+)\\s+(.+?)\\s+\\(([^)]+)\\)/);\n      if (warnMatch) {\n        violations.push({\n          file: filePath,\n          line: Number.parseInt(warnMatch[1]) - 1,\n          column: Number.parseInt(warnMatch[2]) - 1,\n          rule: warnMatch[4],\n          message: warnMatch[3],\n          severity: 'warning',\n        });\n      }\n    }\n\n    return violations;\n  }\n\n  /**\n   * Update VS Code diagnostics\n   */\n  private updateDiagnostics(\n    document: vscode.TextDocument,\n    violations: ReactiveLintViolation[]\n  ): void {\n    const diagnostics: vscode.Diagnostic[] = [];\n\n    for (const violation of violations) {\n      const range = new vscode.Range(\n        violation.line,\n        violation.column,\n        violation.line,\n        violation.column + 10 // Highlight a reasonable range\n      );\n\n      const diagnostic = new vscode.Diagnostic(\n        range,\n        `[${violation.rule}] ${violation.message}`,\n        violation.severity === 'error'\n          ? vscode.DiagnosticSeverity.Error\n          : vscode.DiagnosticSeverity.Warning\n      );\n\n      diagnostic.source = 'reactive-lint';\n      diagnostic.code = violation.rule;\n\n      diagnostics.push(diagnostic);\n    }\n\n    this.diagnosticCollection.set(document.uri, diagnostics);\n  }\n\n  /**\n   * Provide code actions for reactive-lint violations\n   */\n  provideCodeActions(\n    document: vscode.TextDocument,\n    _range: vscode.Range | vscode.Selection,\n    context: vscode.CodeActionContext,\n    _token: vscode.CancellationToken\n  ): vscode.ProviderResult<(vscode.Command | vscode.CodeAction)[]> {\n    const actions: vscode.CodeAction[] = [];\n\n    // Get reactive-lint diagnostics in the range\n    const reactiveLintDiagnostics = context.diagnostics.filter(\n      (diagnostic) => diagnostic.source === 'reactive-lint'\n    );\n\n    for (const diagnostic of reactiveLintDiagnostics) {\n      const rule = diagnostic.code as string;\n\n      // Create quick fix actions based on the rule\n      const quickFix = this.createQuickFix(document, diagnostic, rule);\n      if (quickFix) {\n        actions.push(quickFix);\n      }\n\n      // Create \"Learn more\" action\n      const learnMoreAction = new vscode.CodeAction(\n        `Learn more about ${rule}`,\n        vscode.CodeActionKind.QuickFix\n      );\n      learnMoreAction.command = {\n        title: 'Learn more',\n        command: 'actor-spa.showReactivePatternDocs',\n        arguments: [rule],\n      };\n      actions.push(learnMoreAction);\n    }\n\n    return actions;\n  }\n\n  /**\n   * Create quick fix action for a specific rule\n   */\n  private createQuickFix(\n    document: vscode.TextDocument,\n    diagnostic: vscode.Diagnostic,\n    rule: string\n  ): vscode.CodeAction | undefined {\n    const line = document.lineAt(diagnostic.range.start.line);\n    const lineText = line.text;\n\n    switch (rule) {\n      case 'no-context-booleans':\n        return this.createBooleanToStateQuickFix(document, diagnostic, lineText);\n\n      case 'no-dom-query':\n        return this.createDomQueryQuickFix(document, diagnostic, lineText);\n\n      case 'no-timers':\n        return this.createTimerQuickFix(document, diagnostic, lineText);\n\n      case 'no-event-listeners':\n        return this.createEventListenerQuickFix(document, diagnostic, lineText);\n\n      default:\n        return undefined;\n    }\n  }\n\n  /**\n   * Create quick fix for boolean context violations\n   */\n  private createBooleanToStateQuickFix(\n    document: vscode.TextDocument,\n    diagnostic: vscode.Diagnostic,\n    lineText: string\n  ): vscode.CodeAction {\n    const action = new vscode.CodeAction(\n      'Replace boolean with machine state',\n      vscode.CodeActionKind.QuickFix\n    );\n\n    action.diagnostics = [diagnostic];\n    action.edit = new vscode.WorkspaceEdit();\n\n    // Simple transformation example\n    const newText = lineText.replace(/isVisible/g, \"state.matches('visible')\");\n    const range = new vscode.Range(\n      diagnostic.range.start.line,\n      0,\n      diagnostic.range.start.line,\n      lineText.length\n    );\n\n    action.edit.replace(document.uri, range, newText);\n    return action;\n  }\n\n  /**\n   * Create quick fix for DOM query violations\n   */\n  private createDomQueryQuickFix(\n    document: vscode.TextDocument,\n    diagnostic: vscode.Diagnostic,\n    lineText: string\n  ): vscode.CodeAction {\n    const action = new vscode.CodeAction(\n      'Replace DOM query with event communication',\n      vscode.CodeActionKind.QuickFix\n    );\n\n    action.diagnostics = [diagnostic];\n    action.edit = new vscode.WorkspaceEdit();\n\n    // Example transformation\n    const newText = lineText.replace(\n      /document\\.querySelector\\(['\"]([^'\"]+)['\"]\\)/g,\n      '// TODO: Replace with event communication - see docs/REACTIVE_PATTERNS.md'\n    );\n\n    const range = new vscode.Range(\n      diagnostic.range.start.line,\n      0,\n      diagnostic.range.start.line,\n      lineText.length\n    );\n\n    action.edit.replace(document.uri, range, newText);\n    return action;\n  }\n\n  /**\n   * Create quick fix for timer violations\n   */\n  private createTimerQuickFix(\n    document: vscode.TextDocument,\n    diagnostic: vscode.Diagnostic,\n    lineText: string\n  ): vscode.CodeAction {\n    const action = new vscode.CodeAction(\n      'Replace timer with XState delayed transition',\n      vscode.CodeActionKind.QuickFix\n    );\n\n    action.diagnostics = [diagnostic];\n    action.edit = new vscode.WorkspaceEdit();\n\n    // Example transformation\n    const newText = lineText.replace(\n      /setTimeout\\(/g,\n      '// TODO: Replace with XState delayed transition - see docs/REACTIVE_PATTERNS.md'\n    );\n\n    const range = new vscode.Range(\n      diagnostic.range.start.line,\n      0,\n      diagnostic.range.start.line,\n      lineText.length\n    );\n\n    action.edit.replace(document.uri, range, newText);\n    return action;\n  }\n\n  /**\n   * Create quick fix for event listener violations\n   */\n  private createEventListenerQuickFix(\n    document: vscode.TextDocument,\n    diagnostic: vscode.Diagnostic,\n    lineText: string\n  ): vscode.CodeAction {\n    const action = new vscode.CodeAction(\n      'Replace addEventListener with declarative event handling',\n      vscode.CodeActionKind.QuickFix\n    );\n\n    action.diagnostics = [diagnostic];\n    action.edit = new vscode.WorkspaceEdit();\n\n    // Example transformation\n    const newText = lineText.replace(\n      /addEventListener\\(/g,\n      '// TODO: Replace with declarative event handling - see docs/REACTIVE_PATTERNS.md'\n    );\n\n    const range = new vscode.Range(\n      diagnostic.range.start.line,\n      0,\n      diagnostic.range.start.line,\n      lineText.length\n    );\n\n    action.edit.replace(document.uri, range, newText);\n    return action;\n  }\n\n  /**\n   * Dispose resources\n   */\n  dispose(): void {\n    this.diagnosticCollection.dispose();\n  }\n}\n","module.exports = require(\"stream\");","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^WebSocket$\" }] */\n'use strict';\n\nconst WebSocket = require('./websocket');\nconst { Duplex } = require('stream');\n\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {Duplex} stream The stream.\n * @private\n */\nfunction emitClose(stream) {\n  stream.emit('close');\n}\n\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */\nfunction duplexOnEnd() {\n  if (!this.destroyed && this._writableState.finished) {\n    this.destroy();\n  }\n}\n\n/**\n * The listener of the `'error'` event.\n *\n * @param {Error} err The error\n * @private\n */\nfunction duplexOnError(err) {\n  this.removeListener('error', duplexOnError);\n  this.destroy();\n  if (this.listenerCount('error') === 0) {\n    // Do not suppress the throwing behavior.\n    this.emit('error', err);\n  }\n}\n\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} [options] The options for the `Duplex` constructor\n * @return {Duplex} The duplex stream\n * @public\n */\nfunction createWebSocketStream(ws, options) {\n  let terminateOnDestroy = true;\n\n  const duplex = new Duplex({\n    ...options,\n    autoDestroy: false,\n    emitClose: false,\n    objectMode: false,\n    writableObjectMode: false\n  });\n\n  ws.on('message', function message(msg, isBinary) {\n    const data =\n      !isBinary && duplex._readableState.objectMode ? msg.toString() : msg;\n\n    if (!duplex.push(data)) ws.pause();\n  });\n\n  ws.once('error', function error(err) {\n    if (duplex.destroyed) return;\n\n    // Prevent `ws.terminate()` from being called by `duplex._destroy()`.\n    //\n    // - If the `'error'` event is emitted before the `'open'` event, then\n    //   `ws.terminate()` is a noop as no socket is assigned.\n    // - Otherwise, the error is re-emitted by the listener of the `'error'`\n    //   event of the `Receiver` object. The listener already closes the\n    //   connection by calling `ws.close()`. This allows a close frame to be\n    //   sent to the other peer. If `ws.terminate()` is called right after this,\n    //   then the close frame might not be sent.\n    terminateOnDestroy = false;\n    duplex.destroy(err);\n  });\n\n  ws.once('close', function close() {\n    if (duplex.destroyed) return;\n\n    duplex.push(null);\n  });\n\n  duplex._destroy = function (err, callback) {\n    if (ws.readyState === ws.CLOSED) {\n      callback(err);\n      process.nextTick(emitClose, duplex);\n      return;\n    }\n\n    let called = false;\n\n    ws.once('error', function error(err) {\n      called = true;\n      callback(err);\n    });\n\n    ws.once('close', function close() {\n      if (!called) callback(err);\n      process.nextTick(emitClose, duplex);\n    });\n\n    if (terminateOnDestroy) ws.terminate();\n  };\n\n  duplex._final = function (callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._final(callback);\n      });\n      return;\n    }\n\n    // If the value of the `_socket` property is `null` it means that `ws` is a\n    // client websocket and the handshake failed. In fact, when this happens, a\n    // socket is never assigned to the websocket. Wait for the `'error'` event\n    // that will be emitted by the websocket.\n    if (ws._socket === null) return;\n\n    if (ws._socket._writableState.finished) {\n      callback();\n      if (duplex._readableState.endEmitted) duplex.destroy();\n    } else {\n      ws._socket.once('finish', function finish() {\n        // `duplex` is not destroyed here because the `'end'` event will be\n        // emitted on `duplex` after this `'finish'` event. The EOF signaling\n        // `null` chunk is, in fact, pushed when the websocket emits `'close'`.\n        callback();\n      });\n      ws.close();\n    }\n  };\n\n  duplex._read = function () {\n    if (ws.isPaused) ws.resume();\n  };\n\n  duplex._write = function (chunk, encoding, callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._write(chunk, encoding, callback);\n      });\n      return;\n    }\n\n    ws.send(chunk, callback);\n  };\n\n  duplex.on('end', duplexOnEnd);\n  duplex.on('error', duplexOnError);\n  return duplex;\n}\n\nmodule.exports = createWebSocketStream;\n","import * as vscode from 'vscode';\nimport { assign, createActor, fromPromise, setup } from 'xstate';\nimport { discoveryMachine, type TemplateInfo } from './discoveryMachine';\n\nexport interface FormattingJob {\n  id: string;\n  template: TemplateInfo;\n  status: 'pending' | 'formatting' | 'completed' | 'error';\n  result?: string;\n  error?: string;\n  startTime: number;\n  endTime?: number;\n}\n\nexport interface CoordinatorContext {\n  document: vscode.TextDocument | null;\n  options: vscode.FormattingOptions;\n  templates: TemplateInfo[];\n  jobs: FormattingJob[];\n  completedJobs: FormattingJob[];\n  errors: string[];\n  edits: vscode.TextEdit[];\n  stats: {\n    totalTemplates: number;\n    successfulJobs: number;\n    failedJobs: number;\n    processingTimeMs: number;\n    startTime: number;\n    endTime?: number;\n  };\n  config: {\n    maxParallelJobs: number;\n    timeout: number;\n    preferredFormatter: 'biome' | 'prettier' | 'fallback';\n    enableParallelProcessing: boolean;\n  };\n}\n\nexport type CoordinatorEvent =\n  | {\n      type: 'FORMAT';\n      document: vscode.TextDocument;\n      options: vscode.FormattingOptions;\n      token?: vscode.CancellationToken;\n    }\n  | { type: 'DISCOVERY_COMPLETE'; templates: TemplateInfo[] }\n  | { type: 'JOB_COMPLETE'; jobId: string; result: string }\n  | { type: 'JOB_ERROR'; jobId: string; error: string }\n  | { type: 'ALL_JOBS_COMPLETE' }\n  | { type: 'TIMEOUT' }\n  | { type: 'CANCEL' }\n  | { type: 'ERROR'; error: string }\n  | { type: 'RETRY' }\n  | { type: 'RESET' };\n\n// Actor for running discovery\nconst runDiscoveryActor = fromPromise(\n  async ({ input }: { input: { document: vscode.TextDocument } }) => {\n    const { document } = input;\n\n    // Create and run discovery actor\n    const discoveryActor = createActor(discoveryMachine);\n    discoveryActor.start();\n\n    return new Promise<TemplateInfo[]>((resolve, reject) => {\n      const subscription = discoveryActor.subscribe({\n        next: (state) => {\n          if (state.matches('completed')) {\n            discoveryActor.stop();\n            resolve(state.context.templates);\n          } else if (state.matches('error')) {\n            discoveryActor.stop();\n            reject(new Error(state.context.errors.join(', ')));\n          }\n        },\n        error: (error) => {\n          discoveryActor.stop();\n          reject(error);\n        },\n      });\n\n      // Start discovery\n      discoveryActor.send({ type: 'DISCOVER', document });\n\n      // Cleanup subscription after 30 seconds\n      setTimeout(() => {\n        subscription.unsubscribe();\n        discoveryActor.stop();\n        reject(new Error('Discovery timeout'));\n      }, 30000);\n    });\n  }\n);\n\n// Note: Individual template formatting is now handled inline in parallelFormattingActor\n// to avoid circular dependencies and simplify the actor model\n\n// Actor for parallel processing\nconst parallelFormattingActor = fromPromise(\n  async ({\n    input,\n  }: {\n    input: {\n      templates: TemplateInfo[];\n      options: vscode.FormattingOptions;\n      config: CoordinatorContext['config'];\n    };\n  }) => {\n    const { templates, options, config } = input;\n\n    const jobs: FormattingJob[] = templates.map((template, index) => ({\n      id: `job-${index}`,\n      template,\n      status: 'pending' as const,\n      startTime: Date.now(),\n    }));\n\n    const results: FormattingJob[] = [];\n    const batchSize = config.enableParallelProcessing ? config.maxParallelJobs : 1;\n\n    // Process templates in batches\n    for (let i = 0; i < jobs.length; i += batchSize) {\n      const batch = jobs.slice(i, i + batchSize);\n      const batchPromises = batch.map(async (job) => {\n        try {\n          job.status = 'formatting';\n\n          // Import and call the formatting provider directly\n          const { ActorSpaFormattingProvider } = await import('../providers/formattingProvider');\n          // Create output channel for debugging\n          const outputChannel = vscode.window.createOutputChannel('Actor-SPA Coordinator Debug');\n          const formatter = new ActorSpaFormattingProvider(outputChannel);\n\n          // Debug: Log the template we're about to format\n          outputChannel.appendLine(\n            `🔧 Formatting job ${job.id}: ${job.template.language} template`\n          );\n          outputChannel.appendLine(\n            `📝 Original content (${job.template.content.length} chars): ${job.template.content.substring(0, 200)}${job.template.content.length > 200 ? '...' : ''}`\n          );\n          outputChannel.show();\n\n          // Create a mock document for the template content\n          const mockUri = vscode.Uri.parse(\n            `untitled:template-${Date.now()}.${job.template.language}`\n          );\n          const mockDocument = {\n            getText: () => job.template.content,\n            fileName: mockUri.fsPath,\n            languageId: job.template.language === 'html' ? 'html' : 'css',\n            lineCount: job.template.lineCount,\n            positionAt: (offset: number) => new vscode.Position(0, offset),\n            offsetAt: (position: vscode.Position) => position.character,\n          } as vscode.TextDocument;\n\n          // Create format promise\n          const formatPromise = formatter\n            .provideDocumentFormattingEdits(\n              mockDocument,\n              options,\n              new vscode.CancellationTokenSource().token\n            )\n            .then((edits) => {\n              if (edits.length > 0) {\n                return edits[0].newText;\n              }\n              return job.template.content;\n            });\n\n          const result = await Promise.race([\n            formatPromise,\n            new Promise<never>((_, reject) => {\n              setTimeout(() => {\n                reject(new Error('Formatting timeout'));\n              }, config.timeout);\n            }),\n          ]);\n\n          job.status = 'completed';\n          job.result = result;\n          job.endTime = Date.now();\n\n          return job;\n        } catch (error) {\n          job.status = 'error';\n          job.error = error instanceof Error ? error.message : String(error);\n          job.endTime = Date.now();\n\n          return job;\n        }\n      });\n\n      const batchResults = await Promise.allSettled(batchPromises);\n\n      batchResults.forEach((result, index) => {\n        if (result.status === 'fulfilled') {\n          results.push(result.value);\n        } else {\n          const job = batch[index];\n          job.status = 'error';\n          job.error =\n            result.reason instanceof Error ? result.reason.message : String(result.reason);\n          job.endTime = Date.now();\n          results.push(job);\n        }\n      });\n    }\n\n    return results;\n  }\n);\n\n// Utility functions\nfunction getConfiguration(): CoordinatorContext['config'] {\n  const config = vscode.workspace.getConfiguration('actor-spa.formatting');\n\n  return {\n    maxParallelJobs: config.get<number>('maxParallelJobs', 4),\n    timeout: config.get<number>('timeout', 10000),\n    preferredFormatter: config.get<'biome' | 'prettier' | 'fallback'>(\n      'preferredFormatter',\n      'biome'\n    ),\n    enableParallelProcessing: config.get<boolean>('enableParallelProcessing', true),\n  };\n}\n\nfunction createTextEdits(jobs: FormattingJob[]): vscode.TextEdit[] {\n  const edits: vscode.TextEdit[] = [];\n\n  for (const job of jobs) {\n    if (job.status === 'completed' && job.result && job.result !== job.template.content) {\n      edits.push(vscode.TextEdit.replace(job.template.range, job.result));\n    }\n  }\n\n  return edits;\n}\n\nexport const coordinatorMachine = setup({\n  types: {\n    context: {} as CoordinatorContext,\n    events: {} as CoordinatorEvent,\n  },\n  actors: {\n    runDiscovery: runDiscoveryActor,\n    parallelFormatting: parallelFormattingActor,\n  },\n  actions: {\n    initializeFormatting: assign({\n      document: ({ event }) => {\n        if (event.type === 'FORMAT') {\n          return event.document;\n        }\n        return null;\n      },\n      options: ({ event }) => {\n        if (event.type === 'FORMAT') {\n          return event.options;\n        }\n        return { tabSize: 2, insertSpaces: true };\n      },\n      config: () => getConfiguration(),\n      stats: () => ({\n        totalTemplates: 0,\n        successfulJobs: 0,\n        failedJobs: 0,\n        processingTimeMs: 0,\n        startTime: Date.now(),\n      }),\n      templates: [],\n      jobs: [],\n      completedJobs: [],\n      errors: [],\n      edits: [],\n    }),\n\n    setDiscoveryResults: assign({\n      templates: ({ event }) => {\n        if (event.type === 'DISCOVERY_COMPLETE') {\n          return event.templates;\n        }\n        return [];\n      },\n      stats: ({ context, event }) => {\n        if (event.type === 'DISCOVERY_COMPLETE') {\n          return {\n            ...context.stats,\n            totalTemplates: event.templates.length,\n          };\n        }\n        return context.stats;\n      },\n    }),\n\n    setFormattingResults: assign({\n      completedJobs: ({ event }) => {\n        if (event.type === 'ALL_JOBS_COMPLETE') {\n          // This would be set by the parallel formatting actor\n          return [];\n        }\n        return [];\n      },\n      edits: ({ context }) => {\n        return createTextEdits(context.completedJobs);\n      },\n      stats: ({ context }) => {\n        const endTime = Date.now();\n        const successfulJobs = context.completedJobs.filter(\n          (job) => job.status === 'completed'\n        ).length;\n        const failedJobs = context.completedJobs.filter((job) => job.status === 'error').length;\n\n        return {\n          ...context.stats,\n          successfulJobs,\n          failedJobs,\n          processingTimeMs: endTime - context.stats.startTime,\n          endTime,\n        };\n      },\n    }),\n\n    addError: assign({\n      errors: ({ context, event }) => {\n        if (event.type === 'ERROR') {\n          return [...context.errors, event.error];\n        }\n        return context.errors;\n      },\n    }),\n\n    resetState: assign({\n      document: null,\n      options: { tabSize: 2, insertSpaces: true },\n      templates: [],\n      jobs: [],\n      completedJobs: [],\n      errors: [],\n      edits: [],\n      stats: {\n        totalTemplates: 0,\n        successfulJobs: 0,\n        failedJobs: 0,\n        processingTimeMs: 0,\n        startTime: Date.now(),\n      },\n      config: () => getConfiguration(),\n    }),\n  },\n}).createMachine({\n  id: 'coordinator',\n  initial: 'idle',\n  context: {\n    document: null,\n    options: { tabSize: 2, insertSpaces: true },\n    templates: [],\n    jobs: [],\n    completedJobs: [],\n    errors: [],\n    edits: [],\n    stats: {\n      totalTemplates: 0,\n      successfulJobs: 0,\n      failedJobs: 0,\n      processingTimeMs: 0,\n      startTime: Date.now(),\n    },\n    config: {\n      maxParallelJobs: 4,\n      timeout: 10000,\n      preferredFormatter: 'biome',\n      enableParallelProcessing: true,\n    },\n  },\n  states: {\n    idle: {\n      on: {\n        FORMAT: {\n          target: 'discovering',\n          actions: 'initializeFormatting',\n        },\n      },\n    },\n\n    discovering: {\n      invoke: {\n        id: 'runDiscovery',\n        src: 'runDiscovery',\n        input: ({ context }) => {\n          if (!context.document) {\n            throw new Error('No document provided for discovery');\n          }\n          return {\n            document: context.document,\n          };\n        },\n        onDone: {\n          target: 'coordinating',\n          actions: assign({\n            templates: ({ event }) => event.output,\n            stats: ({ context, event }) => ({\n              ...context.stats,\n              totalTemplates: event.output.length,\n            }),\n          }),\n        },\n        onError: {\n          target: 'error',\n          actions: assign({\n            errors: ({ context, event }) => [\n              ...context.errors,\n              `Discovery error: ${String(event.error)}`,\n            ],\n          }),\n        },\n      },\n    },\n\n    coordinating: {\n      always: [\n        {\n          target: 'completing',\n          guard: ({ context }) => context.templates.length === 0,\n        },\n        {\n          target: 'parallelProcessing',\n        },\n      ],\n    },\n\n    parallelProcessing: {\n      invoke: {\n        id: 'parallelFormatting',\n        src: 'parallelFormatting',\n        input: ({ context }) => ({\n          templates: context.templates,\n          options: context.options,\n          config: context.config,\n        }),\n        onDone: {\n          target: 'aggregating',\n          actions: assign({\n            completedJobs: ({ event }) => event.output,\n          }),\n        },\n        onError: {\n          target: 'error',\n          actions: assign({\n            errors: ({ context, event }) => [\n              ...context.errors,\n              `Parallel processing error: ${String(event.error)}`,\n            ],\n          }),\n        },\n      },\n    },\n\n    aggregating: {\n      entry: assign({\n        edits: ({ context }) => createTextEdits(context.completedJobs),\n        stats: ({ context }) => {\n          const endTime = Date.now();\n          const successfulJobs = context.completedJobs.filter(\n            (job) => job.status === 'completed'\n          ).length;\n          const failedJobs = context.completedJobs.filter((job) => job.status === 'error').length;\n\n          return {\n            ...context.stats,\n            successfulJobs,\n            failedJobs,\n            processingTimeMs: endTime - context.stats.startTime,\n            endTime,\n          };\n        },\n      }),\n      always: {\n        target: 'completing',\n      },\n    },\n\n    completing: {\n      type: 'final',\n    },\n\n    error: {\n      on: {\n        RETRY: {\n          target: 'discovering',\n        },\n        RESET: {\n          target: 'idle',\n          actions: 'resetState',\n        },\n      },\n    },\n  },\n});\n","module.exports = require(\"assert\");","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = Object.create(null);\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let code = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (\n        i !== 0 &&\n        (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n      ) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n","module.exports = require(\"node:fs\");","module.exports = require(\"zlib\");","module.exports = require(\"module\");","/**\n * VS Code Commands for AI Communication\n *\n * This module provides commands for AI agents to communicate with each other.\n */\n\nimport * as vscode from 'vscode';\nimport type { createActor } from 'xstate';\nimport {\n  type aiCommunicationBridgeMachine,\n  createAIAgent,\n  createAICommunicationBridge,\n  createMessage,\n} from '../actors/aiCommunicationBridge';\nimport { createWebSocketServer } from '../actors/webSocketServerActor';\nimport { COMPONENTS, createDebugLogger, type DebugLogger } from '../core/debugLogger';\nimport {\n  type AIAgent,\n  type AIMessage,\n  CommunicationChannel,\n  type MessagePayloads,\n  MessagePriority,\n  MessageType,\n} from '../types/aiCommunication';\n\n// Global instances\nlet communicationBridge: ReturnType<\n  typeof createActor<typeof aiCommunicationBridgeMachine>\n> | null = null;\nlet wsServer: ReturnType<typeof createWebSocketServer> | null = null;\nlet debugLogger: DebugLogger | null = null;\nlet currentAgent: AIAgent | null = null;\n\n/**\n * Initialize AI Communication system\n */\nexport async function initializeAICommunication(\n  context: vscode.ExtensionContext,\n  outputChannel: vscode.OutputChannel\n): Promise<void> {\n  debugLogger = createDebugLogger(outputChannel);\n\n  // Check if AI communication is enabled\n  const config = vscode.workspace.getConfiguration('actor-spa.aiCommunication');\n  if (!config.get<boolean>('enabled', false)) {\n    debugLogger.info(COMPONENTS.EXTENSION, 'AI Communication is disabled');\n    return;\n  }\n\n  debugLogger.info(COMPONENTS.EXTENSION, '🚀 Initializing AI Communication system');\n\n  // Create communication bridge\n  communicationBridge = createAICommunicationBridge(debugLogger);\n  communicationBridge.start();\n\n  // Determine communication method\n  const commMethod = config.get<string>('config.communicationMethod', 'file');\n\n  if (commMethod === 'websocket') {\n    // Start WebSocket server\n    const wsConfig = {\n      port: config.get<number>('config.websocketPort', 8765),\n      host: config.get<string>('config.websocketHost', 'localhost'),\n    };\n\n    wsServer = createWebSocketServer(wsConfig, debugLogger);\n    wsServer.start();\n    wsServer.send({ type: 'START' });\n  }\n\n  // Create current agent (Claude in this case)\n  currentAgent = createAIAgent('claude', 'Claude Assistant');\n  communicationBridge.send({\n    type: 'CONNECT',\n    agent: currentAgent,\n  });\n\n  // Set up file watcher for file-based communication\n  if (commMethod === 'file') {\n    setupFileWatcher(context);\n  }\n\n  debugLogger.info(COMPONENTS.EXTENSION, '✅ AI Communication system initialized', {\n    method: commMethod,\n    agentId: currentAgent.id,\n  });\n}\n\n/**\n * Set up file watcher for incoming messages\n */\nfunction setupFileWatcher(context: vscode.ExtensionContext): void {\n  const workspaceFolder = vscode.workspace.workspaceFolders?.[0];\n  if (!workspaceFolder) return;\n\n  const pattern = new vscode.RelativePattern(workspaceFolder, '.ai-messages/*.json');\n\n  const watcher = vscode.workspace.createFileSystemWatcher(pattern);\n\n  watcher.onDidCreate(async (uri) => {\n    try {\n      const content = await vscode.workspace.fs.readFile(uri);\n      const message = JSON.parse(Buffer.from(content).toString()) as AIMessage;\n\n      // Only process messages not from ourselves\n      if (message.source.id !== currentAgent?.id) {\n        communicationBridge?.send({\n          type: 'MESSAGE_RECEIVED',\n          message,\n        });\n      }\n    } catch (error) {\n      debugLogger?.error(\n        COMPONENTS.EXTENSION,\n        'Failed to process incoming message',\n        { uri: uri.toString() },\n        error as Error\n      );\n    }\n  });\n\n  context.subscriptions.push(watcher);\n}\n\n/**\n * Register AI Communication commands\n */\nexport function registerAICommunicationCommands(context: vscode.ExtensionContext): void {\n  // Send message command\n  const sendMessageCommand = vscode.commands.registerCommand(\n    'actor-spa.ai.sendMessage',\n    async () => {\n      if (!communicationBridge || !currentAgent) {\n        vscode.window.showErrorMessage('AI Communication not initialized');\n        return;\n      }\n\n      // Get message type\n      const messageTypes = Object.values(MessageType);\n      const selectedType = await vscode.window.showQuickPick(messageTypes, {\n        placeHolder: 'Select message type',\n      });\n\n      if (!selectedType) return;\n\n      // Get target\n      const targetOptions = ['broadcast', 'specific-agent'];\n      const targetChoice = await vscode.window.showQuickPick(targetOptions, {\n        placeHolder: 'Select target',\n      });\n\n      if (!targetChoice) return;\n\n      let target: AIAgent | 'broadcast' = 'broadcast';\n      if (targetChoice === 'specific-agent') {\n        const agentId = await vscode.window.showInputBox({\n          prompt: 'Enter target agent ID',\n          placeHolder: 'agent-id',\n        });\n\n        if (!agentId) return;\n\n        // For demo, create a mock target agent\n        target = createAIAgent('cursor', 'Cursor Assistant');\n        target.id = agentId;\n      }\n\n      // Get message content based on type\n      const payload = await getMessagePayload(selectedType as MessageType);\n      if (!payload) return;\n\n      // Create and send message\n      const message = createMessage(currentAgent, target, selectedType as MessageType, payload, {\n        priority: MessagePriority.NORMAL,\n        channel: getChannelForMessageType(selectedType as MessageType),\n      });\n\n      communicationBridge.send({\n        type: 'SEND_MESSAGE',\n        message,\n      });\n\n      vscode.window.showInformationMessage(`Message sent: ${selectedType}`);\n    }\n  );\n\n  // View message history command\n  const viewHistoryCommand = vscode.commands.registerCommand(\n    'actor-spa.ai.getMessageHistory',\n    async () => {\n      if (!communicationBridge) {\n        vscode.window.showErrorMessage('AI Communication not initialized');\n        return;\n      }\n\n      // Get history from state\n      const state = communicationBridge.getSnapshot();\n      const history = state.context.messageHistory;\n\n      if (history.length === 0) {\n        vscode.window.showInformationMessage('No messages in history');\n        return;\n      }\n\n      // Create webview to display history\n      const panel = vscode.window.createWebviewPanel(\n        'aiMessageHistory',\n        'AI Message History',\n        vscode.ViewColumn.One,\n        {\n          enableScripts: true,\n        }\n      );\n\n      panel.webview.html = getMessageHistoryHtml(history);\n    }\n  );\n\n  // Subscribe to channel command\n  const subscribeCommand = vscode.commands.registerCommand(\n    'actor-spa.ai.subscribeToChannel',\n    async () => {\n      if (!communicationBridge) {\n        vscode.window.showErrorMessage('AI Communication not initialized');\n        return;\n      }\n\n      const channels = Object.values(CommunicationChannel);\n      const selectedChannel = await vscode.window.showQuickPick(channels, {\n        placeHolder: 'Select channel to subscribe',\n      });\n\n      if (!selectedChannel) return;\n\n      // Subscribe to channel\n      communicationBridge.send({\n        type: 'SUBSCRIBE',\n        channel: selectedChannel as CommunicationChannel,\n        callback: (message: AIMessage) => {\n          // Show notification for received messages\n          vscode.window\n            .showInformationMessage(`${message.source.name}: ${message.type}`, 'View')\n            .then((selection) => {\n              if (selection === 'View') {\n                // Show message details\n                const panel = vscode.window.createWebviewPanel(\n                  'aiMessage',\n                  'AI Message',\n                  vscode.ViewColumn.Two,\n                  {}\n                );\n\n                panel.webview.html = getMessageDetailHtml(message);\n              }\n            });\n        },\n      });\n\n      vscode.window.showInformationMessage(`Subscribed to ${selectedChannel} channel`);\n    }\n  );\n\n  // Get communication stats command\n  const getStatsCommand = vscode.commands.registerCommand('actor-spa.ai.getStats', () => {\n    if (!communicationBridge) {\n      vscode.window.showErrorMessage('AI Communication not initialized');\n      return;\n    }\n\n    const state = communicationBridge.getSnapshot();\n    const stats = state.context.stats;\n\n    vscode.window.showInformationMessage(\n      `AI Communication Stats:\n        Messages Sent: ${stats.messagesSent}\n        Messages Received: ${stats.messagesReceived}\n        Active Connections: ${stats.activeConnections}\n        Average Latency: ${Math.round(stats.averageLatency)}ms`\n    );\n  });\n\n  // Start/Stop WebSocket server commands\n  const startWSCommand = vscode.commands.registerCommand(\n    'actor-spa.ai.startWebSocketServer',\n    () => {\n      if (!wsServer) {\n        const config = vscode.workspace.getConfiguration('actor-spa.aiCommunication');\n\n        // Ensure debugLogger is available\n        if (!debugLogger) {\n          vscode.window.showErrorMessage('Debug logger not initialized');\n          return;\n        }\n\n        wsServer = createWebSocketServer(\n          {\n            port: config.get<number>('config.websocketPort', 8765),\n          },\n          debugLogger\n        );\n        wsServer.start();\n      }\n\n      wsServer.send({ type: 'START' });\n      vscode.window.showInformationMessage('WebSocket server started');\n    }\n  );\n\n  const stopWSCommand = vscode.commands.registerCommand('actor-spa.ai.stopWebSocketServer', () => {\n    if (wsServer) {\n      wsServer.send({ type: 'STOP' });\n      vscode.window.showInformationMessage('WebSocket server stopped');\n    }\n  });\n\n  // Register all commands\n  context.subscriptions.push(\n    sendMessageCommand,\n    viewHistoryCommand,\n    subscribeCommand,\n    getStatsCommand,\n    startWSCommand,\n    stopWSCommand\n  );\n}\n\n/**\n * Get message payload based on type\n */\nasync function getMessagePayload(type: MessageType): Promise<unknown> {\n  switch (type) {\n    case MessageType.CODE_REVIEW_REQUEST: {\n      const file = await vscode.window.showInputBox({\n        prompt: 'Enter file path',\n        placeHolder: 'src/components/Button.tsx',\n      });\n\n      const context = await vscode.window.showInputBox({\n        prompt: 'Enter review context',\n        placeHolder: 'Please review for performance',\n      });\n\n      const payload: MessagePayloads.CodeReviewRequest = {\n        file: file || '',\n        context,\n      };\n\n      return payload;\n    }\n\n    case MessageType.KNOWLEDGE_QUERY: {\n      const question = await vscode.window.showInputBox({\n        prompt: 'Enter your question',\n        placeHolder: 'How do I implement...',\n      });\n\n      const payload: MessagePayloads.KnowledgeQuery = {\n        question: question || '',\n      };\n\n      return payload;\n    }\n\n    case MessageType.TASK_ASSIGNMENT: {\n      const title = await vscode.window.showInputBox({\n        prompt: 'Enter task title',\n      });\n\n      const description = await vscode.window.showInputBox({\n        prompt: 'Enter task description',\n      });\n\n      const payload: MessagePayloads.TaskAssignment = {\n        taskId: `task-${Date.now()}`,\n        title: title || '',\n        description: description || '',\n        priority: 'medium',\n      };\n\n      return payload;\n    }\n\n    default:\n      return {};\n  }\n}\n\n/**\n * Get channel for message type\n */\nfunction getChannelForMessageType(type: MessageType): CommunicationChannel {\n  if (type.includes('CODE_REVIEW')) return CommunicationChannel.CODE_REVIEW;\n  if (type.includes('REFACTOR')) return CommunicationChannel.REFACTORING;\n  if (type.includes('ARCHITECTURE')) return CommunicationChannel.ARCHITECTURE;\n  if (type.includes('TASK')) return CommunicationChannel.TASK_COORDINATION;\n  if (type.includes('KNOWLEDGE')) return CommunicationChannel.KNOWLEDGE_SHARING;\n  return CommunicationChannel.GENERAL;\n}\n\n/**\n * Generate HTML for message history\n */\nfunction getMessageHistoryHtml(messages: AIMessage[]): string {\n  const messageList = messages\n    .map(\n      (msg) => `\n    <div class=\"message\">\n      <div class=\"header\">\n        <span class=\"source\">${msg.source.name}</span>\n        <span class=\"type\">${msg.type}</span>\n        <span class=\"time\">${new Date(msg.timestamp).toLocaleString()}</span>\n      </div>\n      <div class=\"payload\">\n        <pre>${JSON.stringify(msg.payload, null, 2)}</pre>\n      </div>\n    </div>\n  `\n    )\n    .join('');\n\n  return `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <style>\n        body { font-family: sans-serif; padding: 20px; }\n        .message { border: 1px solid #ddd; margin: 10px 0; padding: 10px; }\n        .header { display: flex; justify-content: space-between; margin-bottom: 10px; }\n        .source { font-weight: bold; }\n        .type { color: #666; }\n        .time { color: #999; font-size: 0.9em; }\n        pre { background: #f5f5f5; padding: 10px; overflow: auto; }\n      </style>\n    </head>\n    <body>\n      <h1>AI Message History</h1>\n      ${messageList}\n    </body>\n    </html>\n  `;\n}\n\n/**\n * Generate HTML for message detail\n */\nfunction getMessageDetailHtml(message: AIMessage): string {\n  return `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <style>\n        body { font-family: sans-serif; padding: 20px; }\n        h2 { color: #333; }\n        .field { margin: 10px 0; }\n        .label { font-weight: bold; }\n        pre { background: #f5f5f5; padding: 10px; overflow: auto; }\n      </style>\n    </head>\n    <body>\n      <h1>AI Message Detail</h1>\n      <div class=\"field\">\n        <span class=\"label\">From:</span> ${message.source.name} (${message.source.type})\n      </div>\n      <div class=\"field\">\n        <span class=\"label\">Type:</span> ${message.type}\n      </div>\n      <div class=\"field\">\n        <span class=\"label\">Time:</span> ${new Date(message.timestamp).toLocaleString()}\n      </div>\n      <div class=\"field\">\n        <span class=\"label\">Channel:</span> ${message.metadata.channel}\n      </div>\n      <div class=\"field\">\n        <span class=\"label\">Priority:</span> ${message.metadata.priority}\n      </div>\n      <h2>Payload</h2>\n      <pre>${JSON.stringify(message.payload, null, 2)}</pre>\n      <h2>Full Message</h2>\n      <pre>${JSON.stringify(message, null, 2)}</pre>\n    </body>\n    </html>\n  `;\n}\n\n/**\n * Cleanup AI Communication system\n */\nexport function cleanupAICommunication(): void {\n  if (communicationBridge) {\n    communicationBridge.stop();\n    communicationBridge = null;\n  }\n\n  if (wsServer) {\n    wsServer.send({ type: 'STOP' });\n    wsServer.stop();\n    wsServer = null;\n  }\n\n  debugLogger?.info(COMPONENTS.EXTENSION, '👋 AI Communication system cleaned up');\n}\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex|Readable$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst { randomBytes, createHash } = require('crypto');\nconst { Duplex, Readable } = require('stream');\nconst { URL } = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\nconst { isBlob } = require('./validation');\n\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID,\n  kForOnEventAttribute,\n  kListener,\n  kStatusCode,\n  kWebSocket,\n  NOOP\n} = require('./constants');\nconst {\n  EventTarget: { addEventListener, removeEventListener }\n} = require('./event-target');\nconst { format, parse } = require('./extension');\nconst { toBuffer } = require('./buffer-util');\n\nconst closeTimeout = 30 * 1000;\nconst kAborted = Symbol('kAborted');\nconst protocolVersions = [8, 13];\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst subprotocolRegex = /^[!#$%&'*+\\-.0-9A-Z^_`|a-z~]+$/;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeCode = 1006;\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = EMPTY_BUFFER;\n    this._closeTimer = null;\n    this._errorEmitted = false;\n    this._extensions = {};\n    this._paused = false;\n    this._protocol = '';\n    this._readyState = WebSocket.CONNECTING;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (protocols === undefined) {\n        protocols = [];\n      } else if (!Array.isArray(protocols)) {\n        if (typeof protocols === 'object' && protocols !== null) {\n          options = protocols;\n          protocols = [];\n        } else {\n          protocols = [protocols];\n        }\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._autoPong = options.autoPong;\n      this._isServer = true;\n    }\n  }\n\n  /**\n   * For historical reasons, the custom \"nodebuffer\" type is used by the default\n   * instead of \"blob\".\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    return this._socket._writableState.length + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get isPaused() {\n    return this._paused;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onclose() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onerror() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onopen() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onmessage() {\n    return null;\n  }\n\n  /**\n   * @type {String}\n   */\n  get protocol() {\n    return this._protocol;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get readyState() {\n    return this._readyState;\n  }\n\n  /**\n   * @type {String}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Object} options Options object\n   * @param {Boolean} [options.allowSynchronousEvents=false] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Number} [options.maxPayload=0] The maximum allowed message size\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @private\n   */\n  setSocket(socket, head, options) {\n    const receiver = new Receiver({\n      allowSynchronousEvents: options.allowSynchronousEvents,\n      binaryType: this.binaryType,\n      extensions: this._extensions,\n      isServer: this._isServer,\n      maxPayload: options.maxPayload,\n      skipUTF8Validation: options.skipUTF8Validation\n    });\n\n    const sender = new Sender(socket, this._extensions, options.generateMask);\n\n    this._receiver = receiver;\n    this._sender = sender;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    sender[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    sender.onerror = senderOnError;\n\n    //\n    // These methods may not be available if `socket` is just a `Duplex`.\n    //\n    if (socket.setTimeout) socket.setTimeout(0);\n    if (socket.setNoDelay) socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this._readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    if (!this._socket) {\n      this._readyState = WebSocket.CLOSED;\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this._readyState = WebSocket.CLOSED;\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {(String|Buffer)} [data] The reason why the connection is\n   *     closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (\n        this._closeFrameSent &&\n        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)\n      ) {\n        this._socket.end();\n      }\n\n      return;\n    }\n\n    this._readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (\n        this._closeFrameReceived ||\n        this._receiver._writableState.errorEmitted\n      ) {\n        this._socket.end();\n      }\n    });\n\n    setCloseTimer(this);\n  }\n\n  /**\n   * Pause the socket.\n   *\n   * @public\n   */\n  pause() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = true;\n    this._socket.pause();\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Resume the socket.\n   *\n   * @public\n   */\n  resume() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = false;\n    if (!this._receiver._writableState.needDrain) this._socket.resume();\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this._socket) {\n      this._readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n[\n  'binaryType',\n  'bufferedAmount',\n  'extensions',\n  'isPaused',\n  'protocol',\n  'readyState',\n  'url'\n].forEach((property) => {\n  Object.defineProperty(WebSocket.prototype, property, { enumerable: true });\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    enumerable: true,\n    get() {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) return listener[kListener];\n      }\n\n      return null;\n    },\n    set(handler) {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) {\n          this.removeListener(method, listener);\n          break;\n        }\n      }\n\n      if (typeof handler !== 'function') return;\n\n      this.addEventListener(method, handler, {\n        [kForOnEventAttribute]: true\n      });\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {Array} protocols The subprotocols\n * @param {Object} [options] Connection options\n * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether any\n *     of the `'message'`, `'ping'`, and `'pong'` events can be emitted multiple\n *     times in the same tick\n * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n *     automatically send a pong in response to a ping\n * @param {Function} [options.finishRequest] A function which can be used to\n *     customize the headers of each http request before it is sent\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Function} [options.generateMask] The function used to generate the\n *     masking key\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n *     not to skip UTF-8 validation for text and close messages\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    allowSynchronousEvents: true,\n    autoPong: true,\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    skipUTF8Validation: false,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: 'GET',\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  websocket._autoPong = opts.autoPong;\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL) {\n    parsedUrl = address;\n  } else {\n    try {\n      parsedUrl = new URL(address);\n    } catch (e) {\n      throw new SyntaxError(`Invalid URL: ${address}`);\n    }\n  }\n\n  if (parsedUrl.protocol === 'http:') {\n    parsedUrl.protocol = 'ws:';\n  } else if (parsedUrl.protocol === 'https:') {\n    parsedUrl.protocol = 'wss:';\n  }\n\n  websocket._url = parsedUrl.href;\n\n  const isSecure = parsedUrl.protocol === 'wss:';\n  const isIpcUrl = parsedUrl.protocol === 'ws+unix:';\n  let invalidUrlMessage;\n\n  if (parsedUrl.protocol !== 'ws:' && !isSecure && !isIpcUrl) {\n    invalidUrlMessage =\n      'The URL\\'s protocol must be one of \"ws:\", \"wss:\", ' +\n      '\"http:\", \"https:\", or \"ws+unix:\"';\n  } else if (isIpcUrl && !parsedUrl.pathname) {\n    invalidUrlMessage = \"The URL's pathname is empty\";\n  } else if (parsedUrl.hash) {\n    invalidUrlMessage = 'The URL contains a fragment identifier';\n  }\n\n  if (invalidUrlMessage) {\n    const err = new SyntaxError(invalidUrlMessage);\n\n    if (websocket._redirects === 0) {\n      throw err;\n    } else {\n      emitErrorAndClose(websocket, err);\n      return;\n    }\n  }\n\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const request = isSecure ? https.request : http.request;\n  const protocolSet = new Set();\n  let perMessageDeflate;\n\n  opts.createConnection =\n    opts.createConnection || (isSecure ? tlsConnect : netConnect);\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    ...opts.headers,\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket'\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols.length) {\n    for (const protocol of protocols) {\n      if (\n        typeof protocol !== 'string' ||\n        !subprotocolRegex.test(protocol) ||\n        protocolSet.has(protocol)\n      ) {\n        throw new SyntaxError(\n          'An invalid or duplicated subprotocol was specified'\n        );\n      }\n\n      protocolSet.add(protocol);\n    }\n\n    opts.headers['Sec-WebSocket-Protocol'] = protocols.join(',');\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isIpcUrl) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  let req;\n\n  if (opts.followRedirects) {\n    if (websocket._redirects === 0) {\n      websocket._originalIpc = isIpcUrl;\n      websocket._originalSecure = isSecure;\n      websocket._originalHostOrSocketPath = isIpcUrl\n        ? opts.socketPath\n        : parsedUrl.host;\n\n      const headers = options && options.headers;\n\n      //\n      // Shallow copy the user provided options so that headers can be changed\n      // without mutating the original object.\n      //\n      options = { ...options, headers: {} };\n\n      if (headers) {\n        for (const [key, value] of Object.entries(headers)) {\n          options.headers[key.toLowerCase()] = value;\n        }\n      }\n    } else if (websocket.listenerCount('redirect') === 0) {\n      const isSameHost = isIpcUrl\n        ? websocket._originalIpc\n          ? opts.socketPath === websocket._originalHostOrSocketPath\n          : false\n        : websocket._originalIpc\n          ? false\n          : parsedUrl.host === websocket._originalHostOrSocketPath;\n\n      if (!isSameHost || (websocket._originalSecure && !isSecure)) {\n        //\n        // Match curl 7.77.0 behavior and drop the following headers. These\n        // headers are also dropped when following a redirect to a subdomain.\n        //\n        delete opts.headers.authorization;\n        delete opts.headers.cookie;\n\n        if (!isSameHost) delete opts.headers.host;\n\n        opts.auth = undefined;\n      }\n    }\n\n    //\n    // Match curl 7.77.0 behavior and make the first `Authorization` header win.\n    // If the `Authorization` header is set, then there is nothing to do as it\n    // will take precedence.\n    //\n    if (opts.auth && !options.headers.authorization) {\n      options.headers.authorization =\n        'Basic ' + Buffer.from(opts.auth).toString('base64');\n    }\n\n    req = websocket._req = request(opts);\n\n    if (websocket._redirects) {\n      //\n      // Unlike what is done for the `'upgrade'` event, no early exit is\n      // triggered here if the user calls `websocket.close()` or\n      // `websocket.terminate()` from a listener of the `'redirect'` event. This\n      // is because the user can also call `request.destroy()` with an error\n      // before calling `websocket.close()` or `websocket.terminate()` and this\n      // would result in an error being emitted on the `request` object with no\n      // `'error'` event listeners attached.\n      //\n      websocket.emit('redirect', websocket.url, req);\n    }\n  } else {\n    req = websocket._req = request(opts);\n  }\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (req === null || req[kAborted]) return;\n\n    req = websocket._req = null;\n    emitErrorAndClose(websocket, err);\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      let addr;\n\n      try {\n        addr = new URL(location, address);\n      } catch (e) {\n        const err = new SyntaxError(`Invalid URL: ${location}`);\n        emitErrorAndClose(websocket, err);\n        return;\n      }\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the\n    // `'upgrade'` event.\n    //\n    if (websocket.readyState !== WebSocket.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    const upgrade = res.headers.upgrade;\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      abortHandshake(websocket, socket, 'Invalid Upgrade header');\n      return;\n    }\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    let protError;\n\n    if (serverProt !== undefined) {\n      if (!protocolSet.size) {\n        protError = 'Server sent a subprotocol but none was requested';\n      } else if (!protocolSet.has(serverProt)) {\n        protError = 'Server sent an invalid subprotocol';\n      }\n    } else if (protocolSet.size) {\n      protError = 'Server sent no subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket._protocol = serverProt;\n\n    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];\n\n    if (secWebSocketExtensions !== undefined) {\n      if (!perMessageDeflate) {\n        const message =\n          'Server sent a Sec-WebSocket-Extensions header but no extension ' +\n          'was requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      let extensions;\n\n      try {\n        extensions = parse(secWebSocketExtensions);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      const extensionNames = Object.keys(extensions);\n\n      if (\n        extensionNames.length !== 1 ||\n        extensionNames[0] !== PerMessageDeflate.extensionName\n      ) {\n        const message = 'Server indicated an extension that was not requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      try {\n        perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      websocket._extensions[PerMessageDeflate.extensionName] =\n        perMessageDeflate;\n    }\n\n    websocket.setSocket(socket, head, {\n      allowSynchronousEvents: opts.allowSynchronousEvents,\n      generateMask: opts.generateMask,\n      maxPayload: opts.maxPayload,\n      skipUTF8Validation: opts.skipUTF8Validation\n    });\n  });\n\n  if (opts.finishRequest) {\n    opts.finishRequest(req, websocket);\n  } else {\n    req.end();\n  }\n}\n\n/**\n * Emit the `'error'` and `'close'` events.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {Error} The error to emit\n * @private\n */\nfunction emitErrorAndClose(websocket, err) {\n  websocket._readyState = WebSocket.CLOSING;\n  //\n  // The following assignment is practically useless and is done only for\n  // consistency.\n  //\n  websocket._errorEmitted = true;\n  websocket.emit('error', err);\n  websocket.emitClose();\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = net.isIP(options.host) ? '' : options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket._readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream[kAborted] = true;\n    stream.abort();\n\n    if (stream.socket && !stream.socket.destroyed) {\n      //\n      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n      // called after the request completed. See\n      // https://github.com/websockets/ws/issues/1869.\n      //\n      stream.socket.destroy();\n    }\n\n    process.nextTick(emitErrorAndClose, websocket, err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = isBlob(data) ? data.size : toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    process.nextTick(cb, err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {Buffer} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (websocket._socket[kWebSocket] === undefined) return;\n\n  websocket._socket.removeListener('data', socketOnData);\n  process.nextTick(resume, websocket._socket);\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  const websocket = this[kWebSocket];\n\n  if (!websocket.isPaused) websocket._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._socket[kWebSocket] !== undefined) {\n    websocket._socket.removeListener('data', socketOnData);\n\n    //\n    // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n    // https://github.com/websockets/ws/issues/1940.\n    //\n    process.nextTick(resume, websocket._socket);\n\n    websocket.close(err[kStatusCode]);\n  }\n\n  if (!websocket._errorEmitted) {\n    websocket._errorEmitted = true;\n    websocket.emit('error', err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {Buffer|ArrayBuffer|Buffer[])} data The message\n * @param {Boolean} isBinary Specifies whether the message is binary or not\n * @private\n */\nfunction receiverOnMessage(data, isBinary) {\n  this[kWebSocket].emit('message', data, isBinary);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._autoPong) websocket.pong(data, !this._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */\nfunction resume(stream) {\n  stream.resume();\n}\n\n/**\n * The `Sender` error event handler.\n *\n * @param {Error} The error\n * @private\n */\nfunction senderOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket.readyState === WebSocket.CLOSED) return;\n  if (websocket.readyState === WebSocket.OPEN) {\n    websocket._readyState = WebSocket.CLOSING;\n    setCloseTimer(websocket);\n  }\n\n  //\n  // `socket.end()` is used instead of `socket.destroy()` to allow the other\n  // peer to finish sending queued data. There is no need to set a timer here\n  // because `CLOSING` means that it is already set or not needed.\n  //\n  this._socket.end();\n\n  if (!websocket._errorEmitted) {\n    websocket._errorEmitted = true;\n    websocket.emit('error', err);\n  }\n}\n\n/**\n * Set a timer to destroy the underlying raw socket of a WebSocket.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @private\n */\nfunction setCloseTimer(websocket) {\n  websocket._closeTimer = setTimeout(\n    websocket._socket.destroy.bind(websocket._socket),\n    closeTimeout\n  );\n}\n\n/**\n * The listener of the socket `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('data', socketOnData);\n  this.removeListener('end', socketOnEnd);\n\n  websocket._readyState = WebSocket.CLOSING;\n\n  let chunk;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk.\n  //\n  if (\n    !this._readableState.endEmitted &&\n    !websocket._closeFrameReceived &&\n    !websocket._receiver._writableState.errorEmitted &&\n    (chunk = websocket._socket.read()) !== null\n  ) {\n    websocket._receiver.write(chunk);\n  }\n\n  websocket._receiver.end();\n\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the socket `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the socket `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket._readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the socket `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket._readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n","'use strict';\n\nconst WebSocket = require('./lib/websocket');\n\nWebSocket.createWebSocketStream = require('./lib/stream');\nWebSocket.Server = require('./lib/websocket-server');\nWebSocket.Receiver = require('./lib/receiver');\nWebSocket.Sender = require('./lib/sender');\n\nWebSocket.WebSocket = WebSocket;\nWebSocket.WebSocketServer = WebSocket.Server;\n\nmodule.exports = WebSocket;\n","import * as vscode from 'vscode';\nimport { createActor } from 'xstate';\nimport { COMPONENTS, type DebugLogger } from '../core/debugLogger';\nimport { coordinatorMachine } from '../machines/coordinatorMachine';\n\n/**\n * Actor-based formatting provider that uses XState machines for orchestration\n * This provides better error handling, race condition prevention, and performance\n */\nexport class ActorFormattingProvider implements vscode.DocumentFormattingEditProvider {\n  private version: string;\n  private debugLogger?: DebugLogger;\n\n  constructor(_outputChannel?: vscode.OutputChannel, debugLogger?: DebugLogger) {\n    this.debugLogger = debugLogger;\n\n    // Get extension version\n    const extension = vscode.extensions.getExtension('actor-spa.actor-spa-framework');\n    this.version = extension?.packageJSON?.version || 'unknown';\n\n    this.log(`🚀 Actor-based formatting provider v${this.version} initialized`);\n  }\n\n  private log(message: string, data?: unknown): void {\n    if (this.debugLogger) {\n      this.debugLogger.debug(COMPONENTS.ACTOR_FORMATTER, message, data);\n    }\n    // Note: No fallback console.log - if debugLogger isn't available,\n    // the logging is simply skipped to follow proper actor communication patterns\n  }\n\n  async provideDocumentFormattingEdits(\n    document: vscode.TextDocument,\n    options: vscode.FormattingOptions,\n    token: vscode.CancellationToken\n  ): Promise<vscode.TextEdit[]> {\n    this.log(`🎬 Starting actor-based formatting for ${document.fileName}`, {\n      languageId: document.languageId,\n      lineCount: document.lineCount,\n      tabSize: options.tabSize,\n      insertSpaces: options.insertSpaces,\n    });\n\n    try {\n      // Check if formatting is enabled\n      const config = vscode.workspace.getConfiguration('actor-spa.formatting');\n      if (!config.get<boolean>('enabled', true)) {\n        this.log('❌ Formatting disabled in configuration');\n        return [];\n      }\n\n      // Create coordinator actor\n      const coordinatorActor = createActor(coordinatorMachine);\n\n      this.log('🎭 Created coordinator actor, starting machine');\n      coordinatorActor.start();\n\n      return new Promise<vscode.TextEdit[]>((resolve) => {\n        let hasResolved = false;\n\n        // Set up cancellation handling\n        const cancellationListener = token.onCancellationRequested(() => {\n          if (!hasResolved) {\n            hasResolved = true;\n            this.log('⚠️ Formatting cancelled by user');\n            coordinatorActor.stop();\n            resolve([]);\n          }\n        });\n\n        // Subscribe to state changes\n        const subscription = coordinatorActor.subscribe({\n          next: (state) => {\n            this.log(`📊 Actor state: ${JSON.stringify(state.value)}`, {\n              context: {\n                templatesFound: state.context.templates.length,\n                jobsCompleted: state.context.completedJobs.length,\n                errors: state.context.errors.length,\n                edits: state.context.edits.length,\n              },\n            });\n\n            // Handle completion\n            if (state.matches('completing') && !hasResolved) {\n              hasResolved = true;\n\n              const stats = state.context.stats;\n              this.log('✅ Formatting completed successfully', {\n                totalTemplates: stats.totalTemplates,\n                successfulJobs: stats.successfulJobs,\n                failedJobs: stats.failedJobs,\n                processingTimeMs: stats.processingTimeMs,\n                editsGenerated: state.context.edits.length,\n              });\n\n              // Clean up\n              subscription.unsubscribe();\n              cancellationListener.dispose();\n              coordinatorActor.stop();\n\n              resolve(state.context.edits);\n            }\n\n            // Handle errors\n            else if (state.matches('error') && !hasResolved) {\n              hasResolved = true;\n\n              const errors = state.context.errors;\n              this.log('❌ Formatting failed with errors', {\n                errors,\n                errorCount: errors.length,\n              });\n\n              // Clean up\n              subscription.unsubscribe();\n              cancellationListener.dispose();\n              coordinatorActor.stop();\n\n              // Don't reject - return empty edits instead to avoid disrupting the user\n              resolve([]);\n            }\n          },\n          error: (error) => {\n            if (!hasResolved) {\n              hasResolved = true;\n\n              this.log('💥 Actor subscription error', {\n                error: error instanceof Error ? error.message : String(error),\n                stack: error instanceof Error ? error.stack : undefined,\n              });\n\n              // Clean up\n              subscription.unsubscribe();\n              cancellationListener.dispose();\n              coordinatorActor.stop();\n\n              // Don't reject - return empty edits instead\n              resolve([]);\n            }\n          },\n        });\n\n        // Start the formatting process\n        this.log('🚀 Sending FORMAT event to coordinator');\n        coordinatorActor.send({\n          type: 'FORMAT',\n          document,\n          options,\n          token,\n        });\n\n        // Set up timeout as a safety measure\n        setTimeout(() => {\n          if (!hasResolved) {\n            hasResolved = true;\n\n            this.log('⏰ Formatting timeout - operation took too long');\n\n            // Clean up\n            subscription.unsubscribe();\n            cancellationListener.dispose();\n            coordinatorActor.stop();\n\n            resolve([]);\n          }\n        }, 60000); // 60 second timeout\n      });\n    } catch (error) {\n      this.log('💥 Unexpected formatting error', {\n        error: error instanceof Error ? error.message : String(error),\n        stack: error instanceof Error ? error.stack : undefined,\n      });\n\n      // Return empty edits instead of throwing to avoid disrupting the user\n      return [];\n    }\n  }\n}\n\n/**\n * Range formatting provider that delegates to the document formatter\n */\nexport class ActorRangeFormattingProvider implements vscode.DocumentRangeFormattingEditProvider {\n  private formattingProvider: ActorFormattingProvider;\n\n  constructor(outputChannel?: vscode.OutputChannel, debugLogger?: DebugLogger) {\n    this.formattingProvider = new ActorFormattingProvider(outputChannel, debugLogger);\n  }\n\n  async provideDocumentRangeFormattingEdits(\n    document: vscode.TextDocument,\n    _range: vscode.Range,\n    options: vscode.FormattingOptions,\n    token: vscode.CancellationToken\n  ): Promise<vscode.TextEdit[]> {\n    // For now, format the whole document since template literals can span multiple lines\n    // In the future, we could enhance this to only format templates that intersect with the range\n    return this.formattingProvider.provideDocumentFormattingEdits(document, options, token);\n  }\n}\n\n/**\n * Factory function to create the appropriate formatting provider based on configuration\n */\nexport function createFormattingProvider(\n  outputChannel?: vscode.OutputChannel,\n  debugLogger?: DebugLogger\n): {\n  documentProvider: vscode.DocumentFormattingEditProvider;\n  rangeProvider: vscode.DocumentRangeFormattingEditProvider;\n} {\n  const config = vscode.workspace.getConfiguration('actor-spa');\n  const useActorFormatter = config.get<boolean>('useActorFormatter', true);\n\n  if (useActorFormatter) {\n    const documentProvider = new ActorFormattingProvider(outputChannel, debugLogger);\n    const rangeProvider = new ActorRangeFormattingProvider(outputChannel, debugLogger);\n\n    return { documentProvider, rangeProvider };\n  }\n\n  // Fallback to the legacy XState formatter\n  const {\n    XStateFormattingProvider,\n    XStateRangeFormattingProvider,\n  } = require('./xstateFormattingProvider');\n\n  return {\n    documentProvider: new XStateFormattingProvider(outputChannel),\n    rangeProvider: new XStateRangeFormattingProvider(outputChannel),\n  };\n}\n","// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal() {\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  }\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n}\nfunction getDevTools() {\n  const w = getGlobal();\n  if (w.__xstate__) {\n    return w.__xstate__;\n  }\n  return undefined;\n}\nfunction registerService(service) {\n  if (typeof window === 'undefined') {\n    return;\n  }\n  const devTools = getDevTools();\n  if (devTools) {\n    devTools.register(service);\n  }\n}\nconst devToolsAdapter = service => {\n  if (typeof window === 'undefined') {\n    return;\n  }\n  const devTools = getDevTools();\n  if (devTools) {\n    devTools.register(service);\n  }\n};\n\nexport { devToolsAdapter, getGlobal, registerService };\n","import { devToolsAdapter } from '../dev/dist/xstate-dev.esm.js';\n\nclass Mailbox {\n  constructor(_process) {\n    this._process = _process;\n    this._active = false;\n    this._current = null;\n    this._last = null;\n  }\n  start() {\n    this._active = true;\n    this.flush();\n  }\n  clear() {\n    // we can't set _current to null because we might be currently processing\n    // and enqueue following clear shouldn't start processing the enqueued item immediately\n    if (this._current) {\n      this._current.next = null;\n      this._last = this._current;\n    }\n  }\n  enqueue(event) {\n    const enqueued = {\n      value: event,\n      next: null\n    };\n    if (this._current) {\n      this._last.next = enqueued;\n      this._last = enqueued;\n      return;\n    }\n    this._current = enqueued;\n    this._last = enqueued;\n    if (this._active) {\n      this.flush();\n    }\n  }\n  flush() {\n    while (this._current) {\n      // atm the given _process is responsible for implementing proper try/catch handling\n      // we assume here that this won't throw in a way that can affect this mailbox\n      const consumed = this._current;\n      this._process(consumed.value);\n      this._current = consumed.next;\n    }\n    this._last = null;\n  }\n}\n\nconst STATE_DELIMITER = '.';\nconst TARGETLESS_KEY = '';\nconst NULL_EVENT = '';\nconst STATE_IDENTIFIER = '#';\nconst WILDCARD = '*';\nconst XSTATE_INIT = 'xstate.init';\nconst XSTATE_ERROR = 'xstate.error';\nconst XSTATE_STOP = 'xstate.stop';\n\n/**\n * Returns an event that represents an implicit event that is sent after the\n * specified `delay`.\n *\n * @param delayRef The delay in milliseconds\n * @param id The state node ID where this event is handled\n */\nfunction createAfterEvent(delayRef, id) {\n  return {\n    type: `xstate.after.${delayRef}.${id}`\n  };\n}\n\n/**\n * Returns an event that represents that a final state node has been reached in\n * the parent state node.\n *\n * @param id The final state node's parent state node `id`\n * @param output The data to pass into the event\n */\nfunction createDoneStateEvent(id, output) {\n  return {\n    type: `xstate.done.state.${id}`,\n    output\n  };\n}\n\n/**\n * Returns an event that represents that an invoked service has terminated.\n *\n * An invoked service is terminated when it has reached a top-level final state\n * node, but not when it is canceled.\n *\n * @param invokeId The invoked service ID\n * @param output The data to pass into the event\n */\nfunction createDoneActorEvent(invokeId, output) {\n  return {\n    type: `xstate.done.actor.${invokeId}`,\n    output,\n    actorId: invokeId\n  };\n}\nfunction createErrorActorEvent(id, error) {\n  return {\n    type: `xstate.error.actor.${id}`,\n    error,\n    actorId: id\n  };\n}\nfunction createInitEvent(input) {\n  return {\n    type: XSTATE_INIT,\n    input\n  };\n}\n\n/**\n * This function makes sure that unhandled errors are thrown in a separate\n * macrotask. It allows those errors to be detected by global error handlers and\n * reported to bug tracking services without interrupting our own stack of\n * execution.\n *\n * @param err Error to be thrown\n */\nfunction reportUnhandledError(err) {\n  setTimeout(() => {\n    throw err;\n  });\n}\n\nconst symbolObservable = (() => typeof Symbol === 'function' && Symbol.observable || '@@observable')();\n\nfunction matchesState(parentStateId, childStateId) {\n  const parentStateValue = toStateValue(parentStateId);\n  const childStateValue = toStateValue(childStateId);\n  if (typeof childStateValue === 'string') {\n    if (typeof parentStateValue === 'string') {\n      return childStateValue === parentStateValue;\n    }\n\n    // Parent more specific than child\n    return false;\n  }\n  if (typeof parentStateValue === 'string') {\n    return parentStateValue in childStateValue;\n  }\n  return Object.keys(parentStateValue).every(key => {\n    if (!(key in childStateValue)) {\n      return false;\n    }\n    return matchesState(parentStateValue[key], childStateValue[key]);\n  });\n}\nfunction toStatePath(stateId) {\n  if (isArray(stateId)) {\n    return stateId;\n  }\n  const result = [];\n  let segment = '';\n  for (let i = 0; i < stateId.length; i++) {\n    const char = stateId.charCodeAt(i);\n    switch (char) {\n      // \\\n      case 92:\n        // consume the next character\n        segment += stateId[i + 1];\n        // and skip over it\n        i++;\n        continue;\n      // .\n      case 46:\n        result.push(segment);\n        segment = '';\n        continue;\n    }\n    segment += stateId[i];\n  }\n  result.push(segment);\n  return result;\n}\nfunction toStateValue(stateValue) {\n  if (isMachineSnapshot(stateValue)) {\n    return stateValue.value;\n  }\n  if (typeof stateValue !== 'string') {\n    return stateValue;\n  }\n  const statePath = toStatePath(stateValue);\n  return pathToStateValue(statePath);\n}\nfunction pathToStateValue(statePath) {\n  if (statePath.length === 1) {\n    return statePath[0];\n  }\n  const value = {};\n  let marker = value;\n  for (let i = 0; i < statePath.length - 1; i++) {\n    if (i === statePath.length - 2) {\n      marker[statePath[i]] = statePath[i + 1];\n    } else {\n      const previous = marker;\n      marker = {};\n      previous[statePath[i]] = marker;\n    }\n  }\n  return value;\n}\nfunction mapValues(collection, iteratee) {\n  const result = {};\n  const collectionKeys = Object.keys(collection);\n  for (let i = 0; i < collectionKeys.length; i++) {\n    const key = collectionKeys[i];\n    result[key] = iteratee(collection[key], key, collection, i);\n  }\n  return result;\n}\nfunction toArrayStrict(value) {\n  if (isArray(value)) {\n    return value;\n  }\n  return [value];\n}\nfunction toArray(value) {\n  if (value === undefined) {\n    return [];\n  }\n  return toArrayStrict(value);\n}\nfunction resolveOutput(mapper, context, event, self) {\n  if (typeof mapper === 'function') {\n    return mapper({\n      context,\n      event,\n      self\n    });\n  }\n  return mapper;\n}\nfunction isArray(value) {\n  return Array.isArray(value);\n}\nfunction isErrorActorEvent(event) {\n  return event.type.startsWith('xstate.error.actor');\n}\nfunction toTransitionConfigArray(configLike) {\n  return toArrayStrict(configLike).map(transitionLike => {\n    if (typeof transitionLike === 'undefined' || typeof transitionLike === 'string') {\n      return {\n        target: transitionLike\n      };\n    }\n    return transitionLike;\n  });\n}\nfunction normalizeTarget(target) {\n  if (target === undefined || target === TARGETLESS_KEY) {\n    return undefined;\n  }\n  return toArray(target);\n}\nfunction toObserver(nextHandler, errorHandler, completionHandler) {\n  const isObserver = typeof nextHandler === 'object';\n  const self = isObserver ? nextHandler : undefined;\n  return {\n    next: (isObserver ? nextHandler.next : nextHandler)?.bind(self),\n    error: (isObserver ? nextHandler.error : errorHandler)?.bind(self),\n    complete: (isObserver ? nextHandler.complete : completionHandler)?.bind(self)\n  };\n}\nfunction createInvokeId(stateNodeId, index) {\n  return `${index}.${stateNodeId}`;\n}\nfunction resolveReferencedActor(machine, src) {\n  const match = src.match(/^xstate\\.invoke\\.(\\d+)\\.(.*)/);\n  if (!match) {\n    return machine.implementations.actors[src];\n  }\n  const [, indexStr, nodeId] = match;\n  const node = machine.getStateNodeById(nodeId);\n  const invokeConfig = node.config.invoke;\n  return (Array.isArray(invokeConfig) ? invokeConfig[indexStr] : invokeConfig).src;\n}\nfunction getAllOwnEventDescriptors(snapshot) {\n  return [...new Set([...snapshot._nodes.flatMap(sn => sn.ownEvents)])];\n}\n\nfunction createScheduledEventId(actorRef, id) {\n  return `${actorRef.sessionId}.${id}`;\n}\nlet idCounter = 0;\nfunction createSystem(rootActor, options) {\n  const children = new Map();\n  const keyedActors = new Map();\n  const reverseKeyedActors = new WeakMap();\n  const inspectionObservers = new Set();\n  const timerMap = {};\n  const {\n    clock,\n    logger\n  } = options;\n  const scheduler = {\n    schedule: (source, target, event, delay, id = Math.random().toString(36).slice(2)) => {\n      const scheduledEvent = {\n        source,\n        target,\n        event,\n        delay,\n        id,\n        startedAt: Date.now()\n      };\n      const scheduledEventId = createScheduledEventId(source, id);\n      system._snapshot._scheduledEvents[scheduledEventId] = scheduledEvent;\n      const timeout = clock.setTimeout(() => {\n        delete timerMap[scheduledEventId];\n        delete system._snapshot._scheduledEvents[scheduledEventId];\n        system._relay(source, target, event);\n      }, delay);\n      timerMap[scheduledEventId] = timeout;\n    },\n    cancel: (source, id) => {\n      const scheduledEventId = createScheduledEventId(source, id);\n      const timeout = timerMap[scheduledEventId];\n      delete timerMap[scheduledEventId];\n      delete system._snapshot._scheduledEvents[scheduledEventId];\n      if (timeout !== undefined) {\n        clock.clearTimeout(timeout);\n      }\n    },\n    cancelAll: actorRef => {\n      for (const scheduledEventId in system._snapshot._scheduledEvents) {\n        const scheduledEvent = system._snapshot._scheduledEvents[scheduledEventId];\n        if (scheduledEvent.source === actorRef) {\n          scheduler.cancel(actorRef, scheduledEvent.id);\n        }\n      }\n    }\n  };\n  const sendInspectionEvent = event => {\n    if (!inspectionObservers.size) {\n      return;\n    }\n    const resolvedInspectionEvent = {\n      ...event,\n      rootId: rootActor.sessionId\n    };\n    inspectionObservers.forEach(observer => observer.next?.(resolvedInspectionEvent));\n  };\n  const system = {\n    _snapshot: {\n      _scheduledEvents: (options?.snapshot && options.snapshot.scheduler) ?? {}\n    },\n    _bookId: () => `x:${idCounter++}`,\n    _register: (sessionId, actorRef) => {\n      children.set(sessionId, actorRef);\n      return sessionId;\n    },\n    _unregister: actorRef => {\n      children.delete(actorRef.sessionId);\n      const systemId = reverseKeyedActors.get(actorRef);\n      if (systemId !== undefined) {\n        keyedActors.delete(systemId);\n        reverseKeyedActors.delete(actorRef);\n      }\n    },\n    get: systemId => {\n      return keyedActors.get(systemId);\n    },\n    _set: (systemId, actorRef) => {\n      const existing = keyedActors.get(systemId);\n      if (existing && existing !== actorRef) {\n        throw new Error(`Actor with system ID '${systemId}' already exists.`);\n      }\n      keyedActors.set(systemId, actorRef);\n      reverseKeyedActors.set(actorRef, systemId);\n    },\n    inspect: observerOrFn => {\n      const observer = toObserver(observerOrFn);\n      inspectionObservers.add(observer);\n      return {\n        unsubscribe() {\n          inspectionObservers.delete(observer);\n        }\n      };\n    },\n    _sendInspectionEvent: sendInspectionEvent,\n    _relay: (source, target, event) => {\n      system._sendInspectionEvent({\n        type: '@xstate.event',\n        sourceRef: source,\n        actorRef: target,\n        event\n      });\n      target._send(event);\n    },\n    scheduler,\n    getSnapshot: () => {\n      return {\n        _scheduledEvents: {\n          ...system._snapshot._scheduledEvents\n        }\n      };\n    },\n    start: () => {\n      const scheduledEvents = system._snapshot._scheduledEvents;\n      system._snapshot._scheduledEvents = {};\n      for (const scheduledId in scheduledEvents) {\n        const {\n          source,\n          target,\n          event,\n          delay,\n          id\n        } = scheduledEvents[scheduledId];\n        scheduler.schedule(source, target, event, delay, id);\n      }\n    },\n    _clock: clock,\n    _logger: logger\n  };\n  return system;\n}\n\n// those are needed to make JSDoc `@link` work properly\n\nlet executingCustomAction = false;\nconst $$ACTOR_TYPE = 1;\n\n// those values are currently used by @xstate/react directly so it's important to keep the assigned values in sync\nlet ProcessingStatus = /*#__PURE__*/function (ProcessingStatus) {\n  ProcessingStatus[ProcessingStatus[\"NotStarted\"] = 0] = \"NotStarted\";\n  ProcessingStatus[ProcessingStatus[\"Running\"] = 1] = \"Running\";\n  ProcessingStatus[ProcessingStatus[\"Stopped\"] = 2] = \"Stopped\";\n  return ProcessingStatus;\n}({});\nconst defaultOptions = {\n  clock: {\n    setTimeout: (fn, ms) => {\n      return setTimeout(fn, ms);\n    },\n    clearTimeout: id => {\n      return clearTimeout(id);\n    }\n  },\n  logger: console.log.bind(console),\n  devTools: false\n};\n\n/**\n * An Actor is a running process that can receive events, send events and change\n * its behavior based on the events it receives, which can cause effects outside\n * of the actor. When you run a state machine, it becomes an actor.\n */\nclass Actor {\n  /**\n   * Creates a new actor instance for the given logic with the provided options,\n   * if any.\n   *\n   * @param logic The logic to create an actor from\n   * @param options Actor options\n   */\n  constructor(logic, options) {\n    this.logic = logic;\n    /** The current internal state of the actor. */\n    this._snapshot = void 0;\n    /**\n     * The clock that is responsible for setting and clearing timeouts, such as\n     * delayed events and transitions.\n     */\n    this.clock = void 0;\n    this.options = void 0;\n    /** The unique identifier for this actor relative to its parent. */\n    this.id = void 0;\n    this.mailbox = new Mailbox(this._process.bind(this));\n    this.observers = new Set();\n    this.eventListeners = new Map();\n    this.logger = void 0;\n    /** @internal */\n    this._processingStatus = ProcessingStatus.NotStarted;\n    // Actor Ref\n    this._parent = void 0;\n    /** @internal */\n    this._syncSnapshot = void 0;\n    this.ref = void 0;\n    // TODO: add typings for system\n    this._actorScope = void 0;\n    this._systemId = void 0;\n    /** The globally unique process ID for this invocation. */\n    this.sessionId = void 0;\n    /** The system to which this actor belongs. */\n    this.system = void 0;\n    this._doneEvent = void 0;\n    this.src = void 0;\n    // array of functions to defer\n    this._deferred = [];\n    const resolvedOptions = {\n      ...defaultOptions,\n      ...options\n    };\n    const {\n      clock,\n      logger,\n      parent,\n      syncSnapshot,\n      id,\n      systemId,\n      inspect\n    } = resolvedOptions;\n    this.system = parent ? parent.system : createSystem(this, {\n      clock,\n      logger\n    });\n    if (inspect && !parent) {\n      // Always inspect at the system-level\n      this.system.inspect(toObserver(inspect));\n    }\n    this.sessionId = this.system._bookId();\n    this.id = id ?? this.sessionId;\n    this.logger = options?.logger ?? this.system._logger;\n    this.clock = options?.clock ?? this.system._clock;\n    this._parent = parent;\n    this._syncSnapshot = syncSnapshot;\n    this.options = resolvedOptions;\n    this.src = resolvedOptions.src ?? logic;\n    this.ref = this;\n    this._actorScope = {\n      self: this,\n      id: this.id,\n      sessionId: this.sessionId,\n      logger: this.logger,\n      defer: fn => {\n        this._deferred.push(fn);\n      },\n      system: this.system,\n      stopChild: child => {\n        if (child._parent !== this) {\n          throw new Error(`Cannot stop child actor ${child.id} of ${this.id} because it is not a child`);\n        }\n        child._stop();\n      },\n      emit: emittedEvent => {\n        const listeners = this.eventListeners.get(emittedEvent.type);\n        const wildcardListener = this.eventListeners.get('*');\n        if (!listeners && !wildcardListener) {\n          return;\n        }\n        const allListeners = [...(listeners ? listeners.values() : []), ...(wildcardListener ? wildcardListener.values() : [])];\n        for (const handler of allListeners) {\n          handler(emittedEvent);\n        }\n      },\n      actionExecutor: action => {\n        const exec = () => {\n          this._actorScope.system._sendInspectionEvent({\n            type: '@xstate.action',\n            actorRef: this,\n            action: {\n              type: action.type,\n              params: action.params\n            }\n          });\n          if (!action.exec) {\n            return;\n          }\n          const saveExecutingCustomAction = executingCustomAction;\n          try {\n            executingCustomAction = true;\n            action.exec(action.info, action.params);\n          } finally {\n            executingCustomAction = saveExecutingCustomAction;\n          }\n        };\n        if (this._processingStatus === ProcessingStatus.Running) {\n          exec();\n        } else {\n          this._deferred.push(exec);\n        }\n      }\n    };\n\n    // Ensure that the send method is bound to this Actor instance\n    // if destructured\n    this.send = this.send.bind(this);\n    this.system._sendInspectionEvent({\n      type: '@xstate.actor',\n      actorRef: this\n    });\n    if (systemId) {\n      this._systemId = systemId;\n      this.system._set(systemId, this);\n    }\n    this._initState(options?.snapshot ?? options?.state);\n    if (systemId && this._snapshot.status !== 'active') {\n      this.system._unregister(this);\n    }\n  }\n  _initState(persistedState) {\n    try {\n      this._snapshot = persistedState ? this.logic.restoreSnapshot ? this.logic.restoreSnapshot(persistedState, this._actorScope) : persistedState : this.logic.getInitialSnapshot(this._actorScope, this.options?.input);\n    } catch (err) {\n      // if we get here then it means that we assign a value to this._snapshot that is not of the correct type\n      // we can't get the true `TSnapshot & { status: 'error'; }`, it's impossible\n      // so right now this is a lie of sorts\n      this._snapshot = {\n        status: 'error',\n        output: undefined,\n        error: err\n      };\n    }\n  }\n  update(snapshot, event) {\n    // Update state\n    this._snapshot = snapshot;\n\n    // Execute deferred effects\n    let deferredFn;\n    while (deferredFn = this._deferred.shift()) {\n      try {\n        deferredFn();\n      } catch (err) {\n        // this error can only be caught when executing *initial* actions\n        // it's the only time when we call actions provided by the user through those deferreds\n        // when the actor is already running we always execute them synchronously while transitioning\n        // no \"builtin deferred\" should actually throw an error since they are either safe\n        // or the control flow is passed through the mailbox and errors should be caught by the `_process` used by the mailbox\n        this._deferred.length = 0;\n        this._snapshot = {\n          ...snapshot,\n          status: 'error',\n          error: err\n        };\n      }\n    }\n    switch (this._snapshot.status) {\n      case 'active':\n        for (const observer of this.observers) {\n          try {\n            observer.next?.(snapshot);\n          } catch (err) {\n            reportUnhandledError(err);\n          }\n        }\n        break;\n      case 'done':\n        // next observers are meant to be notified about done snapshots\n        // this can be seen as something that is different from how observable work\n        // but with observables `complete` callback is called without any arguments\n        // it's more ergonomic for XState to treat a done snapshot as a \"next\" value\n        // and the completion event as something that is separate,\n        // something that merely follows emitting that done snapshot\n        for (const observer of this.observers) {\n          try {\n            observer.next?.(snapshot);\n          } catch (err) {\n            reportUnhandledError(err);\n          }\n        }\n        this._stopProcedure();\n        this._complete();\n        this._doneEvent = createDoneActorEvent(this.id, this._snapshot.output);\n        if (this._parent) {\n          this.system._relay(this, this._parent, this._doneEvent);\n        }\n        break;\n      case 'error':\n        this._error(this._snapshot.error);\n        break;\n    }\n    this.system._sendInspectionEvent({\n      type: '@xstate.snapshot',\n      actorRef: this,\n      event,\n      snapshot\n    });\n  }\n\n  /**\n   * Subscribe an observer to an actor’s snapshot values.\n   *\n   * @remarks\n   * The observer will receive the actor’s snapshot value when it is emitted.\n   * The observer can be:\n   *\n   * - A plain function that receives the latest snapshot, or\n   * - An observer object whose `.next(snapshot)` method receives the latest\n   *   snapshot\n   *\n   * @example\n   *\n   * ```ts\n   * // Observer as a plain function\n   * const subscription = actor.subscribe((snapshot) => {\n   *   console.log(snapshot);\n   * });\n   * ```\n   *\n   * @example\n   *\n   * ```ts\n   * // Observer as an object\n   * const subscription = actor.subscribe({\n   *   next(snapshot) {\n   *     console.log(snapshot);\n   *   },\n   *   error(err) {\n   *     // ...\n   *   },\n   *   complete() {\n   *     // ...\n   *   }\n   * });\n   * ```\n   *\n   * The return value of `actor.subscribe(observer)` is a subscription object\n   * that has an `.unsubscribe()` method. You can call\n   * `subscription.unsubscribe()` to unsubscribe the observer:\n   *\n   * @example\n   *\n   * ```ts\n   * const subscription = actor.subscribe((snapshot) => {\n   *   // ...\n   * });\n   *\n   * // Unsubscribe the observer\n   * subscription.unsubscribe();\n   * ```\n   *\n   * When the actor is stopped, all of its observers will automatically be\n   * unsubscribed.\n   *\n   * @param observer - Either a plain function that receives the latest\n   *   snapshot, or an observer object whose `.next(snapshot)` method receives\n   *   the latest snapshot\n   */\n\n  subscribe(nextListenerOrObserver, errorListener, completeListener) {\n    const observer = toObserver(nextListenerOrObserver, errorListener, completeListener);\n    if (this._processingStatus !== ProcessingStatus.Stopped) {\n      this.observers.add(observer);\n    } else {\n      switch (this._snapshot.status) {\n        case 'done':\n          try {\n            observer.complete?.();\n          } catch (err) {\n            reportUnhandledError(err);\n          }\n          break;\n        case 'error':\n          {\n            const err = this._snapshot.error;\n            if (!observer.error) {\n              reportUnhandledError(err);\n            } else {\n              try {\n                observer.error(err);\n              } catch (err) {\n                reportUnhandledError(err);\n              }\n            }\n            break;\n          }\n      }\n    }\n    return {\n      unsubscribe: () => {\n        this.observers.delete(observer);\n      }\n    };\n  }\n  on(type, handler) {\n    let listeners = this.eventListeners.get(type);\n    if (!listeners) {\n      listeners = new Set();\n      this.eventListeners.set(type, listeners);\n    }\n    const wrappedHandler = handler.bind(undefined);\n    listeners.add(wrappedHandler);\n    return {\n      unsubscribe: () => {\n        listeners.delete(wrappedHandler);\n      }\n    };\n  }\n\n  /** Starts the Actor from the initial state */\n  start() {\n    if (this._processingStatus === ProcessingStatus.Running) {\n      // Do not restart the service if it is already started\n      return this;\n    }\n    if (this._syncSnapshot) {\n      this.subscribe({\n        next: snapshot => {\n          if (snapshot.status === 'active') {\n            this.system._relay(this, this._parent, {\n              type: `xstate.snapshot.${this.id}`,\n              snapshot\n            });\n          }\n        },\n        error: () => {}\n      });\n    }\n    this.system._register(this.sessionId, this);\n    if (this._systemId) {\n      this.system._set(this._systemId, this);\n    }\n    this._processingStatus = ProcessingStatus.Running;\n\n    // TODO: this isn't correct when rehydrating\n    const initEvent = createInitEvent(this.options.input);\n    this.system._sendInspectionEvent({\n      type: '@xstate.event',\n      sourceRef: this._parent,\n      actorRef: this,\n      event: initEvent\n    });\n    const status = this._snapshot.status;\n    switch (status) {\n      case 'done':\n        // a state machine can be \"done\" upon initialization (it could reach a final state using initial microsteps)\n        // we still need to complete observers, flush deferreds etc\n        this.update(this._snapshot, initEvent);\n        // TODO: rethink cleanup of observers, mailbox, etc\n        return this;\n      case 'error':\n        this._error(this._snapshot.error);\n        return this;\n    }\n    if (!this._parent) {\n      this.system.start();\n    }\n    if (this.logic.start) {\n      try {\n        this.logic.start(this._snapshot, this._actorScope);\n      } catch (err) {\n        this._snapshot = {\n          ...this._snapshot,\n          status: 'error',\n          error: err\n        };\n        this._error(err);\n        return this;\n      }\n    }\n\n    // TODO: this notifies all subscribers but usually this is redundant\n    // there is no real change happening here\n    // we need to rethink if this needs to be refactored\n    this.update(this._snapshot, initEvent);\n    if (this.options.devTools) {\n      this.attachDevTools();\n    }\n    this.mailbox.start();\n    return this;\n  }\n  _process(event) {\n    let nextState;\n    let caughtError;\n    try {\n      nextState = this.logic.transition(this._snapshot, event, this._actorScope);\n    } catch (err) {\n      // we wrap it in a box so we can rethrow it later even if falsy value gets caught here\n      caughtError = {\n        err\n      };\n    }\n    if (caughtError) {\n      const {\n        err\n      } = caughtError;\n      this._snapshot = {\n        ...this._snapshot,\n        status: 'error',\n        error: err\n      };\n      this._error(err);\n      return;\n    }\n    this.update(nextState, event);\n    if (event.type === XSTATE_STOP) {\n      this._stopProcedure();\n      this._complete();\n    }\n  }\n  _stop() {\n    if (this._processingStatus === ProcessingStatus.Stopped) {\n      return this;\n    }\n    this.mailbox.clear();\n    if (this._processingStatus === ProcessingStatus.NotStarted) {\n      this._processingStatus = ProcessingStatus.Stopped;\n      return this;\n    }\n    this.mailbox.enqueue({\n      type: XSTATE_STOP\n    });\n    return this;\n  }\n\n  /** Stops the Actor and unsubscribe all listeners. */\n  stop() {\n    if (this._parent) {\n      throw new Error('A non-root actor cannot be stopped directly.');\n    }\n    return this._stop();\n  }\n  _complete() {\n    for (const observer of this.observers) {\n      try {\n        observer.complete?.();\n      } catch (err) {\n        reportUnhandledError(err);\n      }\n    }\n    this.observers.clear();\n  }\n  _reportError(err) {\n    if (!this.observers.size) {\n      if (!this._parent) {\n        reportUnhandledError(err);\n      }\n      return;\n    }\n    let reportError = false;\n    for (const observer of this.observers) {\n      const errorListener = observer.error;\n      reportError ||= !errorListener;\n      try {\n        errorListener?.(err);\n      } catch (err2) {\n        reportUnhandledError(err2);\n      }\n    }\n    this.observers.clear();\n    if (reportError) {\n      reportUnhandledError(err);\n    }\n  }\n  _error(err) {\n    this._stopProcedure();\n    this._reportError(err);\n    if (this._parent) {\n      this.system._relay(this, this._parent, createErrorActorEvent(this.id, err));\n    }\n  }\n  // TODO: atm children don't belong entirely to the actor so\n  // in a way - it's not even super aware of them\n  // so we can't stop them from here but we really should!\n  // right now, they are being stopped within the machine's transition\n  // but that could throw and leave us with \"orphaned\" active actors\n  _stopProcedure() {\n    if (this._processingStatus !== ProcessingStatus.Running) {\n      // Actor already stopped; do nothing\n      return this;\n    }\n\n    // Cancel all delayed events\n    this.system.scheduler.cancelAll(this);\n\n    // TODO: mailbox.reset\n    this.mailbox.clear();\n    // TODO: after `stop` we must prepare ourselves for receiving events again\n    // events sent *after* stop signal must be queued\n    // it seems like this should be the common behavior for all of our consumers\n    // so perhaps this should be unified somehow for all of them\n    this.mailbox = new Mailbox(this._process.bind(this));\n    this._processingStatus = ProcessingStatus.Stopped;\n    this.system._unregister(this);\n    return this;\n  }\n\n  /** @internal */\n  _send(event) {\n    if (this._processingStatus === ProcessingStatus.Stopped) {\n      return;\n    }\n    this.mailbox.enqueue(event);\n  }\n\n  /**\n   * Sends an event to the running Actor to trigger a transition.\n   *\n   * @param event The event to send\n   */\n  send(event) {\n    this.system._relay(undefined, this, event);\n  }\n  attachDevTools() {\n    const {\n      devTools\n    } = this.options;\n    if (devTools) {\n      const resolvedDevToolsAdapter = typeof devTools === 'function' ? devTools : devToolsAdapter;\n      resolvedDevToolsAdapter(this);\n    }\n  }\n  toJSON() {\n    return {\n      xstate$$type: $$ACTOR_TYPE,\n      id: this.id\n    };\n  }\n\n  /**\n   * Obtain the internal state of the actor, which can be persisted.\n   *\n   * @remarks\n   * The internal state can be persisted from any actor, not only machines.\n   *\n   * Note that the persisted state is not the same as the snapshot from\n   * {@link Actor.getSnapshot}. Persisted state represents the internal state of\n   * the actor, while snapshots represent the actor's last emitted value.\n   *\n   * Can be restored with {@link ActorOptions.state}\n   * @see https://stately.ai/docs/persistence\n   */\n\n  getPersistedSnapshot(options) {\n    return this.logic.getPersistedSnapshot(this._snapshot, options);\n  }\n  [symbolObservable]() {\n    return this;\n  }\n\n  /**\n   * Read an actor’s snapshot synchronously.\n   *\n   * @remarks\n   * The snapshot represent an actor's last emitted value.\n   *\n   * When an actor receives an event, its internal state may change. An actor\n   * may emit a snapshot when a state transition occurs.\n   *\n   * Note that some actors, such as callback actors generated with\n   * `fromCallback`, will not emit snapshots.\n   * @see {@link Actor.subscribe} to subscribe to an actor’s snapshot values.\n   * @see {@link Actor.getPersistedSnapshot} to persist the internal state of an actor (which is more than just a snapshot).\n   */\n  getSnapshot() {\n    return this._snapshot;\n  }\n}\n/**\n * Creates a new actor instance for the given actor logic with the provided\n * options, if any.\n *\n * @remarks\n * When you create an actor from actor logic via `createActor(logic)`, you\n * implicitly create an actor system where the created actor is the root actor.\n * Any actors spawned from this root actor and its descendants are part of that\n * actor system.\n * @example\n *\n * ```ts\n * import { createActor } from 'xstate';\n * import { someActorLogic } from './someActorLogic.ts';\n *\n * // Creating the actor, which implicitly creates an actor system with itself as the root actor\n * const actor = createActor(someActorLogic);\n *\n * actor.subscribe((snapshot) => {\n *   console.log(snapshot);\n * });\n *\n * // Actors must be started by calling `actor.start()`, which will also start the actor system.\n * actor.start();\n *\n * // Actors can receive events\n * actor.send({ type: 'someEvent' });\n *\n * // You can stop root actors by calling `actor.stop()`, which will also stop the actor system and all actors in that system.\n * actor.stop();\n * ```\n *\n * @param logic - The actor logic to create an actor from. For a state machine\n *   actor logic creator, see {@link createMachine}. Other actor logic creators\n *   include {@link fromCallback}, {@link fromEventObservable},\n *   {@link fromObservable}, {@link fromPromise}, and {@link fromTransition}.\n * @param options - Actor options\n */\nfunction createActor(logic, ...[options]) {\n  return new Actor(logic, options);\n}\n\n/**\n * Creates a new Interpreter instance for the given machine with the provided\n * options, if any.\n *\n * @deprecated Use `createActor` instead\n * @alias\n */\nconst interpret = createActor;\n\n/**\n * @deprecated Use `Actor` instead.\n * @alias\n */\n\nfunction resolveCancel(_, snapshot, actionArgs, actionParams, {\n  sendId\n}) {\n  const resolvedSendId = typeof sendId === 'function' ? sendId(actionArgs, actionParams) : sendId;\n  return [snapshot, {\n    sendId: resolvedSendId\n  }, undefined];\n}\nfunction executeCancel(actorScope, params) {\n  actorScope.defer(() => {\n    actorScope.system.scheduler.cancel(actorScope.self, params.sendId);\n  });\n}\n/**\n * Cancels a delayed `sendTo(...)` action that is waiting to be executed. The\n * canceled `sendTo(...)` action will not send its event or execute, unless the\n * `delay` has already elapsed before `cancel(...)` is called.\n *\n * @example\n *\n * ```ts\n * import { createMachine, sendTo, cancel } from 'xstate';\n *\n * const machine = createMachine({\n *   // ...\n *   on: {\n *     sendEvent: {\n *       actions: sendTo(\n *         'some-actor',\n *         { type: 'someEvent' },\n *         {\n *           id: 'some-id',\n *           delay: 1000\n *         }\n *       )\n *     },\n *     cancelEvent: {\n *       actions: cancel('some-id')\n *     }\n *   }\n * });\n * ```\n *\n * @param sendId The `id` of the `sendTo(...)` action to cancel.\n */\nfunction cancel(sendId) {\n  function cancel(_args, _params) {\n  }\n  cancel.type = 'xstate.cancel';\n  cancel.sendId = sendId;\n  cancel.resolve = resolveCancel;\n  cancel.execute = executeCancel;\n  return cancel;\n}\n\nfunction resolveSpawn(actorScope, snapshot, actionArgs, _actionParams, {\n  id,\n  systemId,\n  src,\n  input,\n  syncSnapshot\n}) {\n  const logic = typeof src === 'string' ? resolveReferencedActor(snapshot.machine, src) : src;\n  const resolvedId = typeof id === 'function' ? id(actionArgs) : id;\n  let actorRef;\n  let resolvedInput = undefined;\n  if (logic) {\n    resolvedInput = typeof input === 'function' ? input({\n      context: snapshot.context,\n      event: actionArgs.event,\n      self: actorScope.self\n    }) : input;\n    actorRef = createActor(logic, {\n      id: resolvedId,\n      src,\n      parent: actorScope.self,\n      syncSnapshot,\n      systemId,\n      input: resolvedInput\n    });\n  }\n  return [cloneMachineSnapshot(snapshot, {\n    children: {\n      ...snapshot.children,\n      [resolvedId]: actorRef\n    }\n  }), {\n    id,\n    systemId,\n    actorRef,\n    src,\n    input: resolvedInput\n  }, undefined];\n}\nfunction executeSpawn(actorScope, {\n  actorRef\n}) {\n  if (!actorRef) {\n    return;\n  }\n  actorScope.defer(() => {\n    if (actorRef._processingStatus === ProcessingStatus.Stopped) {\n      return;\n    }\n    actorRef.start();\n  });\n}\nfunction spawnChild(...[src, {\n  id,\n  systemId,\n  input,\n  syncSnapshot = false\n} = {}]) {\n  function spawnChild(_args, _params) {\n  }\n  spawnChild.type = 'xstate.spawnChild';\n  spawnChild.id = id;\n  spawnChild.systemId = systemId;\n  spawnChild.src = src;\n  spawnChild.input = input;\n  spawnChild.syncSnapshot = syncSnapshot;\n  spawnChild.resolve = resolveSpawn;\n  spawnChild.execute = executeSpawn;\n  return spawnChild;\n}\n\nfunction resolveStop(_, snapshot, args, actionParams, {\n  actorRef\n}) {\n  const actorRefOrString = typeof actorRef === 'function' ? actorRef(args, actionParams) : actorRef;\n  const resolvedActorRef = typeof actorRefOrString === 'string' ? snapshot.children[actorRefOrString] : actorRefOrString;\n  let children = snapshot.children;\n  if (resolvedActorRef) {\n    children = {\n      ...children\n    };\n    delete children[resolvedActorRef.id];\n  }\n  return [cloneMachineSnapshot(snapshot, {\n    children\n  }), resolvedActorRef, undefined];\n}\nfunction executeStop(actorScope, actorRef) {\n  if (!actorRef) {\n    return;\n  }\n\n  // we need to eagerly unregister it here so a new actor with the same systemId can be registered immediately\n  // since we defer actual stopping of the actor but we don't defer actor creations (and we can't do that)\n  // this could throw on `systemId` collision, for example, when dealing with reentering transitions\n  actorScope.system._unregister(actorRef);\n\n  // this allows us to prevent an actor from being started if it gets stopped within the same macrostep\n  // this can happen, for example, when the invoking state is being exited immediately by an always transition\n  if (actorRef._processingStatus !== ProcessingStatus.Running) {\n    actorScope.stopChild(actorRef);\n    return;\n  }\n  // stopping a child enqueues a stop event in the child actor's mailbox\n  // we need for all of the already enqueued events to be processed before we stop the child\n  // the parent itself might want to send some events to a child (for example from exit actions on the invoking state)\n  // and we don't want to ignore those events\n  actorScope.defer(() => {\n    actorScope.stopChild(actorRef);\n  });\n}\n/**\n * Stops a child actor.\n *\n * @param actorRef The actor to stop.\n */\nfunction stopChild(actorRef) {\n  function stop(_args, _params) {\n  }\n  stop.type = 'xstate.stopChild';\n  stop.actorRef = actorRef;\n  stop.resolve = resolveStop;\n  stop.execute = executeStop;\n  return stop;\n}\n\n/**\n * Stops a child actor.\n *\n * @deprecated Use `stopChild(...)` instead\n * @alias\n */\nconst stop = stopChild;\n\nfunction checkStateIn(snapshot, _, {\n  stateValue\n}) {\n  if (typeof stateValue === 'string' && isStateId(stateValue)) {\n    const target = snapshot.machine.getStateNodeById(stateValue);\n    return snapshot._nodes.some(sn => sn === target);\n  }\n  return snapshot.matches(stateValue);\n}\nfunction stateIn(stateValue) {\n  function stateIn() {\n    return false;\n  }\n  stateIn.check = checkStateIn;\n  stateIn.stateValue = stateValue;\n  return stateIn;\n}\nfunction checkNot(snapshot, {\n  context,\n  event\n}, {\n  guards\n}) {\n  return !evaluateGuard(guards[0], context, event, snapshot);\n}\n\n/**\n * Higher-order guard that evaluates to `true` if the `guard` passed to it\n * evaluates to `false`.\n *\n * @category Guards\n * @example\n *\n * ```ts\n * import { setup, not } from 'xstate';\n *\n * const machine = setup({\n *   guards: {\n *     someNamedGuard: () => false\n *   }\n * }).createMachine({\n *   on: {\n *     someEvent: {\n *       guard: not('someNamedGuard'),\n *       actions: () => {\n *         // will be executed if guard in `not(...)`\n *         // evaluates to `false`\n *       }\n *     }\n *   }\n * });\n * ```\n *\n * @returns A guard\n */\nfunction not(guard) {\n  function not(_args, _params) {\n    return false;\n  }\n  not.check = checkNot;\n  not.guards = [guard];\n  return not;\n}\nfunction checkAnd(snapshot, {\n  context,\n  event\n}, {\n  guards\n}) {\n  return guards.every(guard => evaluateGuard(guard, context, event, snapshot));\n}\n\n/**\n * Higher-order guard that evaluates to `true` if all `guards` passed to it\n * evaluate to `true`.\n *\n * @category Guards\n * @example\n *\n * ```ts\n * import { setup, and } from 'xstate';\n *\n * const machine = setup({\n *   guards: {\n *     someNamedGuard: () => true\n *   }\n * }).createMachine({\n *   on: {\n *     someEvent: {\n *       guard: and([({ context }) => context.value > 0, 'someNamedGuard']),\n *       actions: () => {\n *         // will be executed if all guards in `and(...)`\n *         // evaluate to true\n *       }\n *     }\n *   }\n * });\n * ```\n *\n * @returns A guard action object\n */\nfunction and(guards) {\n  function and(_args, _params) {\n    return false;\n  }\n  and.check = checkAnd;\n  and.guards = guards;\n  return and;\n}\nfunction checkOr(snapshot, {\n  context,\n  event\n}, {\n  guards\n}) {\n  return guards.some(guard => evaluateGuard(guard, context, event, snapshot));\n}\n\n/**\n * Higher-order guard that evaluates to `true` if any of the `guards` passed to\n * it evaluate to `true`.\n *\n * @category Guards\n * @example\n *\n * ```ts\n * import { setup, or } from 'xstate';\n *\n * const machine = setup({\n *   guards: {\n *     someNamedGuard: () => true\n *   }\n * }).createMachine({\n *   on: {\n *     someEvent: {\n *       guard: or([({ context }) => context.value > 0, 'someNamedGuard']),\n *       actions: () => {\n *         // will be executed if any of the guards in `or(...)`\n *         // evaluate to true\n *       }\n *     }\n *   }\n * });\n * ```\n *\n * @returns A guard action object\n */\nfunction or(guards) {\n  function or(_args, _params) {\n    return false;\n  }\n  or.check = checkOr;\n  or.guards = guards;\n  return or;\n}\n\n// TODO: throw on cycles (depth check should be enough)\nfunction evaluateGuard(guard, context, event, snapshot) {\n  const {\n    machine\n  } = snapshot;\n  const isInline = typeof guard === 'function';\n  const resolved = isInline ? guard : machine.implementations.guards[typeof guard === 'string' ? guard : guard.type];\n  if (!isInline && !resolved) {\n    throw new Error(`Guard '${typeof guard === 'string' ? guard : guard.type}' is not implemented.'.`);\n  }\n  if (typeof resolved !== 'function') {\n    return evaluateGuard(resolved, context, event, snapshot);\n  }\n  const guardArgs = {\n    context,\n    event\n  };\n  const guardParams = isInline || typeof guard === 'string' ? undefined : 'params' in guard ? typeof guard.params === 'function' ? guard.params({\n    context,\n    event\n  }) : guard.params : undefined;\n  if (!('check' in resolved)) {\n    // the existing type of `.guards` assumes non-nullable `TExpressionGuard`\n    // inline guards expect `TExpressionGuard` to be set to `undefined`\n    // it's fine to cast this here, our logic makes sure that we call those 2 \"variants\" correctly\n    return resolved(guardArgs, guardParams);\n  }\n  const builtinGuard = resolved;\n  return builtinGuard.check(snapshot, guardArgs, resolved // this holds all params\n  );\n}\n\nconst isAtomicStateNode = stateNode => stateNode.type === 'atomic' || stateNode.type === 'final';\nfunction getChildren(stateNode) {\n  return Object.values(stateNode.states).filter(sn => sn.type !== 'history');\n}\nfunction getProperAncestors(stateNode, toStateNode) {\n  const ancestors = [];\n  if (toStateNode === stateNode) {\n    return ancestors;\n  }\n\n  // add all ancestors\n  let m = stateNode.parent;\n  while (m && m !== toStateNode) {\n    ancestors.push(m);\n    m = m.parent;\n  }\n  return ancestors;\n}\nfunction getAllStateNodes(stateNodes) {\n  const nodeSet = new Set(stateNodes);\n  const adjList = getAdjList(nodeSet);\n\n  // add descendants\n  for (const s of nodeSet) {\n    // if previously active, add existing child nodes\n    if (s.type === 'compound' && (!adjList.get(s) || !adjList.get(s).length)) {\n      getInitialStateNodesWithTheirAncestors(s).forEach(sn => nodeSet.add(sn));\n    } else {\n      if (s.type === 'parallel') {\n        for (const child of getChildren(s)) {\n          if (child.type === 'history') {\n            continue;\n          }\n          if (!nodeSet.has(child)) {\n            const initialStates = getInitialStateNodesWithTheirAncestors(child);\n            for (const initialStateNode of initialStates) {\n              nodeSet.add(initialStateNode);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // add all ancestors\n  for (const s of nodeSet) {\n    let m = s.parent;\n    while (m) {\n      nodeSet.add(m);\n      m = m.parent;\n    }\n  }\n  return nodeSet;\n}\nfunction getValueFromAdj(baseNode, adjList) {\n  const childStateNodes = adjList.get(baseNode);\n  if (!childStateNodes) {\n    return {}; // todo: fix?\n  }\n  if (baseNode.type === 'compound') {\n    const childStateNode = childStateNodes[0];\n    if (childStateNode) {\n      if (isAtomicStateNode(childStateNode)) {\n        return childStateNode.key;\n      }\n    } else {\n      return {};\n    }\n  }\n  const stateValue = {};\n  for (const childStateNode of childStateNodes) {\n    stateValue[childStateNode.key] = getValueFromAdj(childStateNode, adjList);\n  }\n  return stateValue;\n}\nfunction getAdjList(stateNodes) {\n  const adjList = new Map();\n  for (const s of stateNodes) {\n    if (!adjList.has(s)) {\n      adjList.set(s, []);\n    }\n    if (s.parent) {\n      if (!adjList.has(s.parent)) {\n        adjList.set(s.parent, []);\n      }\n      adjList.get(s.parent).push(s);\n    }\n  }\n  return adjList;\n}\nfunction getStateValue(rootNode, stateNodes) {\n  const config = getAllStateNodes(stateNodes);\n  return getValueFromAdj(rootNode, getAdjList(config));\n}\nfunction isInFinalState(stateNodeSet, stateNode) {\n  if (stateNode.type === 'compound') {\n    return getChildren(stateNode).some(s => s.type === 'final' && stateNodeSet.has(s));\n  }\n  if (stateNode.type === 'parallel') {\n    return getChildren(stateNode).every(sn => isInFinalState(stateNodeSet, sn));\n  }\n  return stateNode.type === 'final';\n}\nconst isStateId = str => str[0] === STATE_IDENTIFIER;\nfunction getCandidates(stateNode, receivedEventType) {\n  const candidates = stateNode.transitions.get(receivedEventType) || [...stateNode.transitions.keys()].filter(eventDescriptor => {\n    // check if transition is a wildcard transition,\n    // which matches any non-transient events\n    if (eventDescriptor === WILDCARD) {\n      return true;\n    }\n    if (!eventDescriptor.endsWith('.*')) {\n      return false;\n    }\n    const partialEventTokens = eventDescriptor.split('.');\n    const eventTokens = receivedEventType.split('.');\n    for (let tokenIndex = 0; tokenIndex < partialEventTokens.length; tokenIndex++) {\n      const partialEventToken = partialEventTokens[tokenIndex];\n      const eventToken = eventTokens[tokenIndex];\n      if (partialEventToken === '*') {\n        const isLastToken = tokenIndex === partialEventTokens.length - 1;\n        return isLastToken;\n      }\n      if (partialEventToken !== eventToken) {\n        return false;\n      }\n    }\n    return true;\n  }).sort((a, b) => b.length - a.length).flatMap(key => stateNode.transitions.get(key));\n  return candidates;\n}\n\n/** All delayed transitions from the config. */\nfunction getDelayedTransitions(stateNode) {\n  const afterConfig = stateNode.config.after;\n  if (!afterConfig) {\n    return [];\n  }\n  const mutateEntryExit = delay => {\n    const afterEvent = createAfterEvent(delay, stateNode.id);\n    const eventType = afterEvent.type;\n    stateNode.entry.push(raise(afterEvent, {\n      id: eventType,\n      delay\n    }));\n    stateNode.exit.push(cancel(eventType));\n    return eventType;\n  };\n  const delayedTransitions = Object.keys(afterConfig).flatMap(delay => {\n    const configTransition = afterConfig[delay];\n    const resolvedTransition = typeof configTransition === 'string' ? {\n      target: configTransition\n    } : configTransition;\n    const resolvedDelay = Number.isNaN(+delay) ? delay : +delay;\n    const eventType = mutateEntryExit(resolvedDelay);\n    return toArray(resolvedTransition).map(transition => ({\n      ...transition,\n      event: eventType,\n      delay: resolvedDelay\n    }));\n  });\n  return delayedTransitions.map(delayedTransition => {\n    const {\n      delay\n    } = delayedTransition;\n    return {\n      ...formatTransition(stateNode, delayedTransition.event, delayedTransition),\n      delay\n    };\n  });\n}\nfunction formatTransition(stateNode, descriptor, transitionConfig) {\n  const normalizedTarget = normalizeTarget(transitionConfig.target);\n  const reenter = transitionConfig.reenter ?? false;\n  const target = resolveTarget(stateNode, normalizedTarget);\n  const transition = {\n    ...transitionConfig,\n    actions: toArray(transitionConfig.actions),\n    guard: transitionConfig.guard,\n    target,\n    source: stateNode,\n    reenter,\n    eventType: descriptor,\n    toJSON: () => ({\n      ...transition,\n      source: `#${stateNode.id}`,\n      target: target ? target.map(t => `#${t.id}`) : undefined\n    })\n  };\n  return transition;\n}\nfunction formatTransitions(stateNode) {\n  const transitions = new Map();\n  if (stateNode.config.on) {\n    for (const descriptor of Object.keys(stateNode.config.on)) {\n      if (descriptor === NULL_EVENT) {\n        throw new Error('Null events (\"\") cannot be specified as a transition key. Use `always: { ... }` instead.');\n      }\n      const transitionsConfig = stateNode.config.on[descriptor];\n      transitions.set(descriptor, toTransitionConfigArray(transitionsConfig).map(t => formatTransition(stateNode, descriptor, t)));\n    }\n  }\n  if (stateNode.config.onDone) {\n    const descriptor = `xstate.done.state.${stateNode.id}`;\n    transitions.set(descriptor, toTransitionConfigArray(stateNode.config.onDone).map(t => formatTransition(stateNode, descriptor, t)));\n  }\n  for (const invokeDef of stateNode.invoke) {\n    if (invokeDef.onDone) {\n      const descriptor = `xstate.done.actor.${invokeDef.id}`;\n      transitions.set(descriptor, toTransitionConfigArray(invokeDef.onDone).map(t => formatTransition(stateNode, descriptor, t)));\n    }\n    if (invokeDef.onError) {\n      const descriptor = `xstate.error.actor.${invokeDef.id}`;\n      transitions.set(descriptor, toTransitionConfigArray(invokeDef.onError).map(t => formatTransition(stateNode, descriptor, t)));\n    }\n    if (invokeDef.onSnapshot) {\n      const descriptor = `xstate.snapshot.${invokeDef.id}`;\n      transitions.set(descriptor, toTransitionConfigArray(invokeDef.onSnapshot).map(t => formatTransition(stateNode, descriptor, t)));\n    }\n  }\n  for (const delayedTransition of stateNode.after) {\n    let existing = transitions.get(delayedTransition.eventType);\n    if (!existing) {\n      existing = [];\n      transitions.set(delayedTransition.eventType, existing);\n    }\n    existing.push(delayedTransition);\n  }\n  return transitions;\n}\nfunction formatInitialTransition(stateNode, _target) {\n  const resolvedTarget = typeof _target === 'string' ? stateNode.states[_target] : _target ? stateNode.states[_target.target] : undefined;\n  if (!resolvedTarget && _target) {\n    throw new Error(\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-base-to-string\n    `Initial state node \"${_target}\" not found on parent state node #${stateNode.id}`);\n  }\n  const transition = {\n    source: stateNode,\n    actions: !_target || typeof _target === 'string' ? [] : toArray(_target.actions),\n    eventType: null,\n    reenter: false,\n    target: resolvedTarget ? [resolvedTarget] : [],\n    toJSON: () => ({\n      ...transition,\n      source: `#${stateNode.id}`,\n      target: resolvedTarget ? [`#${resolvedTarget.id}`] : []\n    })\n  };\n  return transition;\n}\nfunction resolveTarget(stateNode, targets) {\n  if (targets === undefined) {\n    // an undefined target signals that the state node should not transition from that state when receiving that event\n    return undefined;\n  }\n  return targets.map(target => {\n    if (typeof target !== 'string') {\n      return target;\n    }\n    if (isStateId(target)) {\n      return stateNode.machine.getStateNodeById(target);\n    }\n    const isInternalTarget = target[0] === STATE_DELIMITER;\n    // If internal target is defined on machine,\n    // do not include machine key on target\n    if (isInternalTarget && !stateNode.parent) {\n      return getStateNodeByPath(stateNode, target.slice(1));\n    }\n    const resolvedTarget = isInternalTarget ? stateNode.key + target : target;\n    if (stateNode.parent) {\n      try {\n        const targetStateNode = getStateNodeByPath(stateNode.parent, resolvedTarget);\n        return targetStateNode;\n      } catch (err) {\n        throw new Error(`Invalid transition definition for state node '${stateNode.id}':\\n${err.message}`);\n      }\n    } else {\n      throw new Error(`Invalid target: \"${target}\" is not a valid target from the root node. Did you mean \".${target}\"?`);\n    }\n  });\n}\nfunction resolveHistoryDefaultTransition(stateNode) {\n  const normalizedTarget = normalizeTarget(stateNode.config.target);\n  if (!normalizedTarget) {\n    return stateNode.parent.initial;\n  }\n  return {\n    target: normalizedTarget.map(t => typeof t === 'string' ? getStateNodeByPath(stateNode.parent, t) : t)\n  };\n}\nfunction isHistoryNode(stateNode) {\n  return stateNode.type === 'history';\n}\nfunction getInitialStateNodesWithTheirAncestors(stateNode) {\n  const states = getInitialStateNodes(stateNode);\n  for (const initialState of states) {\n    for (const ancestor of getProperAncestors(initialState, stateNode)) {\n      states.add(ancestor);\n    }\n  }\n  return states;\n}\nfunction getInitialStateNodes(stateNode) {\n  const set = new Set();\n  function iter(descStateNode) {\n    if (set.has(descStateNode)) {\n      return;\n    }\n    set.add(descStateNode);\n    if (descStateNode.type === 'compound') {\n      iter(descStateNode.initial.target[0]);\n    } else if (descStateNode.type === 'parallel') {\n      for (const child of getChildren(descStateNode)) {\n        iter(child);\n      }\n    }\n  }\n  iter(stateNode);\n  return set;\n}\n/** Returns the child state node from its relative `stateKey`, or throws. */\nfunction getStateNode(stateNode, stateKey) {\n  if (isStateId(stateKey)) {\n    return stateNode.machine.getStateNodeById(stateKey);\n  }\n  if (!stateNode.states) {\n    throw new Error(`Unable to retrieve child state '${stateKey}' from '${stateNode.id}'; no child states exist.`);\n  }\n  const result = stateNode.states[stateKey];\n  if (!result) {\n    throw new Error(`Child state '${stateKey}' does not exist on '${stateNode.id}'`);\n  }\n  return result;\n}\n\n/**\n * Returns the relative state node from the given `statePath`, or throws.\n *\n * @param statePath The string or string array relative path to the state node.\n */\nfunction getStateNodeByPath(stateNode, statePath) {\n  if (typeof statePath === 'string' && isStateId(statePath)) {\n    try {\n      return stateNode.machine.getStateNodeById(statePath);\n    } catch {\n      // try individual paths\n      // throw e;\n    }\n  }\n  const arrayStatePath = toStatePath(statePath).slice();\n  let currentStateNode = stateNode;\n  while (arrayStatePath.length) {\n    const key = arrayStatePath.shift();\n    if (!key.length) {\n      break;\n    }\n    currentStateNode = getStateNode(currentStateNode, key);\n  }\n  return currentStateNode;\n}\n\n/**\n * Returns the state nodes represented by the current state value.\n *\n * @param stateValue The state value or State instance\n */\nfunction getStateNodes(stateNode, stateValue) {\n  if (typeof stateValue === 'string') {\n    const childStateNode = stateNode.states[stateValue];\n    if (!childStateNode) {\n      throw new Error(`State '${stateValue}' does not exist on '${stateNode.id}'`);\n    }\n    return [stateNode, childStateNode];\n  }\n  const childStateKeys = Object.keys(stateValue);\n  const childStateNodes = childStateKeys.map(subStateKey => getStateNode(stateNode, subStateKey)).filter(Boolean);\n  return [stateNode.machine.root, stateNode].concat(childStateNodes, childStateKeys.reduce((allSubStateNodes, subStateKey) => {\n    const subStateNode = getStateNode(stateNode, subStateKey);\n    if (!subStateNode) {\n      return allSubStateNodes;\n    }\n    const subStateNodes = getStateNodes(subStateNode, stateValue[subStateKey]);\n    return allSubStateNodes.concat(subStateNodes);\n  }, []));\n}\nfunction transitionAtomicNode(stateNode, stateValue, snapshot, event) {\n  const childStateNode = getStateNode(stateNode, stateValue);\n  const next = childStateNode.next(snapshot, event);\n  if (!next || !next.length) {\n    return stateNode.next(snapshot, event);\n  }\n  return next;\n}\nfunction transitionCompoundNode(stateNode, stateValue, snapshot, event) {\n  const subStateKeys = Object.keys(stateValue);\n  const childStateNode = getStateNode(stateNode, subStateKeys[0]);\n  const next = transitionNode(childStateNode, stateValue[subStateKeys[0]], snapshot, event);\n  if (!next || !next.length) {\n    return stateNode.next(snapshot, event);\n  }\n  return next;\n}\nfunction transitionParallelNode(stateNode, stateValue, snapshot, event) {\n  const allInnerTransitions = [];\n  for (const subStateKey of Object.keys(stateValue)) {\n    const subStateValue = stateValue[subStateKey];\n    if (!subStateValue) {\n      continue;\n    }\n    const subStateNode = getStateNode(stateNode, subStateKey);\n    const innerTransitions = transitionNode(subStateNode, subStateValue, snapshot, event);\n    if (innerTransitions) {\n      allInnerTransitions.push(...innerTransitions);\n    }\n  }\n  if (!allInnerTransitions.length) {\n    return stateNode.next(snapshot, event);\n  }\n  return allInnerTransitions;\n}\nfunction transitionNode(stateNode, stateValue, snapshot, event) {\n  // leaf node\n  if (typeof stateValue === 'string') {\n    return transitionAtomicNode(stateNode, stateValue, snapshot, event);\n  }\n\n  // compound node\n  if (Object.keys(stateValue).length === 1) {\n    return transitionCompoundNode(stateNode, stateValue, snapshot, event);\n  }\n\n  // parallel node\n  return transitionParallelNode(stateNode, stateValue, snapshot, event);\n}\nfunction getHistoryNodes(stateNode) {\n  return Object.keys(stateNode.states).map(key => stateNode.states[key]).filter(sn => sn.type === 'history');\n}\nfunction isDescendant(childStateNode, parentStateNode) {\n  let marker = childStateNode;\n  while (marker.parent && marker.parent !== parentStateNode) {\n    marker = marker.parent;\n  }\n  return marker.parent === parentStateNode;\n}\nfunction hasIntersection(s1, s2) {\n  const set1 = new Set(s1);\n  const set2 = new Set(s2);\n  for (const item of set1) {\n    if (set2.has(item)) {\n      return true;\n    }\n  }\n  for (const item of set2) {\n    if (set1.has(item)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction removeConflictingTransitions(enabledTransitions, stateNodeSet, historyValue) {\n  const filteredTransitions = new Set();\n  for (const t1 of enabledTransitions) {\n    let t1Preempted = false;\n    const transitionsToRemove = new Set();\n    for (const t2 of filteredTransitions) {\n      if (hasIntersection(computeExitSet([t1], stateNodeSet, historyValue), computeExitSet([t2], stateNodeSet, historyValue))) {\n        if (isDescendant(t1.source, t2.source)) {\n          transitionsToRemove.add(t2);\n        } else {\n          t1Preempted = true;\n          break;\n        }\n      }\n    }\n    if (!t1Preempted) {\n      for (const t3 of transitionsToRemove) {\n        filteredTransitions.delete(t3);\n      }\n      filteredTransitions.add(t1);\n    }\n  }\n  return Array.from(filteredTransitions);\n}\nfunction findLeastCommonAncestor(stateNodes) {\n  const [head, ...tail] = stateNodes;\n  for (const ancestor of getProperAncestors(head, undefined)) {\n    if (tail.every(sn => isDescendant(sn, ancestor))) {\n      return ancestor;\n    }\n  }\n}\nfunction getEffectiveTargetStates(transition, historyValue) {\n  if (!transition.target) {\n    return [];\n  }\n  const targets = new Set();\n  for (const targetNode of transition.target) {\n    if (isHistoryNode(targetNode)) {\n      if (historyValue[targetNode.id]) {\n        for (const node of historyValue[targetNode.id]) {\n          targets.add(node);\n        }\n      } else {\n        for (const node of getEffectiveTargetStates(resolveHistoryDefaultTransition(targetNode), historyValue)) {\n          targets.add(node);\n        }\n      }\n    } else {\n      targets.add(targetNode);\n    }\n  }\n  return [...targets];\n}\nfunction getTransitionDomain(transition, historyValue) {\n  const targetStates = getEffectiveTargetStates(transition, historyValue);\n  if (!targetStates) {\n    return;\n  }\n  if (!transition.reenter && targetStates.every(target => target === transition.source || isDescendant(target, transition.source))) {\n    return transition.source;\n  }\n  const lca = findLeastCommonAncestor(targetStates.concat(transition.source));\n  if (lca) {\n    return lca;\n  }\n\n  // at this point we know that it's a root transition since LCA couldn't be found\n  if (transition.reenter) {\n    return;\n  }\n  return transition.source.machine.root;\n}\nfunction computeExitSet(transitions, stateNodeSet, historyValue) {\n  const statesToExit = new Set();\n  for (const t of transitions) {\n    if (t.target?.length) {\n      const domain = getTransitionDomain(t, historyValue);\n      if (t.reenter && t.source === domain) {\n        statesToExit.add(domain);\n      }\n      for (const stateNode of stateNodeSet) {\n        if (isDescendant(stateNode, domain)) {\n          statesToExit.add(stateNode);\n        }\n      }\n    }\n  }\n  return [...statesToExit];\n}\nfunction areStateNodeCollectionsEqual(prevStateNodes, nextStateNodeSet) {\n  if (prevStateNodes.length !== nextStateNodeSet.size) {\n    return false;\n  }\n  for (const node of prevStateNodes) {\n    if (!nextStateNodeSet.has(node)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/** https://www.w3.org/TR/scxml/#microstepProcedure */\nfunction microstep(transitions, currentSnapshot, actorScope, event, isInitial, internalQueue) {\n  if (!transitions.length) {\n    return currentSnapshot;\n  }\n  const mutStateNodeSet = new Set(currentSnapshot._nodes);\n  let historyValue = currentSnapshot.historyValue;\n  const filteredTransitions = removeConflictingTransitions(transitions, mutStateNodeSet, historyValue);\n  let nextState = currentSnapshot;\n\n  // Exit states\n  if (!isInitial) {\n    [nextState, historyValue] = exitStates(nextState, event, actorScope, filteredTransitions, mutStateNodeSet, historyValue, internalQueue, actorScope.actionExecutor);\n  }\n\n  // Execute transition content\n  nextState = resolveActionsAndContext(nextState, event, actorScope, filteredTransitions.flatMap(t => t.actions), internalQueue, undefined);\n\n  // Enter states\n  nextState = enterStates(nextState, event, actorScope, filteredTransitions, mutStateNodeSet, internalQueue, historyValue, isInitial);\n  const nextStateNodes = [...mutStateNodeSet];\n  if (nextState.status === 'done') {\n    nextState = resolveActionsAndContext(nextState, event, actorScope, nextStateNodes.sort((a, b) => b.order - a.order).flatMap(state => state.exit), internalQueue, undefined);\n  }\n\n  // eslint-disable-next-line no-useless-catch\n  try {\n    if (historyValue === currentSnapshot.historyValue && areStateNodeCollectionsEqual(currentSnapshot._nodes, mutStateNodeSet)) {\n      return nextState;\n    }\n    return cloneMachineSnapshot(nextState, {\n      _nodes: nextStateNodes,\n      historyValue\n    });\n  } catch (e) {\n    // TODO: Refactor this once proper error handling is implemented.\n    // See https://github.com/statelyai/rfcs/pull/4\n    throw e;\n  }\n}\nfunction getMachineOutput(snapshot, event, actorScope, rootNode, rootCompletionNode) {\n  if (rootNode.output === undefined) {\n    return;\n  }\n  const doneStateEvent = createDoneStateEvent(rootCompletionNode.id, rootCompletionNode.output !== undefined && rootCompletionNode.parent ? resolveOutput(rootCompletionNode.output, snapshot.context, event, actorScope.self) : undefined);\n  return resolveOutput(rootNode.output, snapshot.context, doneStateEvent, actorScope.self);\n}\nfunction enterStates(currentSnapshot, event, actorScope, filteredTransitions, mutStateNodeSet, internalQueue, historyValue, isInitial) {\n  let nextSnapshot = currentSnapshot;\n  const statesToEnter = new Set();\n  // those are states that were directly targeted or indirectly targeted by the explicit target\n  // in other words, those are states for which initial actions should be executed\n  // when we target `#deep_child` initial actions of its ancestors shouldn't be executed\n  const statesForDefaultEntry = new Set();\n  computeEntrySet(filteredTransitions, historyValue, statesForDefaultEntry, statesToEnter);\n\n  // In the initial state, the root state node is \"entered\".\n  if (isInitial) {\n    statesForDefaultEntry.add(currentSnapshot.machine.root);\n  }\n  const completedNodes = new Set();\n  for (const stateNodeToEnter of [...statesToEnter].sort((a, b) => a.order - b.order)) {\n    mutStateNodeSet.add(stateNodeToEnter);\n    const actions = [];\n\n    // Add entry actions\n    actions.push(...stateNodeToEnter.entry);\n    for (const invokeDef of stateNodeToEnter.invoke) {\n      actions.push(spawnChild(invokeDef.src, {\n        ...invokeDef,\n        syncSnapshot: !!invokeDef.onSnapshot\n      }));\n    }\n    if (statesForDefaultEntry.has(stateNodeToEnter)) {\n      const initialActions = stateNodeToEnter.initial.actions;\n      actions.push(...initialActions);\n    }\n    nextSnapshot = resolveActionsAndContext(nextSnapshot, event, actorScope, actions, internalQueue, stateNodeToEnter.invoke.map(invokeDef => invokeDef.id));\n    if (stateNodeToEnter.type === 'final') {\n      const parent = stateNodeToEnter.parent;\n      let ancestorMarker = parent?.type === 'parallel' ? parent : parent?.parent;\n      let rootCompletionNode = ancestorMarker || stateNodeToEnter;\n      if (parent?.type === 'compound') {\n        internalQueue.push(createDoneStateEvent(parent.id, stateNodeToEnter.output !== undefined ? resolveOutput(stateNodeToEnter.output, nextSnapshot.context, event, actorScope.self) : undefined));\n      }\n      while (ancestorMarker?.type === 'parallel' && !completedNodes.has(ancestorMarker) && isInFinalState(mutStateNodeSet, ancestorMarker)) {\n        completedNodes.add(ancestorMarker);\n        internalQueue.push(createDoneStateEvent(ancestorMarker.id));\n        rootCompletionNode = ancestorMarker;\n        ancestorMarker = ancestorMarker.parent;\n      }\n      if (ancestorMarker) {\n        continue;\n      }\n      nextSnapshot = cloneMachineSnapshot(nextSnapshot, {\n        status: 'done',\n        output: getMachineOutput(nextSnapshot, event, actorScope, nextSnapshot.machine.root, rootCompletionNode)\n      });\n    }\n  }\n  return nextSnapshot;\n}\nfunction computeEntrySet(transitions, historyValue, statesForDefaultEntry, statesToEnter) {\n  for (const t of transitions) {\n    const domain = getTransitionDomain(t, historyValue);\n    for (const s of t.target || []) {\n      if (!isHistoryNode(s) && (\n      // if the target is different than the source then it will *definitely* be entered\n      t.source !== s ||\n      // we know that the domain can't lie within the source\n      // if it's different than the source then it's outside of it and it means that the target has to be entered as well\n      t.source !== domain ||\n      // reentering transitions always enter the target, even if it's the source itself\n      t.reenter)) {\n        statesToEnter.add(s);\n        statesForDefaultEntry.add(s);\n      }\n      addDescendantStatesToEnter(s, historyValue, statesForDefaultEntry, statesToEnter);\n    }\n    const targetStates = getEffectiveTargetStates(t, historyValue);\n    for (const s of targetStates) {\n      const ancestors = getProperAncestors(s, domain);\n      if (domain?.type === 'parallel') {\n        ancestors.push(domain);\n      }\n      addAncestorStatesToEnter(statesToEnter, historyValue, statesForDefaultEntry, ancestors, !t.source.parent && t.reenter ? undefined : domain);\n    }\n  }\n}\nfunction addDescendantStatesToEnter(stateNode, historyValue, statesForDefaultEntry, statesToEnter) {\n  if (isHistoryNode(stateNode)) {\n    if (historyValue[stateNode.id]) {\n      const historyStateNodes = historyValue[stateNode.id];\n      for (const s of historyStateNodes) {\n        statesToEnter.add(s);\n        addDescendantStatesToEnter(s, historyValue, statesForDefaultEntry, statesToEnter);\n      }\n      for (const s of historyStateNodes) {\n        addProperAncestorStatesToEnter(s, stateNode.parent, statesToEnter, historyValue, statesForDefaultEntry);\n      }\n    } else {\n      const historyDefaultTransition = resolveHistoryDefaultTransition(stateNode);\n      for (const s of historyDefaultTransition.target) {\n        statesToEnter.add(s);\n        if (historyDefaultTransition === stateNode.parent?.initial) {\n          statesForDefaultEntry.add(stateNode.parent);\n        }\n        addDescendantStatesToEnter(s, historyValue, statesForDefaultEntry, statesToEnter);\n      }\n      for (const s of historyDefaultTransition.target) {\n        addProperAncestorStatesToEnter(s, stateNode.parent, statesToEnter, historyValue, statesForDefaultEntry);\n      }\n    }\n  } else {\n    if (stateNode.type === 'compound') {\n      const [initialState] = stateNode.initial.target;\n      if (!isHistoryNode(initialState)) {\n        statesToEnter.add(initialState);\n        statesForDefaultEntry.add(initialState);\n      }\n      addDescendantStatesToEnter(initialState, historyValue, statesForDefaultEntry, statesToEnter);\n      addProperAncestorStatesToEnter(initialState, stateNode, statesToEnter, historyValue, statesForDefaultEntry);\n    } else {\n      if (stateNode.type === 'parallel') {\n        for (const child of getChildren(stateNode).filter(sn => !isHistoryNode(sn))) {\n          if (![...statesToEnter].some(s => isDescendant(s, child))) {\n            if (!isHistoryNode(child)) {\n              statesToEnter.add(child);\n              statesForDefaultEntry.add(child);\n            }\n            addDescendantStatesToEnter(child, historyValue, statesForDefaultEntry, statesToEnter);\n          }\n        }\n      }\n    }\n  }\n}\nfunction addAncestorStatesToEnter(statesToEnter, historyValue, statesForDefaultEntry, ancestors, reentrancyDomain) {\n  for (const anc of ancestors) {\n    if (!reentrancyDomain || isDescendant(anc, reentrancyDomain)) {\n      statesToEnter.add(anc);\n    }\n    if (anc.type === 'parallel') {\n      for (const child of getChildren(anc).filter(sn => !isHistoryNode(sn))) {\n        if (![...statesToEnter].some(s => isDescendant(s, child))) {\n          statesToEnter.add(child);\n          addDescendantStatesToEnter(child, historyValue, statesForDefaultEntry, statesToEnter);\n        }\n      }\n    }\n  }\n}\nfunction addProperAncestorStatesToEnter(stateNode, toStateNode, statesToEnter, historyValue, statesForDefaultEntry) {\n  addAncestorStatesToEnter(statesToEnter, historyValue, statesForDefaultEntry, getProperAncestors(stateNode, toStateNode));\n}\nfunction exitStates(currentSnapshot, event, actorScope, transitions, mutStateNodeSet, historyValue, internalQueue, _actionExecutor) {\n  let nextSnapshot = currentSnapshot;\n  const statesToExit = computeExitSet(transitions, mutStateNodeSet, historyValue);\n  statesToExit.sort((a, b) => b.order - a.order);\n  let changedHistory;\n\n  // From SCXML algorithm: https://www.w3.org/TR/scxml/#exitStates\n  for (const exitStateNode of statesToExit) {\n    for (const historyNode of getHistoryNodes(exitStateNode)) {\n      let predicate;\n      if (historyNode.history === 'deep') {\n        predicate = sn => isAtomicStateNode(sn) && isDescendant(sn, exitStateNode);\n      } else {\n        predicate = sn => {\n          return sn.parent === exitStateNode;\n        };\n      }\n      changedHistory ??= {\n        ...historyValue\n      };\n      changedHistory[historyNode.id] = Array.from(mutStateNodeSet).filter(predicate);\n    }\n  }\n  for (const s of statesToExit) {\n    nextSnapshot = resolveActionsAndContext(nextSnapshot, event, actorScope, [...s.exit, ...s.invoke.map(def => stopChild(def.id))], internalQueue, undefined);\n    mutStateNodeSet.delete(s);\n  }\n  return [nextSnapshot, changedHistory || historyValue];\n}\nfunction getAction(machine, actionType) {\n  return machine.implementations.actions[actionType];\n}\nfunction resolveAndExecuteActionsWithContext(currentSnapshot, event, actorScope, actions, extra, retries) {\n  const {\n    machine\n  } = currentSnapshot;\n  let intermediateSnapshot = currentSnapshot;\n  for (const action of actions) {\n    const isInline = typeof action === 'function';\n    const resolvedAction = isInline ? action :\n    // the existing type of `.actions` assumes non-nullable `TExpressionAction`\n    // it's fine to cast this here to get a common type and lack of errors in the rest of the code\n    // our logic below makes sure that we call those 2 \"variants\" correctly\n\n    getAction(machine, typeof action === 'string' ? action : action.type);\n    const actionArgs = {\n      context: intermediateSnapshot.context,\n      event,\n      self: actorScope.self,\n      system: actorScope.system\n    };\n    const actionParams = isInline || typeof action === 'string' ? undefined : 'params' in action ? typeof action.params === 'function' ? action.params({\n      context: intermediateSnapshot.context,\n      event\n    }) : action.params : undefined;\n    if (!resolvedAction || !('resolve' in resolvedAction)) {\n      actorScope.actionExecutor({\n        type: typeof action === 'string' ? action : typeof action === 'object' ? action.type : action.name || '(anonymous)',\n        info: actionArgs,\n        params: actionParams,\n        exec: resolvedAction\n      });\n      continue;\n    }\n    const builtinAction = resolvedAction;\n    const [nextState, params, actions] = builtinAction.resolve(actorScope, intermediateSnapshot, actionArgs, actionParams, resolvedAction,\n    // this holds all params\n    extra);\n    intermediateSnapshot = nextState;\n    if ('retryResolve' in builtinAction) {\n      retries?.push([builtinAction, params]);\n    }\n    if ('execute' in builtinAction) {\n      actorScope.actionExecutor({\n        type: builtinAction.type,\n        info: actionArgs,\n        params,\n        exec: builtinAction.execute.bind(null, actorScope, params)\n      });\n    }\n    if (actions) {\n      intermediateSnapshot = resolveAndExecuteActionsWithContext(intermediateSnapshot, event, actorScope, actions, extra, retries);\n    }\n  }\n  return intermediateSnapshot;\n}\nfunction resolveActionsAndContext(currentSnapshot, event, actorScope, actions, internalQueue, deferredActorIds) {\n  const retries = deferredActorIds ? [] : undefined;\n  const nextState = resolveAndExecuteActionsWithContext(currentSnapshot, event, actorScope, actions, {\n    internalQueue,\n    deferredActorIds\n  }, retries);\n  retries?.forEach(([builtinAction, params]) => {\n    builtinAction.retryResolve(actorScope, nextState, params);\n  });\n  return nextState;\n}\nfunction macrostep(snapshot, event, actorScope, internalQueue) {\n  let nextSnapshot = snapshot;\n  const microstates = [];\n  function addMicrostate(microstate, event, transitions) {\n    actorScope.system._sendInspectionEvent({\n      type: '@xstate.microstep',\n      actorRef: actorScope.self,\n      event,\n      snapshot: microstate,\n      _transitions: transitions\n    });\n    microstates.push(microstate);\n  }\n\n  // Handle stop event\n  if (event.type === XSTATE_STOP) {\n    nextSnapshot = cloneMachineSnapshot(stopChildren(nextSnapshot, event, actorScope), {\n      status: 'stopped'\n    });\n    addMicrostate(nextSnapshot, event, []);\n    return {\n      snapshot: nextSnapshot,\n      microstates\n    };\n  }\n  let nextEvent = event;\n\n  // Assume the state is at rest (no raised events)\n  // Determine the next state based on the next microstep\n  if (nextEvent.type !== XSTATE_INIT) {\n    const currentEvent = nextEvent;\n    const isErr = isErrorActorEvent(currentEvent);\n    const transitions = selectTransitions(currentEvent, nextSnapshot);\n    if (isErr && !transitions.length) {\n      // TODO: we should likely only allow transitions selected by very explicit descriptors\n      // `*` shouldn't be matched, likely `xstate.error.*` shouldn't be either\n      // similarly `xstate.error.actor.*` and `xstate.error.actor.todo.*` have to be considered too\n      nextSnapshot = cloneMachineSnapshot(snapshot, {\n        status: 'error',\n        error: currentEvent.error\n      });\n      addMicrostate(nextSnapshot, currentEvent, []);\n      return {\n        snapshot: nextSnapshot,\n        microstates\n      };\n    }\n    nextSnapshot = microstep(transitions, snapshot, actorScope, nextEvent, false,\n    // isInitial\n    internalQueue);\n    addMicrostate(nextSnapshot, currentEvent, transitions);\n  }\n  let shouldSelectEventlessTransitions = true;\n  while (nextSnapshot.status === 'active') {\n    let enabledTransitions = shouldSelectEventlessTransitions ? selectEventlessTransitions(nextSnapshot, nextEvent) : [];\n\n    // eventless transitions should always be selected after selecting *regular* transitions\n    // by assigning `undefined` to `previousState` we ensure that `shouldSelectEventlessTransitions` gets always computed to true in such a case\n    const previousState = enabledTransitions.length ? nextSnapshot : undefined;\n    if (!enabledTransitions.length) {\n      if (!internalQueue.length) {\n        break;\n      }\n      nextEvent = internalQueue.shift();\n      enabledTransitions = selectTransitions(nextEvent, nextSnapshot);\n    }\n    nextSnapshot = microstep(enabledTransitions, nextSnapshot, actorScope, nextEvent, false, internalQueue);\n    shouldSelectEventlessTransitions = nextSnapshot !== previousState;\n    addMicrostate(nextSnapshot, nextEvent, enabledTransitions);\n  }\n  if (nextSnapshot.status !== 'active') {\n    stopChildren(nextSnapshot, nextEvent, actorScope);\n  }\n  return {\n    snapshot: nextSnapshot,\n    microstates\n  };\n}\nfunction stopChildren(nextState, event, actorScope) {\n  return resolveActionsAndContext(nextState, event, actorScope, Object.values(nextState.children).map(child => stopChild(child)), [], undefined);\n}\nfunction selectTransitions(event, nextState) {\n  return nextState.machine.getTransitionData(nextState, event);\n}\nfunction selectEventlessTransitions(nextState, event) {\n  const enabledTransitionSet = new Set();\n  const atomicStates = nextState._nodes.filter(isAtomicStateNode);\n  for (const stateNode of atomicStates) {\n    loop: for (const s of [stateNode].concat(getProperAncestors(stateNode, undefined))) {\n      if (!s.always) {\n        continue;\n      }\n      for (const transition of s.always) {\n        if (transition.guard === undefined || evaluateGuard(transition.guard, nextState.context, event, nextState)) {\n          enabledTransitionSet.add(transition);\n          break loop;\n        }\n      }\n    }\n  }\n  return removeConflictingTransitions(Array.from(enabledTransitionSet), new Set(nextState._nodes), nextState.historyValue);\n}\n\n/**\n * Resolves a partial state value with its full representation in the state\n * node's machine.\n *\n * @param stateValue The partial state value to resolve.\n */\nfunction resolveStateValue(rootNode, stateValue) {\n  const allStateNodes = getAllStateNodes(getStateNodes(rootNode, stateValue));\n  return getStateValue(rootNode, [...allStateNodes]);\n}\n\nfunction isMachineSnapshot(value) {\n  return !!value && typeof value === 'object' && 'machine' in value && 'value' in value;\n}\nconst machineSnapshotMatches = function matches(testValue) {\n  return matchesState(testValue, this.value);\n};\nconst machineSnapshotHasTag = function hasTag(tag) {\n  return this.tags.has(tag);\n};\nconst machineSnapshotCan = function can(event) {\n  const transitionData = this.machine.getTransitionData(this, event);\n  return !!transitionData?.length &&\n  // Check that at least one transition is not forbidden\n  transitionData.some(t => t.target !== undefined || t.actions.length);\n};\nconst machineSnapshotToJSON = function toJSON() {\n  const {\n    _nodes: nodes,\n    tags,\n    machine,\n    getMeta,\n    toJSON,\n    can,\n    hasTag,\n    matches,\n    ...jsonValues\n  } = this;\n  return {\n    ...jsonValues,\n    tags: Array.from(tags)\n  };\n};\nconst machineSnapshotGetMeta = function getMeta() {\n  return this._nodes.reduce((acc, stateNode) => {\n    if (stateNode.meta !== undefined) {\n      acc[stateNode.id] = stateNode.meta;\n    }\n    return acc;\n  }, {});\n};\nfunction createMachineSnapshot(config, machine) {\n  return {\n    status: config.status,\n    output: config.output,\n    error: config.error,\n    machine,\n    context: config.context,\n    _nodes: config._nodes,\n    value: getStateValue(machine.root, config._nodes),\n    tags: new Set(config._nodes.flatMap(sn => sn.tags)),\n    children: config.children,\n    historyValue: config.historyValue || {},\n    matches: machineSnapshotMatches,\n    hasTag: machineSnapshotHasTag,\n    can: machineSnapshotCan,\n    getMeta: machineSnapshotGetMeta,\n    toJSON: machineSnapshotToJSON\n  };\n}\nfunction cloneMachineSnapshot(snapshot, config = {}) {\n  return createMachineSnapshot({\n    ...snapshot,\n    ...config\n  }, snapshot.machine);\n}\nfunction serializeHistoryValue(historyValue) {\n  if (typeof historyValue !== 'object' || historyValue === null) {\n    return {};\n  }\n  const result = {};\n  for (const key in historyValue) {\n    const value = historyValue[key];\n    if (Array.isArray(value)) {\n      result[key] = value.map(item => ({\n        id: item.id\n      }));\n    }\n  }\n  return result;\n}\nfunction getPersistedSnapshot(snapshot, options) {\n  const {\n    _nodes: nodes,\n    tags,\n    machine,\n    children,\n    context,\n    can,\n    hasTag,\n    matches,\n    getMeta,\n    toJSON,\n    ...jsonValues\n  } = snapshot;\n  const childrenJson = {};\n  for (const id in children) {\n    const child = children[id];\n    childrenJson[id] = {\n      snapshot: child.getPersistedSnapshot(options),\n      src: child.src,\n      systemId: child._systemId,\n      syncSnapshot: child._syncSnapshot\n    };\n  }\n  const persisted = {\n    ...jsonValues,\n    context: persistContext(context),\n    children: childrenJson,\n    historyValue: serializeHistoryValue(jsonValues.historyValue)\n  };\n  return persisted;\n}\nfunction persistContext(contextPart) {\n  let copy;\n  for (const key in contextPart) {\n    const value = contextPart[key];\n    if (value && typeof value === 'object') {\n      if ('sessionId' in value && 'send' in value && 'ref' in value) {\n        copy ??= Array.isArray(contextPart) ? contextPart.slice() : {\n          ...contextPart\n        };\n        copy[key] = {\n          xstate$$type: $$ACTOR_TYPE,\n          id: value.id\n        };\n      } else {\n        const result = persistContext(value);\n        if (result !== value) {\n          copy ??= Array.isArray(contextPart) ? contextPart.slice() : {\n            ...contextPart\n          };\n          copy[key] = result;\n        }\n      }\n    }\n  }\n  return copy ?? contextPart;\n}\n\nfunction resolveRaise(_, snapshot, args, actionParams, {\n  event: eventOrExpr,\n  id,\n  delay\n}, {\n  internalQueue\n}) {\n  const delaysMap = snapshot.machine.implementations.delays;\n  if (typeof eventOrExpr === 'string') {\n    throw new Error(\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    `Only event objects may be used with raise; use raise({ type: \"${eventOrExpr}\" }) instead`);\n  }\n  const resolvedEvent = typeof eventOrExpr === 'function' ? eventOrExpr(args, actionParams) : eventOrExpr;\n  let resolvedDelay;\n  if (typeof delay === 'string') {\n    const configDelay = delaysMap && delaysMap[delay];\n    resolvedDelay = typeof configDelay === 'function' ? configDelay(args, actionParams) : configDelay;\n  } else {\n    resolvedDelay = typeof delay === 'function' ? delay(args, actionParams) : delay;\n  }\n  if (typeof resolvedDelay !== 'number') {\n    internalQueue.push(resolvedEvent);\n  }\n  return [snapshot, {\n    event: resolvedEvent,\n    id,\n    delay: resolvedDelay\n  }, undefined];\n}\nfunction executeRaise(actorScope, params) {\n  const {\n    event,\n    delay,\n    id\n  } = params;\n  if (typeof delay === 'number') {\n    actorScope.defer(() => {\n      const self = actorScope.self;\n      actorScope.system.scheduler.schedule(self, self, event, delay, id);\n    });\n    return;\n  }\n}\n/**\n * Raises an event. This places the event in the internal event queue, so that\n * the event is immediately consumed by the machine in the current step.\n *\n * @param eventType The event to raise.\n */\nfunction raise(eventOrExpr, options) {\n  function raise(_args, _params) {\n  }\n  raise.type = 'xstate.raise';\n  raise.event = eventOrExpr;\n  raise.id = options?.id;\n  raise.delay = options?.delay;\n  raise.resolve = resolveRaise;\n  raise.execute = executeRaise;\n  return raise;\n}\n\nexport { $$ACTOR_TYPE as $, Actor as A, getCandidates as B, resolveStateValue as C, getAllStateNodes as D, createMachineSnapshot as E, isInFinalState as F, macrostep as G, transitionNode as H, resolveActionsAndContext as I, createInitEvent as J, microstep as K, getInitialStateNodes as L, toStatePath as M, NULL_EVENT as N, isStateId as O, getStateNodeByPath as P, getPersistedSnapshot as Q, resolveReferencedActor as R, STATE_DELIMITER as S, XSTATE_ERROR as T, createErrorActorEvent as U, ProcessingStatus as V, cloneMachineSnapshot as W, XSTATE_STOP as X, and as a, isMachineSnapshot as b, createActor as c, getAllOwnEventDescriptors as d, toObserver as e, cancel as f, getStateNodes as g, spawnChild as h, interpret as i, stop as j, stopChild as k, mapValues as l, matchesState as m, not as n, or as o, pathToStateValue as p, formatTransitions as q, raise as r, stateIn as s, toArray as t, toTransitionConfigArray as u, formatTransition as v, evaluateGuard as w, createInvokeId as x, getDelayedTransitions as y, formatInitialTransition as z };\n","import { X as XSTATE_STOP, c as createActor } from '../../dist/raise-b0a4e862.esm.js';\nimport '../../dev/dist/xstate-dev.esm.js';\n\n/**\n * Represents an actor created by `fromTransition`.\n *\n * The type of `self` within the actor's logic.\n *\n * @example\n *\n * ```ts\n * import {\n *   fromTransition,\n *   createActor,\n *   type AnyActorSystem\n * } from 'xstate';\n *\n * //* The actor's stored context.\n * type Context = {\n *   // The current count.\n *   count: number;\n *   // The amount to increase `count` by.\n *   step: number;\n * };\n * // The events the actor receives.\n * type Event = { type: 'increment' };\n * // The actor's input.\n * type Input = { step?: number };\n *\n * // Actor logic that increments `count` by `step` when it receives an event of\n * // type `increment`.\n * const logic = fromTransition<Context, Event, AnyActorSystem, Input>(\n *   (state, event, actorScope) => {\n *     actorScope.self;\n *     //         ^? TransitionActorRef<Context, Event>\n *\n *     if (event.type === 'increment') {\n *       return {\n *         ...state,\n *         count: state.count + state.step\n *       };\n *     }\n *     return state;\n *   },\n *   ({ input, self }) => {\n *     self;\n *     // ^? TransitionActorRef<Context, Event>\n *\n *     return {\n *       count: 0,\n *       step: input.step ?? 1\n *     };\n *   }\n * );\n *\n * const actor = createActor(logic, { input: { step: 10 } });\n * //    ^? TransitionActorRef<Context, Event>\n * ```\n *\n * @see {@link fromTransition}\n */\n\n/**\n * Returns actor logic given a transition function and its initial state.\n *\n * A “transition function” is a function that takes the current `state` and\n * received `event` object as arguments, and returns the next state, similar to\n * a reducer.\n *\n * Actors created from transition logic (“transition actors”) can:\n *\n * - Receive events\n * - Emit snapshots of its state\n *\n * The transition function’s `state` is used as its transition actor’s\n * `context`.\n *\n * Note that the \"state\" for a transition function is provided by the initial\n * state argument, and is not the same as the State object of an actor or a\n * state within a machine configuration.\n *\n * @example\n *\n * ```ts\n * const transitionLogic = fromTransition(\n *   (state, event) => {\n *     if (event.type === 'increment') {\n *       return {\n *         ...state,\n *         count: state.count + 1\n *       };\n *     }\n *     return state;\n *   },\n *   { count: 0 }\n * );\n *\n * const transitionActor = createActor(transitionLogic);\n * transitionActor.subscribe((snapshot) => {\n *   console.log(snapshot);\n * });\n * transitionActor.start();\n * // => {\n * //   status: 'active',\n * //   context: { count: 0 },\n * //   ...\n * // }\n *\n * transitionActor.send({ type: 'increment' });\n * // => {\n * //   status: 'active',\n * //   context: { count: 1 },\n * //   ...\n * // }\n * ```\n *\n * @param transition The transition function used to describe the transition\n *   logic. It should return the next state given the current state and event.\n *   It receives the following arguments:\n *\n *   - `state` - the current state.\n *   - `event` - the received event.\n *   - `actorScope` - the actor scope object, with properties like `self` and\n *       `system`.\n *\n * @param initialContext The initial state of the transition function, either an\n *   object representing the state, or a function which returns a state object.\n *   If a function, it will receive as its only argument an object with the\n *   following properties:\n *\n *   - `input` - the `input` provided to its parent transition actor.\n *   - `self` - a reference to its parent transition actor.\n *\n * @returns Actor logic\n * @see {@link https://stately.ai/docs/input | Input docs} for more information about how input is passed\n */\nfunction fromTransition(transition, initialContext) {\n  return {\n    config: transition,\n    transition: (snapshot, event, actorScope) => {\n      return {\n        ...snapshot,\n        context: transition(snapshot.context, event, actorScope)\n      };\n    },\n    getInitialSnapshot: (_, input) => {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        context: typeof initialContext === 'function' ? initialContext({\n          input\n        }) : initialContext\n      };\n    },\n    getPersistedSnapshot: snapshot => snapshot,\n    restoreSnapshot: snapshot => snapshot\n  };\n}\n\nconst instanceStates = /* #__PURE__ */new WeakMap();\n\n/**\n * Represents an actor created by `fromCallback`.\n *\n * The type of `self` within the actor's logic.\n *\n * @example\n *\n * ```ts\n * import { fromCallback, createActor } from 'xstate';\n *\n * // The events the actor receives.\n * type Event = { type: 'someEvent' };\n * // The actor's input.\n * type Input = { name: string };\n *\n * // Actor logic that logs whenever it receives an event of type `someEvent`.\n * const logic = fromCallback<Event, Input>(({ self, input, receive }) => {\n *   self;\n *   // ^? CallbackActorRef<Event, Input>\n *\n *   receive((event) => {\n *     if (event.type === 'someEvent') {\n *       console.log(`${input.name}: received \"someEvent\" event`);\n *       // logs 'myActor: received \"someEvent\" event'\n *     }\n *   });\n * });\n *\n * const actor = createActor(logic, { input: { name: 'myActor' } });\n * //    ^? CallbackActorRef<Event, Input>\n * ```\n *\n * @see {@link fromCallback}\n */\n\n/**\n * An actor logic creator which returns callback logic as defined by a callback\n * function.\n *\n * @remarks\n * Useful for subscription-based or other free-form logic that can send events\n * back to the parent actor.\n *\n * Actors created from callback logic (“callback actors”) can:\n *\n * - Receive events via the `receive` function\n * - Send events to the parent actor via the `sendBack` function\n *\n * Callback actors are a bit different from other actors in that they:\n *\n * - Do not work with `onDone`\n * - Do not produce a snapshot using `.getSnapshot()`\n * - Do not emit values when used with `.subscribe()`\n * - Can not be stopped with `.stop()`\n *\n * @example\n *\n * ```typescript\n * const callbackLogic = fromCallback(({ sendBack, receive }) => {\n *   let lockStatus = 'unlocked';\n *\n *   const handler = (event) => {\n *     if (lockStatus === 'locked') {\n *       return;\n *     }\n *     sendBack(event);\n *   };\n *\n *   receive((event) => {\n *     if (event.type === 'lock') {\n *       lockStatus = 'locked';\n *     } else if (event.type === 'unlock') {\n *       lockStatus = 'unlocked';\n *     }\n *   });\n *\n *   document.body.addEventListener('click', handler);\n *\n *   return () => {\n *     document.body.removeEventListener('click', handler);\n *   };\n * });\n * ```\n *\n * @param callback - The callback function used to describe the callback logic\n *   The callback function is passed an object with the following properties:\n *\n *   - `receive` - A function that can send events back to the parent actor; the\n *       listener is then called whenever events are received by the callback\n *       actor\n *   - `sendBack` - A function that can send events back to the parent actor\n *   - `input` - Data that was provided to the callback actor\n *   - `self` - The parent actor of the callback actor\n *   - `system` - The actor system to which the callback actor belongs The callback\n *       function can (optionally) return a cleanup function, which is called\n *       when the actor is stopped.\n *\n * @returns Callback logic\n * @see {@link CallbackLogicFunction} for more information about the callback function and its object argument\n * @see {@link https://stately.ai/docs/input | Input docs} for more information about how input is passed\n */\nfunction fromCallback(callback) {\n  const logic = {\n    config: callback,\n    start: (state, actorScope) => {\n      const {\n        self,\n        system,\n        emit\n      } = actorScope;\n      const callbackState = {\n        receivers: undefined,\n        dispose: undefined\n      };\n      instanceStates.set(self, callbackState);\n      callbackState.dispose = callback({\n        input: state.input,\n        system,\n        self,\n        sendBack: event => {\n          if (self.getSnapshot().status === 'stopped') {\n            return;\n          }\n          if (self._parent) {\n            system._relay(self, self._parent, event);\n          }\n        },\n        receive: listener => {\n          callbackState.receivers ??= new Set();\n          callbackState.receivers.add(listener);\n        },\n        emit\n      });\n    },\n    transition: (state, event, actorScope) => {\n      const callbackState = instanceStates.get(actorScope.self);\n      if (event.type === XSTATE_STOP) {\n        state = {\n          ...state,\n          status: 'stopped',\n          error: undefined\n        };\n        callbackState.dispose?.();\n        return state;\n      }\n      callbackState.receivers?.forEach(receiver => receiver(event));\n      return state;\n    },\n    getInitialSnapshot: (_, input) => {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        input\n      };\n    },\n    getPersistedSnapshot: snapshot => snapshot,\n    restoreSnapshot: snapshot => snapshot\n  };\n  return logic;\n}\n\nconst XSTATE_OBSERVABLE_NEXT = 'xstate.observable.next';\nconst XSTATE_OBSERVABLE_ERROR = 'xstate.observable.error';\nconst XSTATE_OBSERVABLE_COMPLETE = 'xstate.observable.complete';\n\n/**\n * Represents an actor created by `fromObservable` or `fromEventObservable`.\n *\n * The type of `self` within the actor's logic.\n *\n * @example\n *\n * ```ts\n * import { fromObservable, createActor } from 'xstate';\n * import { interval } from 'rxjs';\n *\n * // The type of the value observed by the actor's logic.\n * type Context = number;\n * // The actor's input.\n * type Input = { period?: number };\n *\n * // Actor logic that observes a number incremented every `input.period`\n * // milliseconds (default: 1_000).\n * const logic = fromObservable<Context, Input>(({ input, self }) => {\n *   self;\n *   // ^? ObservableActorRef<Event, Input>\n *\n *   return interval(input.period ?? 1_000);\n * });\n *\n * const actor = createActor(logic, { input: { period: 2_000 } });\n * //    ^? ObservableActorRef<Event, Input>\n * ```\n *\n * @see {@link fromObservable}\n * @see {@link fromEventObservable}\n */\n\n/**\n * Observable actor logic is described by an observable stream of values. Actors\n * created from observable logic (“observable actors”) can:\n *\n * - Emit snapshots of the observable’s emitted value\n *\n * The observable’s emitted value is used as its observable actor’s `context`.\n *\n * Sending events to observable actors will have no effect.\n *\n * @example\n *\n * ```ts\n * import { fromObservable, createActor } from 'xstate';\n * import { interval } from 'rxjs';\n *\n * const logic = fromObservable((obj) => interval(1000));\n *\n * const actor = createActor(logic);\n *\n * actor.subscribe((snapshot) => {\n *   console.log(snapshot.context);\n * });\n *\n * actor.start();\n * // At every second:\n * // Logs 0\n * // Logs 1\n * // Logs 2\n * // ...\n * ```\n *\n * @param observableCreator A function that creates an observable. It receives\n *   one argument, an object with the following properties:\n *\n *   - `input` - Data that was provided to the observable actor\n *   - `self` - The parent actor\n *   - `system` - The actor system to which the observable actor belongs\n *\n *   It should return a {@link Subscribable}, which is compatible with an RxJS\n *   Observable, although RxJS is not required to create them.\n * @see {@link https://rxjs.dev} for documentation on RxJS Observable and observable creators.\n * @see {@link Subscribable} interface in XState, which is based on and compatible with RxJS Observable.\n */\nfunction fromObservable(observableCreator) {\n  // TODO: add event types\n  const logic = {\n    config: observableCreator,\n    transition: (snapshot, event) => {\n      if (snapshot.status !== 'active') {\n        return snapshot;\n      }\n      switch (event.type) {\n        case XSTATE_OBSERVABLE_NEXT:\n          {\n            const newSnapshot = {\n              ...snapshot,\n              context: event.data\n            };\n            return newSnapshot;\n          }\n        case XSTATE_OBSERVABLE_ERROR:\n          return {\n            ...snapshot,\n            status: 'error',\n            error: event.data,\n            input: undefined,\n            _subscription: undefined\n          };\n        case XSTATE_OBSERVABLE_COMPLETE:\n          return {\n            ...snapshot,\n            status: 'done',\n            input: undefined,\n            _subscription: undefined\n          };\n        case XSTATE_STOP:\n          snapshot._subscription.unsubscribe();\n          return {\n            ...snapshot,\n            status: 'stopped',\n            input: undefined,\n            _subscription: undefined\n          };\n        default:\n          return snapshot;\n      }\n    },\n    getInitialSnapshot: (_, input) => {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        context: undefined,\n        input,\n        _subscription: undefined\n      };\n    },\n    start: (state, {\n      self,\n      system,\n      emit\n    }) => {\n      if (state.status === 'done') {\n        // Do not restart a completed observable\n        return;\n      }\n      state._subscription = observableCreator({\n        input: state.input,\n        system,\n        self,\n        emit\n      }).subscribe({\n        next: value => {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_NEXT,\n            data: value\n          });\n        },\n        error: err => {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_ERROR,\n            data: err\n          });\n        },\n        complete: () => {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_COMPLETE\n          });\n        }\n      });\n    },\n    getPersistedSnapshot: ({\n      _subscription,\n      ...state\n    }) => state,\n    restoreSnapshot: state => ({\n      ...state,\n      _subscription: undefined\n    })\n  };\n  return logic;\n}\n\n/**\n * Creates event observable logic that listens to an observable that delivers\n * event objects.\n *\n * Event observable actor logic is described by an observable stream of\n * {@link https://stately.ai/docs/transitions#event-objects | event objects}.\n * Actors created from event observable logic (“event observable actors”) can:\n *\n * - Implicitly send events to its parent actor\n * - Emit snapshots of its emitted event objects\n *\n * Sending events to event observable actors will have no effect.\n *\n * @example\n *\n * ```ts\n * import {\n *   fromEventObservable,\n *   Subscribable,\n *   EventObject,\n *   createMachine,\n *   createActor\n * } from 'xstate';\n * import { fromEvent } from 'rxjs';\n *\n * const mouseClickLogic = fromEventObservable(\n *   () => fromEvent(document.body, 'click') as Subscribable<EventObject>\n * );\n *\n * const canvasMachine = createMachine({\n *   invoke: {\n *     // Will send mouse `click` events to the canvas actor\n *     src: mouseClickLogic\n *   }\n * });\n *\n * const canvasActor = createActor(canvasMachine);\n * canvasActor.start();\n * ```\n *\n * @param lazyObservable A function that creates an observable that delivers\n *   event objects. It receives one argument, an object with the following\n *   properties:\n *\n *   - `input` - Data that was provided to the event observable actor\n *   - `self` - The parent actor\n *   - `system` - The actor system to which the event observable actor belongs.\n *\n *   It should return a {@link Subscribable}, which is compatible with an RxJS\n *   Observable, although RxJS is not required to create them.\n */\nfunction fromEventObservable(lazyObservable) {\n  // TODO: event types\n  const logic = {\n    config: lazyObservable,\n    transition: (state, event) => {\n      if (state.status !== 'active') {\n        return state;\n      }\n      switch (event.type) {\n        case XSTATE_OBSERVABLE_ERROR:\n          return {\n            ...state,\n            status: 'error',\n            error: event.data,\n            input: undefined,\n            _subscription: undefined\n          };\n        case XSTATE_OBSERVABLE_COMPLETE:\n          return {\n            ...state,\n            status: 'done',\n            input: undefined,\n            _subscription: undefined\n          };\n        case XSTATE_STOP:\n          state._subscription.unsubscribe();\n          return {\n            ...state,\n            status: 'stopped',\n            input: undefined,\n            _subscription: undefined\n          };\n        default:\n          return state;\n      }\n    },\n    getInitialSnapshot: (_, input) => {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        context: undefined,\n        input,\n        _subscription: undefined\n      };\n    },\n    start: (state, {\n      self,\n      system,\n      emit\n    }) => {\n      if (state.status === 'done') {\n        // Do not restart a completed observable\n        return;\n      }\n      state._subscription = lazyObservable({\n        input: state.input,\n        system,\n        self,\n        emit\n      }).subscribe({\n        next: value => {\n          if (self._parent) {\n            system._relay(self, self._parent, value);\n          }\n        },\n        error: err => {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_ERROR,\n            data: err\n          });\n        },\n        complete: () => {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_COMPLETE\n          });\n        }\n      });\n    },\n    getPersistedSnapshot: ({\n      _subscription,\n      ...snapshot\n    }) => snapshot,\n    restoreSnapshot: snapshot => ({\n      ...snapshot,\n      _subscription: undefined\n    })\n  };\n  return logic;\n}\n\nconst XSTATE_PROMISE_RESOLVE = 'xstate.promise.resolve';\nconst XSTATE_PROMISE_REJECT = 'xstate.promise.reject';\n\n/**\n * Represents an actor created by `fromPromise`.\n *\n * The type of `self` within the actor's logic.\n *\n * @example\n *\n * ```ts\n * import { fromPromise, createActor } from 'xstate';\n *\n * // The actor's resolved output\n * type Output = string;\n * // The actor's input.\n * type Input = { message: string };\n *\n * // Actor logic that fetches the url of an image of a cat saying `input.message`.\n * const logic = fromPromise<Output, Input>(async ({ input, self }) => {\n *   self;\n *   // ^? PromiseActorRef<Output, Input>\n *\n *   const data = await fetch(\n *     `https://cataas.com/cat/says/${input.message}`\n *   );\n *   const url = await data.json();\n *   return url;\n * });\n *\n * const actor = createActor(logic, { input: { message: 'hello world' } });\n * //    ^? PromiseActorRef<Output, Input>\n * ```\n *\n * @see {@link fromPromise}\n */\n\nconst controllerMap = new WeakMap();\n\n/**\n * An actor logic creator which returns promise logic as defined by an async\n * process that resolves or rejects after some time.\n *\n * Actors created from promise actor logic (“promise actors”) can:\n *\n * - Emit the resolved value of the promise\n * - Output the resolved value of the promise\n *\n * Sending events to promise actors will have no effect.\n *\n * @example\n *\n * ```ts\n * const promiseLogic = fromPromise(async () => {\n *   const result = await fetch('https://example.com/...').then((data) =>\n *     data.json()\n *   );\n *\n *   return result;\n * });\n *\n * const promiseActor = createActor(promiseLogic);\n * promiseActor.subscribe((snapshot) => {\n *   console.log(snapshot);\n * });\n * promiseActor.start();\n * // => {\n * //   output: undefined,\n * //   status: 'active'\n * //   ...\n * // }\n *\n * // After promise resolves\n * // => {\n * //   output: { ... },\n * //   status: 'done',\n * //   ...\n * // }\n * ```\n *\n * @param promiseCreator A function which returns a Promise, and accepts an\n *   object with the following properties:\n *\n *   - `input` - Data that was provided to the promise actor\n *   - `self` - The parent actor of the promise actor\n *   - `system` - The actor system to which the promise actor belongs\n *\n * @see {@link https://stately.ai/docs/input | Input docs} for more information about how input is passed\n */\nfunction fromPromise(promiseCreator) {\n  const logic = {\n    config: promiseCreator,\n    transition: (state, event, scope) => {\n      if (state.status !== 'active') {\n        return state;\n      }\n      switch (event.type) {\n        case XSTATE_PROMISE_RESOLVE:\n          {\n            const resolvedValue = event.data;\n            return {\n              ...state,\n              status: 'done',\n              output: resolvedValue,\n              input: undefined\n            };\n          }\n        case XSTATE_PROMISE_REJECT:\n          return {\n            ...state,\n            status: 'error',\n            error: event.data,\n            input: undefined\n          };\n        case XSTATE_STOP:\n          {\n            controllerMap.get(scope.self)?.abort();\n            return {\n              ...state,\n              status: 'stopped',\n              input: undefined\n            };\n          }\n        default:\n          return state;\n      }\n    },\n    start: (state, {\n      self,\n      system,\n      emit\n    }) => {\n      // TODO: determine how to allow customizing this so that promises\n      // can be restarted if necessary\n      if (state.status !== 'active') {\n        return;\n      }\n      const controller = new AbortController();\n      controllerMap.set(self, controller);\n      const resolvedPromise = Promise.resolve(promiseCreator({\n        input: state.input,\n        system,\n        self,\n        signal: controller.signal,\n        emit\n      }));\n      resolvedPromise.then(response => {\n        if (self.getSnapshot().status !== 'active') {\n          return;\n        }\n        controllerMap.delete(self);\n        system._relay(self, self, {\n          type: XSTATE_PROMISE_RESOLVE,\n          data: response\n        });\n      }, errorData => {\n        if (self.getSnapshot().status !== 'active') {\n          return;\n        }\n        controllerMap.delete(self);\n        system._relay(self, self, {\n          type: XSTATE_PROMISE_REJECT,\n          data: errorData\n        });\n      });\n    },\n    getInitialSnapshot: (_, input) => {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        input\n      };\n    },\n    getPersistedSnapshot: snapshot => snapshot,\n    restoreSnapshot: snapshot => snapshot\n  };\n  return logic;\n}\n\nconst emptyLogic = fromTransition(_ => undefined, undefined);\nfunction createEmptyActor() {\n  return createActor(emptyLogic);\n}\n\nexport { createEmptyActor, fromCallback, fromEventObservable, fromObservable, fromPromise, fromTransition };\n","import { V as ProcessingStatus, R as resolveReferencedActor, c as createActor, W as cloneMachineSnapshot } from './raise-b0a4e862.esm.js';\n\nfunction createSpawner(actorScope, {\n  machine,\n  context\n}, event, spawnedChildren) {\n  const spawn = (src, options) => {\n    if (typeof src === 'string') {\n      const logic = resolveReferencedActor(machine, src);\n      if (!logic) {\n        throw new Error(`Actor logic '${src}' not implemented in machine '${machine.id}'`);\n      }\n      const actorRef = createActor(logic, {\n        id: options?.id,\n        parent: actorScope.self,\n        syncSnapshot: options?.syncSnapshot,\n        input: typeof options?.input === 'function' ? options.input({\n          context,\n          event,\n          self: actorScope.self\n        }) : options?.input,\n        src,\n        systemId: options?.systemId\n      });\n      spawnedChildren[actorRef.id] = actorRef;\n      return actorRef;\n    } else {\n      const actorRef = createActor(src, {\n        id: options?.id,\n        parent: actorScope.self,\n        syncSnapshot: options?.syncSnapshot,\n        input: options?.input,\n        src,\n        systemId: options?.systemId\n      });\n      return actorRef;\n    }\n  };\n  return (src, options) => {\n    const actorRef = spawn(src, options); // TODO: fix types\n    spawnedChildren[actorRef.id] = actorRef;\n    actorScope.defer(() => {\n      if (actorRef._processingStatus === ProcessingStatus.Stopped) {\n        return;\n      }\n      actorRef.start();\n    });\n    return actorRef;\n  };\n}\n\nfunction resolveAssign(actorScope, snapshot, actionArgs, actionParams, {\n  assignment\n}) {\n  if (!snapshot.context) {\n    throw new Error('Cannot assign to undefined `context`. Ensure that `context` is defined in the machine config.');\n  }\n  const spawnedChildren = {};\n  const assignArgs = {\n    context: snapshot.context,\n    event: actionArgs.event,\n    spawn: createSpawner(actorScope, snapshot, actionArgs.event, spawnedChildren),\n    self: actorScope.self,\n    system: actorScope.system\n  };\n  let partialUpdate = {};\n  if (typeof assignment === 'function') {\n    partialUpdate = assignment(assignArgs, actionParams);\n  } else {\n    for (const key of Object.keys(assignment)) {\n      const propAssignment = assignment[key];\n      partialUpdate[key] = typeof propAssignment === 'function' ? propAssignment(assignArgs, actionParams) : propAssignment;\n    }\n  }\n  const updatedContext = Object.assign({}, snapshot.context, partialUpdate);\n  return [cloneMachineSnapshot(snapshot, {\n    context: updatedContext,\n    children: Object.keys(spawnedChildren).length ? {\n      ...snapshot.children,\n      ...spawnedChildren\n    } : snapshot.children\n  }), undefined, undefined];\n}\n/**\n * Updates the current context of the machine.\n *\n * @example\n *\n * ```ts\n * import { createMachine, assign } from 'xstate';\n *\n * const countMachine = createMachine({\n *   context: {\n *     count: 0,\n *     message: ''\n *   },\n *   on: {\n *     inc: {\n *       actions: assign({\n *         count: ({ context }) => context.count + 1\n *       })\n *     },\n *     updateMessage: {\n *       actions: assign(({ context, event }) => {\n *         return {\n *           message: event.message.trim()\n *         };\n *       })\n *     }\n *   }\n * });\n * ```\n *\n * @param assignment An object that represents the partial context to update, or\n *   a function that returns an object that represents the partial context to\n *   update.\n */\nfunction assign(assignment) {\n  function assign(_args, _params) {\n  }\n  assign.type = 'xstate.assign';\n  assign.assignment = assignment;\n  assign.resolve = resolveAssign;\n  return assign;\n}\n\nexport { assign as a };\n","import { S as STATE_DELIMITER, l as mapValues, t as toArray, q as formatTransitions, u as toTransitionConfigArray, v as formatTransition, N as NULL_EVENT, w as evaluateGuard, x as createInvokeId, y as getDelayedTransitions, z as formatInitialTransition, B as getCandidates, C as resolveStateValue, D as getAllStateNodes, g as getStateNodes, E as createMachineSnapshot, F as isInFinalState, G as macrostep, H as transitionNode, I as resolveActionsAndContext, J as createInitEvent, K as microstep, L as getInitialStateNodes, M as toStatePath, O as isStateId, P as getStateNodeByPath, Q as getPersistedSnapshot, R as resolveReferencedActor, c as createActor, $ as $$ACTOR_TYPE } from './raise-b0a4e862.esm.js';\nimport { a as assign } from './assign-c3259787.esm.js';\n\nconst cache = new WeakMap();\nfunction memo(object, key, fn) {\n  let memoizedData = cache.get(object);\n  if (!memoizedData) {\n    memoizedData = {\n      [key]: fn()\n    };\n    cache.set(object, memoizedData);\n  } else if (!(key in memoizedData)) {\n    memoizedData[key] = fn();\n  }\n  return memoizedData[key];\n}\n\nconst EMPTY_OBJECT = {};\nconst toSerializableAction = action => {\n  if (typeof action === 'string') {\n    return {\n      type: action\n    };\n  }\n  if (typeof action === 'function') {\n    if ('resolve' in action) {\n      return {\n        type: action.type\n      };\n    }\n    return {\n      type: action.name\n    };\n  }\n  return action;\n};\nclass StateNode {\n  constructor(/** The raw config used to create the machine. */\n  config, options) {\n    this.config = config;\n    /**\n     * The relative key of the state node, which represents its location in the\n     * overall state value.\n     */\n    this.key = void 0;\n    /** The unique ID of the state node. */\n    this.id = void 0;\n    /**\n     * The type of this state node:\n     *\n     * - `'atomic'` - no child state nodes\n     * - `'compound'` - nested child state nodes (XOR)\n     * - `'parallel'` - orthogonal nested child state nodes (AND)\n     * - `'history'` - history state node\n     * - `'final'` - final state node\n     */\n    this.type = void 0;\n    /** The string path from the root machine node to this node. */\n    this.path = void 0;\n    /** The child state nodes. */\n    this.states = void 0;\n    /**\n     * The type of history on this state node. Can be:\n     *\n     * - `'shallow'` - recalls only top-level historical state value\n     * - `'deep'` - recalls historical state value at all levels\n     */\n    this.history = void 0;\n    /** The action(s) to be executed upon entering the state node. */\n    this.entry = void 0;\n    /** The action(s) to be executed upon exiting the state node. */\n    this.exit = void 0;\n    /** The parent state node. */\n    this.parent = void 0;\n    /** The root machine node. */\n    this.machine = void 0;\n    /**\n     * The meta data associated with this state node, which will be returned in\n     * State instances.\n     */\n    this.meta = void 0;\n    /**\n     * The output data sent with the \"xstate.done.state._id_\" event if this is a\n     * final state node.\n     */\n    this.output = void 0;\n    /**\n     * The order this state node appears. Corresponds to the implicit document\n     * order.\n     */\n    this.order = -1;\n    this.description = void 0;\n    this.tags = [];\n    this.transitions = void 0;\n    this.always = void 0;\n    this.parent = options._parent;\n    this.key = options._key;\n    this.machine = options._machine;\n    this.path = this.parent ? this.parent.path.concat(this.key) : [];\n    this.id = this.config.id || [this.machine.id, ...this.path].join(STATE_DELIMITER);\n    this.type = this.config.type || (this.config.states && Object.keys(this.config.states).length ? 'compound' : this.config.history ? 'history' : 'atomic');\n    this.description = this.config.description;\n    this.order = this.machine.idMap.size;\n    this.machine.idMap.set(this.id, this);\n    this.states = this.config.states ? mapValues(this.config.states, (stateConfig, key) => {\n      const stateNode = new StateNode(stateConfig, {\n        _parent: this,\n        _key: key,\n        _machine: this.machine\n      });\n      return stateNode;\n    }) : EMPTY_OBJECT;\n    if (this.type === 'compound' && !this.config.initial) {\n      throw new Error(`No initial state specified for compound state node \"#${this.id}\". Try adding { initial: \"${Object.keys(this.states)[0]}\" } to the state config.`);\n    }\n\n    // History config\n    this.history = this.config.history === true ? 'shallow' : this.config.history || false;\n    this.entry = toArray(this.config.entry).slice();\n    this.exit = toArray(this.config.exit).slice();\n    this.meta = this.config.meta;\n    this.output = this.type === 'final' || !this.parent ? this.config.output : undefined;\n    this.tags = toArray(config.tags).slice();\n  }\n\n  /** @internal */\n  _initialize() {\n    this.transitions = formatTransitions(this);\n    if (this.config.always) {\n      this.always = toTransitionConfigArray(this.config.always).map(t => formatTransition(this, NULL_EVENT, t));\n    }\n    Object.keys(this.states).forEach(key => {\n      this.states[key]._initialize();\n    });\n  }\n\n  /** The well-structured state node definition. */\n  get definition() {\n    return {\n      id: this.id,\n      key: this.key,\n      version: this.machine.version,\n      type: this.type,\n      initial: this.initial ? {\n        target: this.initial.target,\n        source: this,\n        actions: this.initial.actions.map(toSerializableAction),\n        eventType: null,\n        reenter: false,\n        toJSON: () => ({\n          target: this.initial.target.map(t => `#${t.id}`),\n          source: `#${this.id}`,\n          actions: this.initial.actions.map(toSerializableAction),\n          eventType: null\n        })\n      } : undefined,\n      history: this.history,\n      states: mapValues(this.states, state => {\n        return state.definition;\n      }),\n      on: this.on,\n      transitions: [...this.transitions.values()].flat().map(t => ({\n        ...t,\n        actions: t.actions.map(toSerializableAction)\n      })),\n      entry: this.entry.map(toSerializableAction),\n      exit: this.exit.map(toSerializableAction),\n      meta: this.meta,\n      order: this.order || -1,\n      output: this.output,\n      invoke: this.invoke,\n      description: this.description,\n      tags: this.tags\n    };\n  }\n\n  /** @internal */\n  toJSON() {\n    return this.definition;\n  }\n\n  /** The logic invoked as actors by this state node. */\n  get invoke() {\n    return memo(this, 'invoke', () => toArray(this.config.invoke).map((invokeConfig, i) => {\n      const {\n        src,\n        systemId\n      } = invokeConfig;\n      const resolvedId = invokeConfig.id ?? createInvokeId(this.id, i);\n      const sourceName = typeof src === 'string' ? src : `xstate.invoke.${createInvokeId(this.id, i)}`;\n      return {\n        ...invokeConfig,\n        src: sourceName,\n        id: resolvedId,\n        systemId: systemId,\n        toJSON() {\n          const {\n            onDone,\n            onError,\n            ...invokeDefValues\n          } = invokeConfig;\n          return {\n            ...invokeDefValues,\n            type: 'xstate.invoke',\n            src: sourceName,\n            id: resolvedId\n          };\n        }\n      };\n    }));\n  }\n\n  /** The mapping of events to transitions. */\n  get on() {\n    return memo(this, 'on', () => {\n      const transitions = this.transitions;\n      return [...transitions].flatMap(([descriptor, t]) => t.map(t => [descriptor, t])).reduce((map, [descriptor, transition]) => {\n        map[descriptor] = map[descriptor] || [];\n        map[descriptor].push(transition);\n        return map;\n      }, {});\n    });\n  }\n  get after() {\n    return memo(this, 'delayedTransitions', () => getDelayedTransitions(this));\n  }\n  get initial() {\n    return memo(this, 'initial', () => formatInitialTransition(this, this.config.initial));\n  }\n\n  /** @internal */\n  next(snapshot, event) {\n    const eventType = event.type;\n    const actions = [];\n    let selectedTransition;\n    const candidates = memo(this, `candidates-${eventType}`, () => getCandidates(this, eventType));\n    for (const candidate of candidates) {\n      const {\n        guard\n      } = candidate;\n      const resolvedContext = snapshot.context;\n      let guardPassed = false;\n      try {\n        guardPassed = !guard || evaluateGuard(guard, resolvedContext, event, snapshot);\n      } catch (err) {\n        const guardType = typeof guard === 'string' ? guard : typeof guard === 'object' ? guard.type : undefined;\n        throw new Error(`Unable to evaluate guard ${guardType ? `'${guardType}' ` : ''}in transition for event '${eventType}' in state node '${this.id}':\\n${err.message}`);\n      }\n      if (guardPassed) {\n        actions.push(...candidate.actions);\n        selectedTransition = candidate;\n        break;\n      }\n    }\n    return selectedTransition ? [selectedTransition] : undefined;\n  }\n\n  /** All the event types accepted by this state node and its descendants. */\n  get events() {\n    return memo(this, 'events', () => {\n      const {\n        states\n      } = this;\n      const events = new Set(this.ownEvents);\n      if (states) {\n        for (const stateId of Object.keys(states)) {\n          const state = states[stateId];\n          if (state.states) {\n            for (const event of state.events) {\n              events.add(`${event}`);\n            }\n          }\n        }\n      }\n      return Array.from(events);\n    });\n  }\n\n  /**\n   * All the events that have transitions directly from this state node.\n   *\n   * Excludes any inert events.\n   */\n  get ownEvents() {\n    const events = new Set([...this.transitions.keys()].filter(descriptor => {\n      return this.transitions.get(descriptor).some(transition => !(!transition.target && !transition.actions.length && !transition.reenter));\n    }));\n    return Array.from(events);\n  }\n}\n\nconst STATE_IDENTIFIER = '#';\nclass StateMachine {\n  constructor(/** The raw config used to create the machine. */\n  config, implementations) {\n    this.config = config;\n    /** The machine's own version. */\n    this.version = void 0;\n    this.schemas = void 0;\n    this.implementations = void 0;\n    /** @internal */\n    this.__xstatenode = true;\n    /** @internal */\n    this.idMap = new Map();\n    this.root = void 0;\n    this.id = void 0;\n    this.states = void 0;\n    this.events = void 0;\n    this.id = config.id || '(machine)';\n    this.implementations = {\n      actors: implementations?.actors ?? {},\n      actions: implementations?.actions ?? {},\n      delays: implementations?.delays ?? {},\n      guards: implementations?.guards ?? {}\n    };\n    this.version = this.config.version;\n    this.schemas = this.config.schemas;\n    this.transition = this.transition.bind(this);\n    this.getInitialSnapshot = this.getInitialSnapshot.bind(this);\n    this.getPersistedSnapshot = this.getPersistedSnapshot.bind(this);\n    this.restoreSnapshot = this.restoreSnapshot.bind(this);\n    this.start = this.start.bind(this);\n    this.root = new StateNode(config, {\n      _key: this.id,\n      _machine: this\n    });\n    this.root._initialize();\n    this.states = this.root.states; // TODO: remove!\n    this.events = this.root.events;\n  }\n\n  /**\n   * Clones this state machine with the provided implementations.\n   *\n   * @param implementations Options (`actions`, `guards`, `actors`, `delays`) to\n   *   recursively merge with the existing options.\n   * @returns A new `StateMachine` instance with the provided implementations.\n   */\n  provide(implementations) {\n    const {\n      actions,\n      guards,\n      actors,\n      delays\n    } = this.implementations;\n    return new StateMachine(this.config, {\n      actions: {\n        ...actions,\n        ...implementations.actions\n      },\n      guards: {\n        ...guards,\n        ...implementations.guards\n      },\n      actors: {\n        ...actors,\n        ...implementations.actors\n      },\n      delays: {\n        ...delays,\n        ...implementations.delays\n      }\n    });\n  }\n  resolveState(config) {\n    const resolvedStateValue = resolveStateValue(this.root, config.value);\n    const nodeSet = getAllStateNodes(getStateNodes(this.root, resolvedStateValue));\n    return createMachineSnapshot({\n      _nodes: [...nodeSet],\n      context: config.context || {},\n      children: {},\n      status: isInFinalState(nodeSet, this.root) ? 'done' : config.status || 'active',\n      output: config.output,\n      error: config.error,\n      historyValue: config.historyValue\n    }, this);\n  }\n\n  /**\n   * Determines the next snapshot given the current `snapshot` and received\n   * `event`. Calculates a full macrostep from all microsteps.\n   *\n   * @param snapshot The current snapshot\n   * @param event The received event\n   */\n  transition(snapshot, event, actorScope) {\n    return macrostep(snapshot, event, actorScope, []).snapshot;\n  }\n\n  /**\n   * Determines the next state given the current `state` and `event`. Calculates\n   * a microstep.\n   *\n   * @param state The current state\n   * @param event The received event\n   */\n  microstep(snapshot, event, actorScope) {\n    return macrostep(snapshot, event, actorScope, []).microstates;\n  }\n  getTransitionData(snapshot, event) {\n    return transitionNode(this.root, snapshot.value, snapshot, event) || [];\n  }\n\n  /**\n   * The initial state _before_ evaluating any microsteps. This \"pre-initial\"\n   * state is provided to initial actions executed in the initial state.\n   */\n  getPreInitialState(actorScope, initEvent, internalQueue) {\n    const {\n      context\n    } = this.config;\n    const preInitial = createMachineSnapshot({\n      context: typeof context !== 'function' && context ? context : {},\n      _nodes: [this.root],\n      children: {},\n      status: 'active'\n    }, this);\n    if (typeof context === 'function') {\n      const assignment = ({\n        spawn,\n        event,\n        self\n      }) => context({\n        spawn,\n        input: event.input,\n        self\n      });\n      return resolveActionsAndContext(preInitial, initEvent, actorScope, [assign(assignment)], internalQueue, undefined);\n    }\n    return preInitial;\n  }\n\n  /**\n   * Returns the initial `State` instance, with reference to `self` as an\n   * `ActorRef`.\n   */\n  getInitialSnapshot(actorScope, input) {\n    const initEvent = createInitEvent(input); // TODO: fix;\n    const internalQueue = [];\n    const preInitialState = this.getPreInitialState(actorScope, initEvent, internalQueue);\n    const nextState = microstep([{\n      target: [...getInitialStateNodes(this.root)],\n      source: this.root,\n      reenter: true,\n      actions: [],\n      eventType: null,\n      toJSON: null // TODO: fix\n    }], preInitialState, actorScope, initEvent, true, internalQueue);\n    const {\n      snapshot: macroState\n    } = macrostep(nextState, initEvent, actorScope, internalQueue);\n    return macroState;\n  }\n  start(snapshot) {\n    Object.values(snapshot.children).forEach(child => {\n      if (child.getSnapshot().status === 'active') {\n        child.start();\n      }\n    });\n  }\n  getStateNodeById(stateId) {\n    const fullPath = toStatePath(stateId);\n    const relativePath = fullPath.slice(1);\n    const resolvedStateId = isStateId(fullPath[0]) ? fullPath[0].slice(STATE_IDENTIFIER.length) : fullPath[0];\n    const stateNode = this.idMap.get(resolvedStateId);\n    if (!stateNode) {\n      throw new Error(`Child state node '#${resolvedStateId}' does not exist on machine '${this.id}'`);\n    }\n    return getStateNodeByPath(stateNode, relativePath);\n  }\n  get definition() {\n    return this.root.definition;\n  }\n  toJSON() {\n    return this.definition;\n  }\n  getPersistedSnapshot(snapshot, options) {\n    return getPersistedSnapshot(snapshot, options);\n  }\n  restoreSnapshot(snapshot, _actorScope) {\n    const children = {};\n    const snapshotChildren = snapshot.children;\n    Object.keys(snapshotChildren).forEach(actorId => {\n      const actorData = snapshotChildren[actorId];\n      const childState = actorData.snapshot;\n      const src = actorData.src;\n      const logic = typeof src === 'string' ? resolveReferencedActor(this, src) : src;\n      if (!logic) {\n        return;\n      }\n      const actorRef = createActor(logic, {\n        id: actorId,\n        parent: _actorScope.self,\n        syncSnapshot: actorData.syncSnapshot,\n        snapshot: childState,\n        src,\n        systemId: actorData.systemId\n      });\n      children[actorId] = actorRef;\n    });\n    function resolveHistoryReferencedState(root, referenced) {\n      if (referenced instanceof StateNode) {\n        return referenced;\n      }\n      try {\n        return root.machine.getStateNodeById(referenced.id);\n      } catch {\n      }\n    }\n    function reviveHistoryValue(root, historyValue) {\n      if (!historyValue || typeof historyValue !== 'object') {\n        return {};\n      }\n      const revived = {};\n      for (const key in historyValue) {\n        const arr = historyValue[key];\n        for (const item of arr) {\n          const resolved = resolveHistoryReferencedState(root, item);\n          if (!resolved) {\n            continue;\n          }\n          revived[key] ??= [];\n          revived[key].push(resolved);\n        }\n      }\n      return revived;\n    }\n    const revivedHistoryValue = reviveHistoryValue(this.root, snapshot.historyValue);\n    const restoredSnapshot = createMachineSnapshot({\n      ...snapshot,\n      children,\n      _nodes: Array.from(getAllStateNodes(getStateNodes(this.root, snapshot.value))),\n      historyValue: revivedHistoryValue\n    }, this);\n    const seen = new Set();\n    function reviveContext(contextPart, children) {\n      if (seen.has(contextPart)) {\n        return;\n      }\n      seen.add(contextPart);\n      for (const key in contextPart) {\n        const value = contextPart[key];\n        if (value && typeof value === 'object') {\n          if ('xstate$$type' in value && value.xstate$$type === $$ACTOR_TYPE) {\n            contextPart[key] = children[value.id];\n            continue;\n          }\n          reviveContext(value, children);\n        }\n      }\n    }\n    reviveContext(restoredSnapshot.context, children);\n    return restoredSnapshot;\n  }\n}\n\nexport { StateMachine as S, StateNode as a };\n","import { T as XSTATE_ERROR, U as createErrorActorEvent, w as evaluateGuard, f as cancel, r as raise, h as spawnChild, k as stopChild } from './raise-b0a4e862.esm.js';\nimport { a as assign } from './assign-c3259787.esm.js';\n\nfunction resolveEmit(_, snapshot, args, actionParams, {\n  event: eventOrExpr\n}) {\n  const resolvedEvent = typeof eventOrExpr === 'function' ? eventOrExpr(args, actionParams) : eventOrExpr;\n  return [snapshot, {\n    event: resolvedEvent\n  }, undefined];\n}\nfunction executeEmit(actorScope, {\n  event\n}) {\n  actorScope.defer(() => actorScope.emit(event));\n}\n/**\n * Emits an event to event handlers registered on the actor via `actor.on(event,\n * handler)`.\n *\n * @example\n *\n * ```ts\n * import { emit } from 'xstate';\n *\n * const machine = createMachine({\n *   // ...\n *   on: {\n *     something: {\n *       actions: emit({\n *         type: 'emitted',\n *         some: 'data'\n *       })\n *     }\n *   }\n *   // ...\n * });\n *\n * const actor = createActor(machine).start();\n *\n * actor.on('emitted', (event) => {\n *   console.log(event);\n * });\n *\n * actor.send({ type: 'something' });\n * // logs:\n * // {\n * //   type: 'emitted',\n * //   some: 'data'\n * // }\n * ```\n */\nfunction emit(/** The event to emit, or an expression that returns an event to emit. */\neventOrExpr) {\n  function emit(_args, _params) {\n  }\n  emit.type = 'xstate.emit';\n  emit.event = eventOrExpr;\n  emit.resolve = resolveEmit;\n  emit.execute = executeEmit;\n  return emit;\n}\n\n// this is needed to make JSDoc `@link` work properly\n\n/**\n * @remarks\n * `T | unknown` reduces to `unknown` and that can be problematic when it comes\n * to contextual typing. It especially is a problem when the union has a\n * function member, like here:\n *\n * ```ts\n * declare function test(\n *   cbOrVal: ((arg: number) => unknown) | unknown\n * ): void;\n * test((arg) => {}); // oops, implicit any\n * ```\n *\n * This type can be used to avoid this problem. This union represents the same\n * value space as `unknown`.\n */\n\n// https://github.com/microsoft/TypeScript/issues/23182#issuecomment-379091887\n\n// @TODO: we can't use native `NoInfer` as we need those:\n// https://github.com/microsoft/TypeScript/pull/61092\n// https://github.com/microsoft/TypeScript/pull/61077\n// but even with those fixes native NoInfer still doesn't work - further issues have to be reproduced and fixed\n\n/** @deprecated Use the built-in `NoInfer` type instead */\n\n/** The full definition of an event, with a string `type`. */\n\n/**\n * The string or object representing the state value relative to the parent\n * state node.\n *\n * @remarks\n * - For a child atomic state node, this is a string, e.g., `\"pending\"`.\n * - For complex state nodes, this is an object, e.g., `{ success:\n *   \"someChildState\" }`.\n */\n\n/** @deprecated Use `AnyMachineSnapshot` instead */\n\n// TODO: possibly refactor this somehow, use even a simpler type, and maybe even make `machine.options` private or something\n/** @ignore */\n\nlet SpecialTargets = /*#__PURE__*/function (SpecialTargets) {\n  SpecialTargets[\"Parent\"] = \"#_parent\";\n  SpecialTargets[\"Internal\"] = \"#_internal\";\n  return SpecialTargets;\n}({});\n\n/** @deprecated Use `AnyActor` instead. */\n\n// Based on RxJS types\n\n// TODO: in v6, this should only accept AnyActorLogic, like ActorRefFromLogic\n\n/** @deprecated Use `Actor<T>` instead. */\n\n/**\n * Represents logic which can be used by an actor.\n *\n * @template TSnapshot - The type of the snapshot.\n * @template TEvent - The type of the event object.\n * @template TInput - The type of the input.\n * @template TSystem - The type of the actor system.\n */\n\n/** @deprecated */\n\n// TODO: cover all that can be actually returned\n\nfunction resolveSendTo(actorScope, snapshot, args, actionParams, {\n  to,\n  event: eventOrExpr,\n  id,\n  delay\n}, extra) {\n  const delaysMap = snapshot.machine.implementations.delays;\n  if (typeof eventOrExpr === 'string') {\n    throw new Error(\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    `Only event objects may be used with sendTo; use sendTo({ type: \"${eventOrExpr}\" }) instead`);\n  }\n  const resolvedEvent = typeof eventOrExpr === 'function' ? eventOrExpr(args, actionParams) : eventOrExpr;\n  let resolvedDelay;\n  if (typeof delay === 'string') {\n    const configDelay = delaysMap && delaysMap[delay];\n    resolvedDelay = typeof configDelay === 'function' ? configDelay(args, actionParams) : configDelay;\n  } else {\n    resolvedDelay = typeof delay === 'function' ? delay(args, actionParams) : delay;\n  }\n  const resolvedTarget = typeof to === 'function' ? to(args, actionParams) : to;\n  let targetActorRef;\n  if (typeof resolvedTarget === 'string') {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n    if (resolvedTarget === SpecialTargets.Parent) {\n      targetActorRef = actorScope.self._parent;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n    else if (resolvedTarget === SpecialTargets.Internal) {\n      targetActorRef = actorScope.self;\n    } else if (resolvedTarget.startsWith('#_')) {\n      // SCXML compatibility: https://www.w3.org/TR/scxml/#SCXMLEventProcessor\n      // #_invokeid. If the target is the special term '#_invokeid', where invokeid is the invokeid of an SCXML session that the sending session has created by <invoke>, the Processor must add the event to the external queue of that session.\n      targetActorRef = snapshot.children[resolvedTarget.slice(2)];\n    } else {\n      targetActorRef = extra.deferredActorIds?.includes(resolvedTarget) ? resolvedTarget : snapshot.children[resolvedTarget];\n    }\n    if (!targetActorRef) {\n      throw new Error(`Unable to send event to actor '${resolvedTarget}' from machine '${snapshot.machine.id}'.`);\n    }\n  } else {\n    targetActorRef = resolvedTarget || actorScope.self;\n  }\n  return [snapshot, {\n    to: targetActorRef,\n    targetId: typeof resolvedTarget === 'string' ? resolvedTarget : undefined,\n    event: resolvedEvent,\n    id,\n    delay: resolvedDelay\n  }, undefined];\n}\nfunction retryResolveSendTo(_, snapshot, params) {\n  if (typeof params.to === 'string') {\n    params.to = snapshot.children[params.to];\n  }\n}\nfunction executeSendTo(actorScope, params) {\n  // this forms an outgoing events queue\n  // thanks to that the recipient actors are able to read the *updated* snapshot value of the sender\n  actorScope.defer(() => {\n    const {\n      to,\n      event,\n      delay,\n      id\n    } = params;\n    if (typeof delay === 'number') {\n      actorScope.system.scheduler.schedule(actorScope.self, to, event, delay, id);\n      return;\n    }\n    actorScope.system._relay(actorScope.self,\n    // at this point, in a deferred task, it should already be mutated by retryResolveSendTo\n    // if it initially started as a string\n    to, event.type === XSTATE_ERROR ? createErrorActorEvent(actorScope.self.id, event.data) : event);\n  });\n}\n/**\n * Sends an event to an actor.\n *\n * @param actor The `ActorRef` to send the event to.\n * @param event The event to send, or an expression that evaluates to the event\n *   to send\n * @param options Send action options\n *\n *   - `id` - The unique send event identifier (used with `cancel()`).\n *   - `delay` - The number of milliseconds to delay the sending of the event.\n */\nfunction sendTo(to, eventOrExpr, options) {\n  function sendTo(_args, _params) {\n  }\n  sendTo.type = 'xstate.sendTo';\n  sendTo.to = to;\n  sendTo.event = eventOrExpr;\n  sendTo.id = options?.id;\n  sendTo.delay = options?.delay;\n  sendTo.resolve = resolveSendTo;\n  sendTo.retryResolve = retryResolveSendTo;\n  sendTo.execute = executeSendTo;\n  return sendTo;\n}\n\n/**\n * Sends an event to this machine's parent.\n *\n * @param event The event to send to the parent machine.\n * @param options Options to pass into the send event.\n */\nfunction sendParent(event, options) {\n  return sendTo(SpecialTargets.Parent, event, options);\n}\n/**\n * Forwards (sends) an event to the `target` actor.\n *\n * @param target The target actor to forward the event to.\n * @param options Options to pass into the send action creator.\n */\nfunction forwardTo(target, options) {\n  return sendTo(target, ({\n    event\n  }) => event, options);\n}\n\nfunction resolveEnqueueActions(actorScope, snapshot, args, actionParams, {\n  collect\n}) {\n  const actions = [];\n  const enqueue = function enqueue(action) {\n    actions.push(action);\n  };\n  enqueue.assign = (...args) => {\n    actions.push(assign(...args));\n  };\n  enqueue.cancel = (...args) => {\n    actions.push(cancel(...args));\n  };\n  enqueue.raise = (...args) => {\n    // for some reason it fails to infer `TDelay` from `...args` here and picks its default (`never`)\n    // then it fails to typecheck that because `...args` use `string` in place of `TDelay`\n    actions.push(raise(...args));\n  };\n  enqueue.sendTo = (...args) => {\n    // for some reason it fails to infer `TDelay` from `...args` here and picks its default (`never`)\n    // then it fails to typecheck that because `...args` use `string` in place of `TDelay\n    actions.push(sendTo(...args));\n  };\n  enqueue.sendParent = (...args) => {\n    actions.push(sendParent(...args));\n  };\n  enqueue.spawnChild = (...args) => {\n    actions.push(spawnChild(...args));\n  };\n  enqueue.stopChild = (...args) => {\n    actions.push(stopChild(...args));\n  };\n  enqueue.emit = (...args) => {\n    actions.push(emit(...args));\n  };\n  collect({\n    context: args.context,\n    event: args.event,\n    enqueue,\n    check: guard => evaluateGuard(guard, snapshot.context, args.event, snapshot),\n    self: actorScope.self,\n    system: actorScope.system\n  }, actionParams);\n  return [snapshot, undefined, actions];\n}\n/**\n * Creates an action object that will execute actions that are queued by the\n * `enqueue(action)` function.\n *\n * @example\n *\n * ```ts\n * import { createMachine, enqueueActions } from 'xstate';\n *\n * const machine = createMachine({\n *   entry: enqueueActions(({ enqueue, check }) => {\n *     enqueue.assign({ count: 0 });\n *\n *     if (check('someGuard')) {\n *       enqueue.assign({ count: 1 });\n *     }\n *\n *     enqueue('someAction');\n *   })\n * });\n * ```\n */\nfunction enqueueActions(collect) {\n  function enqueueActions(_args, _params) {\n  }\n  enqueueActions.type = 'xstate.enqueueActions';\n  enqueueActions.collect = collect;\n  enqueueActions.resolve = resolveEnqueueActions;\n  return enqueueActions;\n}\n\nfunction resolveLog(_, snapshot, actionArgs, actionParams, {\n  value,\n  label\n}) {\n  return [snapshot, {\n    value: typeof value === 'function' ? value(actionArgs, actionParams) : value,\n    label\n  }, undefined];\n}\nfunction executeLog({\n  logger\n}, {\n  value,\n  label\n}) {\n  if (label) {\n    logger(label, value);\n  } else {\n    logger(value);\n  }\n}\n/**\n * @param expr The expression function to evaluate which will be logged. Takes\n *   in 2 arguments:\n *\n *   - `ctx` - the current state context\n *   - `event` - the event that caused this action to be executed.\n *\n * @param label The label to give to the logged expression.\n */\nfunction log(value = ({\n  context,\n  event\n}) => ({\n  context,\n  event\n}), label) {\n  function log(_args, _params) {\n  }\n  log.type = 'xstate.log';\n  log.value = value;\n  log.label = label;\n  log.resolve = resolveLog;\n  log.execute = executeLog;\n  return log;\n}\n\nexport { SpecialTargets as S, enqueueActions as a, sendTo as b, emit as e, forwardTo as f, log as l, sendParent as s };\n","export { createEmptyActor, fromCallback, fromEventObservable, fromObservable, fromPromise, fromTransition } from '../actors/dist/xstate-actors.esm.js';\nimport { t as toArray, c as createActor } from './raise-b0a4e862.esm.js';\nexport { A as Actor, d as __unsafe_getAllOwnEventDescriptors, a as and, f as cancel, c as createActor, g as getStateNodes, i as interpret, b as isMachineSnapshot, m as matchesState, n as not, o as or, p as pathToStateValue, r as raise, h as spawnChild, s as stateIn, j as stop, k as stopChild, e as toObserver } from './raise-b0a4e862.esm.js';\nimport { S as StateMachine } from './StateMachine-c88ea5dd.esm.js';\nexport { S as StateMachine, a as StateNode } from './StateMachine-c88ea5dd.esm.js';\nexport { S as SpecialTargets, e as emit, a as enqueueActions, f as forwardTo, l as log, s as sendParent, b as sendTo } from './log-1c257a58.esm.js';\nexport { a as assign } from './assign-c3259787.esm.js';\nimport '../dev/dist/xstate-dev.esm.js';\n\n/**\n * Asserts that the given event object is of the specified type or types. Throws\n * an error if the event object is not of the specified types.\n *\n * @example\n *\n * ```ts\n * // ...\n * entry: ({ event }) => {\n *   assertEvent(event, 'doNothing');\n *   // event is { type: 'doNothing' }\n * },\n * // ...\n * exit: ({ event }) => {\n *   assertEvent(event, 'greet');\n *   // event is { type: 'greet'; message: string }\n *\n *   assertEvent(event, ['greet', 'notify']);\n *   // event is { type: 'greet'; message: string }\n *   // or { type: 'notify'; message: string; level: 'info' | 'error' }\n * },\n * ```\n */\nfunction assertEvent(event, type) {\n  const types = toArray(type);\n  if (!types.includes(event.type)) {\n    const typesText = types.length === 1 ? `type \"${types[0]}\"` : `one of types \"${types.join('\", \"')}\"`;\n    throw new Error(`Expected event ${JSON.stringify(event)} to have ${typesText}`);\n  }\n}\n\n/**\n * Creates a state machine (statechart) with the given configuration.\n *\n * The state machine represents the pure logic of a state machine actor.\n *\n * @example\n *\n * ```ts\n * import { createMachine } from 'xstate';\n *\n * const lightMachine = createMachine({\n *   id: 'light',\n *   initial: 'green',\n *   states: {\n *     green: {\n *       on: {\n *         TIMER: { target: 'yellow' }\n *       }\n *     },\n *     yellow: {\n *       on: {\n *         TIMER: { target: 'red' }\n *       }\n *     },\n *     red: {\n *       on: {\n *         TIMER: { target: 'green' }\n *       }\n *     }\n *   }\n * });\n *\n * const lightActor = createActor(lightMachine);\n * lightActor.start();\n *\n * lightActor.send({ type: 'TIMER' });\n * ```\n *\n * @param config The state machine configuration.\n * @param options DEPRECATED: use `setup({ ... })` or `machine.provide({ ... })`\n *   to provide machine implementations instead.\n */\nfunction createMachine(config, implementations) {\n  return new StateMachine(config, implementations);\n}\n\n/** @internal */\nfunction createInertActorScope(actorLogic) {\n  const self = createActor(actorLogic);\n  const inertActorScope = {\n    self,\n    defer: () => {},\n    id: '',\n    logger: () => {},\n    sessionId: '',\n    stopChild: () => {},\n    system: self.system,\n    emit: () => {},\n    actionExecutor: () => {}\n  };\n  return inertActorScope;\n}\n\n/** @deprecated Use `initialTransition(…)` instead. */\nfunction getInitialSnapshot(actorLogic, ...[input]) {\n  const actorScope = createInertActorScope(actorLogic);\n  return actorLogic.getInitialSnapshot(actorScope, input);\n}\n\n/**\n * Determines the next snapshot for the given `actorLogic` based on the given\n * `snapshot` and `event`.\n *\n * If the `snapshot` is `undefined`, the initial snapshot of the `actorLogic` is\n * used.\n *\n * @deprecated Use `transition(…)` instead.\n * @example\n *\n * ```ts\n * import { getNextSnapshot } from 'xstate';\n * import { trafficLightMachine } from './trafficLightMachine.ts';\n *\n * const nextSnapshot = getNextSnapshot(\n *   trafficLightMachine, // actor logic\n *   undefined, // snapshot (or initial state if undefined)\n *   { type: 'TIMER' }\n * ); // event object\n *\n * console.log(nextSnapshot.value);\n * // => 'yellow'\n *\n * const nextSnapshot2 = getNextSnapshot(\n *   trafficLightMachine, // actor logic\n *   nextSnapshot, // snapshot\n *   { type: 'TIMER' }\n * ); // event object\n *\n * console.log(nextSnapshot2.value);\n * // =>'red'\n * ```\n */\nfunction getNextSnapshot(actorLogic, snapshot, event) {\n  const inertActorScope = createInertActorScope(actorLogic);\n  inertActorScope.self._snapshot = snapshot;\n  return actorLogic.transition(snapshot, event, inertActorScope);\n}\n\n// at the moment we allow extra actors - ones that are not specified by `children`\n// this could be reconsidered in the future\n\nfunction setup({\n  schemas,\n  actors,\n  actions,\n  guards,\n  delays\n}) {\n  return {\n    createMachine: config => createMachine({\n      ...config,\n      schemas\n    }, {\n      actors,\n      actions,\n      guards,\n      delays\n    })\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nclass SimulatedClock {\n  constructor() {\n    this.timeouts = new Map();\n    this._now = 0;\n    this._id = 0;\n    this._flushing = false;\n    this._flushingInvalidated = false;\n  }\n  now() {\n    return this._now;\n  }\n  getId() {\n    return this._id++;\n  }\n  setTimeout(fn, timeout) {\n    this._flushingInvalidated = this._flushing;\n    const id = this.getId();\n    this.timeouts.set(id, {\n      start: this.now(),\n      timeout,\n      fn\n    });\n    return id;\n  }\n  clearTimeout(id) {\n    this._flushingInvalidated = this._flushing;\n    this.timeouts.delete(id);\n  }\n  set(time) {\n    if (this._now > time) {\n      throw new Error('Unable to travel back in time');\n    }\n    this._now = time;\n    this.flushTimeouts();\n  }\n  flushTimeouts() {\n    if (this._flushing) {\n      this._flushingInvalidated = true;\n      return;\n    }\n    this._flushing = true;\n    const sorted = [...this.timeouts].sort(([_idA, timeoutA], [_idB, timeoutB]) => {\n      const endA = timeoutA.start + timeoutA.timeout;\n      const endB = timeoutB.start + timeoutB.timeout;\n      return endB > endA ? -1 : 1;\n    });\n    for (const [id, timeout] of sorted) {\n      if (this._flushingInvalidated) {\n        this._flushingInvalidated = false;\n        this._flushing = false;\n        this.flushTimeouts();\n        return;\n      }\n      if (this.now() - timeout.start >= timeout.timeout) {\n        this.timeouts.delete(id);\n        timeout.fn.call(null);\n      }\n    }\n    this._flushing = false;\n  }\n  increment(ms) {\n    this._now += ms;\n    this.flushTimeouts();\n  }\n}\n\n/**\n * Returns a promise that resolves to the `output` of the actor when it is done.\n *\n * @example\n *\n * ```ts\n * const machine = createMachine({\n *   // ...\n *   output: {\n *     count: 42\n *   }\n * });\n *\n * const actor = createActor(machine);\n *\n * actor.start();\n *\n * const output = await toPromise(actor);\n *\n * console.log(output);\n * // logs { count: 42 }\n * ```\n */\nfunction toPromise(actor) {\n  return new Promise((resolve, reject) => {\n    actor.subscribe({\n      complete: () => {\n        resolve(actor.getSnapshot().output);\n      },\n      error: reject\n    });\n  });\n}\n\n/**\n * Given actor `logic`, a `snapshot`, and an `event`, returns a tuple of the\n * `nextSnapshot` and `actions` to execute.\n *\n * This is a pure function that does not execute `actions`.\n */\nfunction transition(logic, snapshot, event) {\n  const executableActions = [];\n  const actorScope = createInertActorScope(logic);\n  actorScope.actionExecutor = action => {\n    executableActions.push(action);\n  };\n  const nextSnapshot = logic.transition(snapshot, event, actorScope);\n  return [nextSnapshot, executableActions];\n}\n\n/**\n * Given actor `logic` and optional `input`, returns a tuple of the\n * `nextSnapshot` and `actions` to execute from the initial transition (no\n * previous state).\n *\n * This is a pure function that does not execute `actions`.\n */\nfunction initialTransition(logic, ...[input]) {\n  const executableActions = [];\n  const actorScope = createInertActorScope(logic);\n  actorScope.actionExecutor = action => {\n    executableActions.push(action);\n  };\n  const nextSnapshot = logic.getInitialSnapshot(actorScope, input);\n  return [nextSnapshot, executableActions];\n}\n\nconst defaultWaitForOptions = {\n  timeout: Infinity // much more than 10 seconds\n};\n\n/**\n * Subscribes to an actor ref and waits for its emitted value to satisfy a\n * predicate, and then resolves with that value. Will throw if the desired state\n * is not reached after an optional timeout. (defaults to Infinity).\n *\n * @example\n *\n * ```js\n * const state = await waitFor(someService, (state) => {\n *   return state.hasTag('loaded');\n * });\n *\n * state.hasTag('loaded'); // true\n * ```\n *\n * @param actorRef The actor ref to subscribe to\n * @param predicate Determines if a value matches the condition to wait for\n * @param options\n * @returns A promise that eventually resolves to the emitted value that matches\n *   the condition\n */\nfunction waitFor(actorRef, predicate, options) {\n  const resolvedOptions = {\n    ...defaultWaitForOptions,\n    ...options\n  };\n  return new Promise((res, rej) => {\n    const {\n      signal\n    } = resolvedOptions;\n    if (signal?.aborted) {\n      // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n      rej(signal.reason);\n      return;\n    }\n    let done = false;\n    const handle = resolvedOptions.timeout === Infinity ? undefined : setTimeout(() => {\n      dispose();\n      rej(new Error(`Timeout of ${resolvedOptions.timeout} ms exceeded`));\n    }, resolvedOptions.timeout);\n    const dispose = () => {\n      clearTimeout(handle);\n      done = true;\n      sub?.unsubscribe();\n      if (abortListener) {\n        signal.removeEventListener('abort', abortListener);\n      }\n    };\n    function checkEmitted(emitted) {\n      if (predicate(emitted)) {\n        dispose();\n        res(emitted);\n      }\n    }\n\n    /**\n     * If the `signal` option is provided, this will be the listener for its\n     * `abort` event\n     */\n    let abortListener;\n    // eslint-disable-next-line prefer-const\n    let sub; // avoid TDZ when disposing synchronously\n\n    // See if the current snapshot already matches the predicate\n    checkEmitted(actorRef.getSnapshot());\n    if (done) {\n      return;\n    }\n\n    // only define the `abortListener` if the `signal` option is provided\n    if (signal) {\n      abortListener = () => {\n        dispose();\n        // XState does not \"own\" the signal, so we should reject with its reason (if any)\n        // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n        rej(signal.reason);\n      };\n      signal.addEventListener('abort', abortListener);\n    }\n    sub = actorRef.subscribe({\n      next: checkEmitted,\n      error: err => {\n        dispose();\n        // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n        rej(err);\n      },\n      complete: () => {\n        dispose();\n        rej(new Error(`Actor terminated without satisfying predicate`));\n      }\n    });\n    if (done) {\n      sub.unsubscribe();\n    }\n  });\n}\n\nexport { SimulatedClock, assertEvent, createMachine, getInitialSnapshot, getNextSnapshot, initialTransition, setup, toPromise, transition, waitFor };\n","import * as vscode from 'vscode';\nimport { assign, setup } from 'xstate';\nimport { tokenizeForMachine } from './tokenizer';\n\nexport interface FormatterContext {\n  input: string;\n  position: number;\n  line: number;\n  column: number;\n  indentLevel: number;\n  exprDepth: number;\n  edits: vscode.TextEdit[];\n  formattedEdits: vscode.TextEdit[];\n  currentIndent: string;\n  indentSize: number;\n  preserveNewlines: boolean;\n  inTemplate: 'html' | 'css' | null;\n  templateStart: number;\n  templateIndent: number;\n}\n\nexport type FormatterEvent =\n  | { type: 'START_FORMATTING'; input: string; options: vscode.FormattingOptions }\n  | { type: 'CHAR'; char: string }\n  | { type: 'BACKTICK' }\n  | { type: 'DOLLAR_LBRACE' }\n  | { type: 'LBRACE' }\n  | { type: 'RBRACE' }\n  | { type: 'NEWLINE' }\n  | { type: 'TEMPLATE_TAG'; tag: 'html' | 'css' }\n  | { type: 'EOF' };\n\nexport const formatterMachine = setup({\n  types: {\n    context: {} as FormatterContext,\n    events: {} as FormatterEvent,\n  },\n  actions: {\n    advancePosition: assign({\n      position: ({ context }) => context.position + 1,\n      column: ({ context }) => context.column + 1,\n    }),\n    incrementLine: assign({\n      line: ({ context }) => context.line + 1,\n      column: 0,\n    }),\n    recordTemplateStart: assign({\n      templateStart: ({ context }) => context.position,\n      templateIndent: ({ context }) => context.indentLevel + 1,\n    }),\n    enterTemplate: assign({\n      indentLevel: ({ context }) => context.templateIndent,\n    }),\n    exitTemplate: assign({\n      indentLevel: ({ context }) => Math.max(0, context.indentLevel - 1),\n    }),\n    resetTemplate: assign({\n      inTemplate: null,\n      templateStart: 0,\n      templateIndent: 0,\n    }),\n    enterInterpolation: assign({\n      exprDepth: 1,\n    }),\n    incrementExprDepth: assign({\n      exprDepth: ({ context }) => context.exprDepth + 1,\n    }),\n    decrementExprDepth: assign({\n      exprDepth: ({ context }) => Math.max(0, context.exprDepth - 1),\n    }),\n    addNewlineAfterBacktick: assign({\n      edits: ({ context }) => {\n        const position = new vscode.Position(context.line, context.column + 1);\n        const indent = '  '.repeat(context.templateIndent);\n        const edit = vscode.TextEdit.insert(position, `\\n${indent}`);\n        return [...context.edits, edit];\n      },\n    }),\n    addNewlineBeforeBacktick: assign({\n      edits: ({ context }) => {\n        const position = new vscode.Position(context.line, context.column);\n        const indent = '  '.repeat(context.templateIndent - 1);\n        const edit = vscode.TextEdit.insert(position, `\\n${indent}`);\n        return [...context.edits, edit];\n      },\n    }),\n    addTemplateIndent: assign({\n      edits: ({ context }) => {\n        // Add proper indentation for template content\n        const position = new vscode.Position(context.line, 0);\n        const indent = '  '.repeat(context.indentLevel);\n        const range = new vscode.Range(position, position.translate(0, context.column));\n        const edit = vscode.TextEdit.replace(range, indent);\n        return [...context.edits, edit];\n      },\n    }),\n    setTemplateTag: assign({\n      inTemplate: ({ event }) => {\n        if (event.type === 'TEMPLATE_TAG') {\n          return event.tag;\n        }\n        return null;\n      },\n    }),\n    initializeFormatting: assign({\n      input: ({ event }) => {\n        if (event.type === 'START_FORMATTING') {\n          // Initialize with the input text that will be formatted\n          return event.input || '';\n        }\n        return '';\n      },\n      indentSize: ({ event }) => {\n        if (event.type === 'START_FORMATTING') {\n          return event.options.insertSpaces ? event.options.tabSize : 4;\n        }\n        return 2;\n      },\n      edits: [],\n      formattedEdits: [],\n    }),\n    processTokens: assign({\n      formattedEdits: ({ context }) => {\n        try {\n          // Starting processTokens action - logging disabled to follow actor pattern\n\n          // Process the input text and generate formatting edits\n          const text = context.input;\n          const edits: vscode.TextEdit[] = [];\n\n          if (!text) {\n            // No input text, returning empty edits\n            return edits;\n          }\n\n          // Processing text\n\n          // Tokenize the input text\n          const tokens = tokenizeForMachine(text);\n          // Generated tokens\n\n          let currentLine = 0;\n          let currentColumn = 0;\n          const indentLevel = 0;\n          let inTemplate = false;\n          let templateType: 'html' | 'css' | null = null;\n\n          for (let i = 0; i < tokens.length; i++) {\n            const token = tokens[i];\n            const nextToken = tokens[i + 1];\n\n            switch (token.type) {\n              case 'TEMPLATE_TAG':\n                templateType = token.tag;\n                inTemplate = true;\n                // Found template tag\n                break;\n\n              case 'BACKTICK':\n                if (inTemplate && templateType) {\n                  if (nextToken && nextToken.type !== 'EOF') {\n                    try {\n                      // Add newline after opening backtick\n                      const position = new vscode.Position(currentLine, currentColumn + 1);\n                      const indent = '  '.repeat(indentLevel + 1);\n                      const edit = vscode.TextEdit.insert(position, `\\n${indent}`);\n                      edits.push(edit);\n                      // Added newline after backtick\n                    } catch (_editError) {}\n                  }\n                  inTemplate = !inTemplate;\n                }\n                break;\n\n              case 'NEWLINE':\n                currentLine++;\n                currentColumn = 0;\n\n                if (inTemplate && templateType) {\n                  try {\n                    // Add proper indentation for template content\n                    const nextPos = new vscode.Position(currentLine, 0);\n                    const indent = '  '.repeat(indentLevel + 1);\n                    const edit = vscode.TextEdit.insert(nextPos, indent);\n                    edits.push(edit);\n                    // Added indent at line\n                  } catch (_editError) {}\n                }\n                break;\n\n              case 'DOLLAR_LBRACE':\n                // Handle template expressions - no special formatting needed\n                break;\n\n              case 'LBRACE':\n              case 'RBRACE':\n                // Handle brace matching - no special formatting needed\n                break;\n\n              case 'CHAR':\n                currentColumn++;\n                break;\n\n              case 'EOF':\n                // End of file - finalize any pending edits\n                // Reached EOF\n                break;\n            }\n          }\n\n          // processTokens completed\n          return edits;\n        } catch (_error) {\n          return [];\n        }\n      },\n    }),\n    finalizeEdits: assign({\n      formattedEdits: ({ context }) => {\n        // Final processing of edits\n        return context.edits;\n      },\n    }),\n  },\n  guards: {\n    isAtExpressionEnd: ({ context }) => context.exprDepth === 1,\n  },\n}).createMachine({\n  id: 'formatter',\n  initial: 'root',\n  context: {\n    input: '',\n    position: 0,\n    line: 0,\n    column: 0,\n    indentLevel: 0,\n    exprDepth: 0,\n    edits: [],\n    formattedEdits: [],\n    currentIndent: '',\n    indentSize: 2,\n    preserveNewlines: true,\n    inTemplate: null,\n    templateStart: 0,\n    templateIndent: 0,\n  },\n  states: {\n    root: {\n      on: {\n        START_FORMATTING: {\n          target: 'formatting',\n          actions: ['initializeFormatting'],\n        },\n        TEMPLATE_TAG: {\n          target: 'waitingForBacktick',\n          actions: 'setTemplateTag',\n        },\n        CHAR: {\n          actions: 'advancePosition',\n        },\n        NEWLINE: {\n          actions: ['advancePosition', 'incrementLine'],\n        },\n      },\n    },\n    formatting: {\n      entry: ['processTokens', 'finalizeEdits'],\n      always: {\n        target: 'root',\n      },\n    },\n    waitingForBacktick: {\n      on: {\n        BACKTICK: {\n          target: 'template',\n          actions: ['recordTemplateStart', 'addNewlineAfterBacktick'],\n        },\n        CHAR: {\n          target: 'root',\n          actions: 'advancePosition',\n        },\n      },\n    },\n    template: {\n      entry: 'enterTemplate',\n      exit: 'exitTemplate',\n      on: {\n        DOLLAR_LBRACE: {\n          target: 'interpolation',\n          actions: 'enterInterpolation',\n        },\n        BACKTICK: {\n          target: 'root',\n          actions: ['addNewlineBeforeBacktick', 'resetTemplate'],\n        },\n        NEWLINE: {\n          actions: ['advancePosition', 'incrementLine', 'addTemplateIndent'],\n        },\n        CHAR: {\n          actions: 'advancePosition',\n        },\n      },\n    },\n    interpolation: {\n      entry: 'incrementExprDepth',\n      on: {\n        LBRACE: {\n          actions: 'incrementExprDepth',\n        },\n        RBRACE: [\n          {\n            guard: 'isAtExpressionEnd',\n            target: 'template',\n            actions: 'decrementExprDepth',\n          },\n          {\n            actions: 'decrementExprDepth',\n          },\n        ],\n        CHAR: {\n          actions: 'advancePosition',\n        },\n        NEWLINE: {\n          actions: ['advancePosition', 'incrementLine'],\n        },\n      },\n    },\n  },\n});\n","module.exports = require(\"events\");","module.exports = require(\"tls\");","'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst FastBuffer = Buffer[Symbol.species];\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\nconst DEFER_EVENT = 6;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor(options = {}) {\n    super();\n\n    this._allowSynchronousEvents =\n      options.allowSynchronousEvents !== undefined\n        ? options.allowSynchronousEvents\n        : true;\n    this._binaryType = options.binaryType || BINARY_TYPES[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket] = undefined;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._errored = false;\n    this._loop = false;\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = new FastBuffer(\n        buf.buffer,\n        buf.byteOffset + n,\n        buf.length - n\n      );\n\n      return new FastBuffer(buf.buffer, buf.byteOffset, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = new FastBuffer(\n          buf.buffer,\n          buf.byteOffset + n,\n          buf.length - n\n        );\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          this.getInfo(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          this.getPayloadLength16(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          this.getPayloadLength64(cb);\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          this.getData(cb);\n          break;\n        case INFLATING:\n        case DEFER_EVENT:\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    if (!this._errored) cb();\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getInfo(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      const error = this.createError(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n\n      cb(error);\n      return;\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      const error = this.createError(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (!this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        const error = this.createError(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (\n        this._payloadLength > 0x7d ||\n        (this._opcode === 0x08 && this._payloadLength === 1)\n      ) {\n        const error = this.createError(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    } else {\n      const error = this.createError(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        const error = this.createError(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n\n        cb(error);\n        return;\n      }\n    } else if (this._masked) {\n      const error = this.createError(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength16(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength64(cb) {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      const error = this.createError(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  haveLength(cb) {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        const error = this.createError(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n\n      if (\n        this._masked &&\n        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0\n      ) {\n        unmask(data, this._mask);\n      }\n    }\n\n    if (this._opcode > 0x07) {\n      this.controlMessage(data, cb);\n      return;\n    }\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    this.dataMessage(cb);\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          const error = this.createError(\n            RangeError,\n            'Max payload size exceeded',\n            false,\n            1009,\n            'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._fragments.push(buf);\n      }\n\n      this.dataMessage(cb);\n      if (this._state === GET_INFO) this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  dataMessage(cb) {\n    if (!this._fin) {\n      this._state = GET_INFO;\n      return;\n    }\n\n    const messageLength = this._messageLength;\n    const fragments = this._fragments;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragmented = 0;\n    this._fragments = [];\n\n    if (this._opcode === 2) {\n      let data;\n\n      if (this._binaryType === 'nodebuffer') {\n        data = concat(fragments, messageLength);\n      } else if (this._binaryType === 'arraybuffer') {\n        data = toArrayBuffer(concat(fragments, messageLength));\n      } else if (this._binaryType === 'blob') {\n        data = new Blob(fragments);\n      } else {\n        data = fragments;\n      }\n\n      if (this._allowSynchronousEvents) {\n        this.emit('message', data, true);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', data, true);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    } else {\n      const buf = concat(fragments, messageLength);\n\n      if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n        const error = this.createError(\n          Error,\n          'invalid UTF-8 sequence',\n          true,\n          1007,\n          'WS_ERR_INVALID_UTF8'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (this._state === INFLATING || this._allowSynchronousEvents) {\n        this.emit('message', buf, false);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', buf, false);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    }\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data, cb) {\n    if (this._opcode === 0x08) {\n      if (data.length === 0) {\n        this._loop = false;\n        this.emit('conclude', 1005, EMPTY_BUFFER);\n        this.end();\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          const error = this.createError(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n\n          cb(error);\n          return;\n        }\n\n        const buf = new FastBuffer(\n          data.buffer,\n          data.byteOffset + 2,\n          data.length - 2\n        );\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          const error = this.createError(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._loop = false;\n        this.emit('conclude', code, buf);\n        this.end();\n      }\n\n      this._state = GET_INFO;\n      return;\n    }\n\n    if (this._allowSynchronousEvents) {\n      this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n      this._state = GET_INFO;\n    } else {\n      this._state = DEFER_EVENT;\n      setImmediate(() => {\n        this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n        this._state = GET_INFO;\n        this.startLoop(cb);\n      });\n    }\n  }\n\n  /**\n   * Builds an error object.\n   *\n   * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n   * @param {String} message The error message\n   * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n   *     `message`\n   * @param {Number} statusCode The status code\n   * @param {String} errorCode The exposed error code\n   * @return {(Error|RangeError)} The error\n   * @private\n   */\n  createError(ErrorCtor, message, prefix, statusCode, errorCode) {\n    this._loop = false;\n    this._errored = true;\n\n    const err = new ErrorCtor(\n      prefix ? `Invalid WebSocket frame: ${message}` : message\n    );\n\n    Error.captureStackTrace(err, this.createError);\n    err.code = errorCode;\n    err[kStatusCode] = statusCode;\n    return err;\n  }\n}\n\nmodule.exports = Receiver;\n","\"use strict\";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __esm = (fn, res) => function __init() {\n  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/utils/skip.js\nfunction skip(characters) {\n  return (text, startIndex, options) => {\n    const backwards = Boolean(options == null ? void 0 : options.backwards);\n    if (startIndex === false) {\n      return false;\n    }\n    const { length } = text;\n    let cursor = startIndex;\n    while (cursor >= 0 && cursor < length) {\n      const character = text.charAt(cursor);\n      if (characters instanceof RegExp) {\n        if (!characters.test(character)) {\n          return cursor;\n        }\n      } else if (!characters.includes(character)) {\n        return cursor;\n      }\n      backwards ? cursor-- : cursor++;\n    }\n    if (cursor === -1 || cursor === length) {\n      return cursor;\n    }\n    return false;\n  };\n}\nvar skipWhitespace, skipSpaces, skipToLineEnd, skipEverythingButNewLine;\nvar init_skip = __esm({\n  \"src/utils/skip.js\"() {\n    skipWhitespace = skip(/\\s/u);\n    skipSpaces = skip(\" \t\");\n    skipToLineEnd = skip(\",; \t\");\n    skipEverythingButNewLine = skip(/[^\\n\\r]/u);\n  }\n});\n\n// src/utils/skip-inline-comment.js\nfunction skipInlineComment(text, startIndex) {\n  if (startIndex === false) {\n    return false;\n  }\n  if (text.charAt(startIndex) === \"/\" && text.charAt(startIndex + 1) === \"*\") {\n    for (let i = startIndex + 2; i < text.length; ++i) {\n      if (text.charAt(i) === \"*\" && text.charAt(i + 1) === \"/\") {\n        return i + 2;\n      }\n    }\n  }\n  return startIndex;\n}\nvar skip_inline_comment_default;\nvar init_skip_inline_comment = __esm({\n  \"src/utils/skip-inline-comment.js\"() {\n    skip_inline_comment_default = skipInlineComment;\n  }\n});\n\n// src/utils/skip-newline.js\nfunction skipNewline(text, startIndex, options) {\n  const backwards = Boolean(options == null ? void 0 : options.backwards);\n  if (startIndex === false) {\n    return false;\n  }\n  const character = text.charAt(startIndex);\n  if (backwards) {\n    if (text.charAt(startIndex - 1) === \"\\r\" && character === \"\\n\") {\n      return startIndex - 2;\n    }\n    if (character === \"\\n\" || character === \"\\r\" || character === \"\\u2028\" || character === \"\\u2029\") {\n      return startIndex - 1;\n    }\n  } else {\n    if (character === \"\\r\" && text.charAt(startIndex + 1) === \"\\n\") {\n      return startIndex + 2;\n    }\n    if (character === \"\\n\" || character === \"\\r\" || character === \"\\u2028\" || character === \"\\u2029\") {\n      return startIndex + 1;\n    }\n  }\n  return startIndex;\n}\nvar skip_newline_default;\nvar init_skip_newline = __esm({\n  \"src/utils/skip-newline.js\"() {\n    skip_newline_default = skipNewline;\n  }\n});\n\n// src/utils/skip-trailing-comment.js\nfunction skipTrailingComment(text, startIndex) {\n  if (startIndex === false) {\n    return false;\n  }\n  if (text.charAt(startIndex) === \"/\" && text.charAt(startIndex + 1) === \"/\") {\n    return skipEverythingButNewLine(text, startIndex);\n  }\n  return startIndex;\n}\nvar skip_trailing_comment_default;\nvar init_skip_trailing_comment = __esm({\n  \"src/utils/skip-trailing-comment.js\"() {\n    init_skip();\n    skip_trailing_comment_default = skipTrailingComment;\n  }\n});\n\n// src/utils/get-next-non-space-non-comment-character-index.js\nfunction getNextNonSpaceNonCommentCharacterIndex(text, startIndex) {\n  let oldIdx = null;\n  let nextIdx = startIndex;\n  while (nextIdx !== oldIdx) {\n    oldIdx = nextIdx;\n    nextIdx = skipSpaces(text, nextIdx);\n    nextIdx = skip_inline_comment_default(text, nextIdx);\n    nextIdx = skip_trailing_comment_default(text, nextIdx);\n    nextIdx = skip_newline_default(text, nextIdx);\n  }\n  return nextIdx;\n}\nvar get_next_non_space_non_comment_character_index_default;\nvar init_get_next_non_space_non_comment_character_index = __esm({\n  \"src/utils/get-next-non-space-non-comment-character-index.js\"() {\n    init_skip();\n    init_skip_inline_comment();\n    init_skip_newline();\n    init_skip_trailing_comment();\n    get_next_non_space_non_comment_character_index_default = getNextNonSpaceNonCommentCharacterIndex;\n  }\n});\n\n// src/utils/has-newline.js\nfunction hasNewline(text, startIndex, options = {}) {\n  const idx = skipSpaces(\n    text,\n    options.backwards ? startIndex - 1 : startIndex,\n    options\n  );\n  const idx2 = skip_newline_default(text, idx, options);\n  return idx !== idx2;\n}\nvar has_newline_default;\nvar init_has_newline = __esm({\n  \"src/utils/has-newline.js\"() {\n    init_skip();\n    init_skip_newline();\n    has_newline_default = hasNewline;\n  }\n});\n\n// src/utils/is-next-line-empty.js\nfunction isNextLineEmpty(text, startIndex) {\n  let oldIdx = null;\n  let idx = startIndex;\n  while (idx !== oldIdx) {\n    oldIdx = idx;\n    idx = skipToLineEnd(text, idx);\n    idx = skip_inline_comment_default(text, idx);\n    idx = skipSpaces(text, idx);\n  }\n  idx = skip_trailing_comment_default(text, idx);\n  idx = skip_newline_default(text, idx);\n  return idx !== false && has_newline_default(text, idx);\n}\nvar is_next_line_empty_default;\nvar init_is_next_line_empty = __esm({\n  \"src/utils/is-next-line-empty.js\"() {\n    init_has_newline();\n    init_skip();\n    init_skip_inline_comment();\n    init_skip_newline();\n    init_skip_trailing_comment();\n    is_next_line_empty_default = isNextLineEmpty;\n  }\n});\n\n// src/utils/is-previous-line-empty.js\nfunction isPreviousLineEmpty(text, startIndex) {\n  let idx = startIndex - 1;\n  idx = skipSpaces(text, idx, { backwards: true });\n  idx = skip_newline_default(text, idx, { backwards: true });\n  idx = skipSpaces(text, idx, { backwards: true });\n  const idx2 = skip_newline_default(text, idx, { backwards: true });\n  return idx !== idx2;\n}\nvar is_previous_line_empty_default;\nvar init_is_previous_line_empty = __esm({\n  \"src/utils/is-previous-line-empty.js\"() {\n    init_skip();\n    init_skip_newline();\n    is_previous_line_empty_default = isPreviousLineEmpty;\n  }\n});\n\n// src/main/comments/utils.js\nfunction describeNodeForDebugging(node) {\n  const nodeType = node.type || node.kind || \"(unknown type)\";\n  let nodeName = String(\n    node.name || node.id && (typeof node.id === \"object\" ? node.id.name : node.id) || node.key && (typeof node.key === \"object\" ? node.key.name : node.key) || node.value && (typeof node.value === \"object\" ? \"\" : String(node.value)) || node.operator || \"\"\n  );\n  if (nodeName.length > 20) {\n    nodeName = nodeName.slice(0, 19) + \"\\u2026\";\n  }\n  return nodeType + (nodeName ? \" \" + nodeName : \"\");\n}\nfunction addCommentHelper(node, comment) {\n  const comments = node.comments ?? (node.comments = []);\n  comments.push(comment);\n  comment.printed = false;\n  comment.nodeDescription = describeNodeForDebugging(node);\n}\nfunction addLeadingComment(node, comment) {\n  comment.leading = true;\n  comment.trailing = false;\n  addCommentHelper(node, comment);\n}\nfunction addDanglingComment(node, comment, marker) {\n  comment.leading = false;\n  comment.trailing = false;\n  if (marker) {\n    comment.marker = marker;\n  }\n  addCommentHelper(node, comment);\n}\nfunction addTrailingComment(node, comment) {\n  comment.leading = false;\n  comment.trailing = true;\n  addCommentHelper(node, comment);\n}\nvar init_utils = __esm({\n  \"src/main/comments/utils.js\"() {\n  }\n});\n\n// src/utils/get-alignment-size.js\nfunction getAlignmentSize(text, tabWidth, startIndex = 0) {\n  let size = 0;\n  for (let i = startIndex; i < text.length; ++i) {\n    if (text[i] === \"\t\") {\n      size = size + tabWidth - size % tabWidth;\n    } else {\n      size++;\n    }\n  }\n  return size;\n}\nvar get_alignment_size_default;\nvar init_get_alignment_size = __esm({\n  \"src/utils/get-alignment-size.js\"() {\n    get_alignment_size_default = getAlignmentSize;\n  }\n});\n\n// src/utils/get-indent-size.js\nfunction getIndentSize(value, tabWidth) {\n  const lastNewlineIndex = value.lastIndexOf(\"\\n\");\n  if (lastNewlineIndex === -1) {\n    return 0;\n  }\n  return get_alignment_size_default(\n    // All the leading whitespaces\n    value.slice(lastNewlineIndex + 1).match(/^[\\t ]*/u)[0],\n    tabWidth\n  );\n}\nvar get_indent_size_default;\nvar init_get_indent_size = __esm({\n  \"src/utils/get-indent-size.js\"() {\n    init_get_alignment_size();\n    get_indent_size_default = getIndentSize;\n  }\n});\n\n// node_modules/escape-string-regexp/index.js\nfunction escapeStringRegexp(string) {\n  if (typeof string !== \"string\") {\n    throw new TypeError(\"Expected a string\");\n  }\n  return string.replace(/[|\\\\{}()[\\]^$+*?.]/g, \"\\\\$&\").replace(/-/g, \"\\\\x2d\");\n}\nvar init_escape_string_regexp = __esm({\n  \"node_modules/escape-string-regexp/index.js\"() {\n  }\n});\n\n// src/utils/get-max-continuous-count.js\nfunction getMaxContinuousCount(text, searchString) {\n  const results = text.match(\n    new RegExp(`(${escapeStringRegexp(searchString)})+`, \"gu\")\n  );\n  if (results === null) {\n    return 0;\n  }\n  return results.reduce(\n    (maxCount, result) => Math.max(maxCount, result.length / searchString.length),\n    0\n  );\n}\nvar get_max_continuous_count_default;\nvar init_get_max_continuous_count = __esm({\n  \"src/utils/get-max-continuous-count.js\"() {\n    init_escape_string_regexp();\n    get_max_continuous_count_default = getMaxContinuousCount;\n  }\n});\n\n// src/utils/get-next-non-space-non-comment-character.js\nfunction getNextNonSpaceNonCommentCharacter(text, startIndex) {\n  const index = get_next_non_space_non_comment_character_index_default(text, startIndex);\n  return index === false ? \"\" : text.charAt(index);\n}\nvar get_next_non_space_non_comment_character_default;\nvar init_get_next_non_space_non_comment_character = __esm({\n  \"src/utils/get-next-non-space-non-comment-character.js\"() {\n    init_get_next_non_space_non_comment_character_index();\n    get_next_non_space_non_comment_character_default = getNextNonSpaceNonCommentCharacter;\n  }\n});\n\n// src/utils/get-preferred-quote.js\nfunction getPreferredQuote(text, preferredQuoteOrPreferSingleQuote) {\n  const preferred = preferredQuoteOrPreferSingleQuote === true || preferredQuoteOrPreferSingleQuote === SINGLE_QUOTE ? SINGLE_QUOTE : DOUBLE_QUOTE;\n  const alternate = preferred === SINGLE_QUOTE ? DOUBLE_QUOTE : SINGLE_QUOTE;\n  let preferredQuoteCount = 0;\n  let alternateQuoteCount = 0;\n  for (const character of text) {\n    if (character === preferred) {\n      preferredQuoteCount++;\n    } else if (character === alternate) {\n      alternateQuoteCount++;\n    }\n  }\n  return preferredQuoteCount > alternateQuoteCount ? alternate : preferred;\n}\nvar SINGLE_QUOTE, DOUBLE_QUOTE, get_preferred_quote_default;\nvar init_get_preferred_quote = __esm({\n  \"src/utils/get-preferred-quote.js\"() {\n    SINGLE_QUOTE = \"'\";\n    DOUBLE_QUOTE = '\"';\n    get_preferred_quote_default = getPreferredQuote;\n  }\n});\n\n// node_modules/emoji-regex/index.mjs\nvar emoji_regex_default;\nvar init_emoji_regex = __esm({\n  \"node_modules/emoji-regex/index.mjs\"() {\n    emoji_regex_default = () => {\n      return /[#*0-9]\\uFE0F?\\u20E3|[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23ED-\\u23EF\\u23F1\\u23F2\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB\\u25FC\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692\\u2694-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A7\\u26AA\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C8\\u26CF\\u26D1\\u26E9\\u26F0-\\u26F5\\u26F7\\u26F8\\u26FA\\u2702\\u2708\\u2709\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2733\\u2734\\u2744\\u2747\\u2757\\u2763\\u27A1\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B55\\u3030\\u303D\\u3297\\u3299]\\uFE0F?|[\\u261D\\u270C\\u270D](?:\\uD83C[\\uDFFB-\\uDFFF]|\\uFE0F)?|[\\u270A\\u270B](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u2693\\u26A1\\u26AB\\u26C5\\u26CE\\u26D4\\u26EA\\u26FD\\u2705\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2795-\\u2797\\u27B0\\u27BF\\u2B50]|\\u26D3\\uFE0F?(?:\\u200D\\uD83D\\uDCA5)?|\\u26F9(?:\\uD83C[\\uDFFB-\\uDFFF]|\\uFE0F)?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\u2764\\uFE0F?(?:\\u200D(?:\\uD83D\\uDD25|\\uD83E\\uDE79))?|\\uD83C(?:[\\uDC04\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDE02\\uDE37\\uDF21\\uDF24-\\uDF2C\\uDF36\\uDF7D\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E\\uDF9F\\uDFCD\\uDFCE\\uDFD4-\\uDFDF\\uDFF5\\uDFF7]\\uFE0F?|[\\uDF85\\uDFC2\\uDFC7](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDFC4\\uDFCA](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDFCB\\uDFCC](?:\\uD83C[\\uDFFB-\\uDFFF]|\\uFE0F)?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF43\\uDF45-\\uDF4A\\uDF4C-\\uDF7C\\uDF7E-\\uDF84\\uDF86-\\uDF93\\uDFA0-\\uDFC1\\uDFC5\\uDFC6\\uDFC8\\uDFC9\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF8-\\uDFFF]|\\uDDE6\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF]|\\uDDE7\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF]|\\uDDE8\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF7\\uDDFA-\\uDDFF]|\\uDDE9\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF]|\\uDDEA\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA]|\\uDDEB\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7]|\\uDDEC\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE]|\\uDDED\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA]|\\uDDEE\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9]|\\uDDEF\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5]|\\uDDF0\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF]|\\uDDF1\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE]|\\uDDF2\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF]|\\uDDF3\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF]|\\uDDF4\\uD83C\\uDDF2|\\uDDF5\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE]|\\uDDF6\\uD83C\\uDDE6|\\uDDF7\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC]|\\uDDF8\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF]|\\uDDF9\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF]|\\uDDFA\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF]|\\uDDFB\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA]|\\uDDFC\\uD83C[\\uDDEB\\uDDF8]|\\uDDFD\\uD83C\\uDDF0|\\uDDFE\\uD83C[\\uDDEA\\uDDF9]|\\uDDFF\\uD83C[\\uDDE6\\uDDF2\\uDDFC]|\\uDF44(?:\\u200D\\uD83D\\uDFEB)?|\\uDF4B(?:\\u200D\\uD83D\\uDFE9)?|\\uDFC3(?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D(?:[\\u2640\\u2642]\\uFE0F?(?:\\u200D\\u27A1\\uFE0F?)?|\\u27A1\\uFE0F?))?|\\uDFF3\\uFE0F?(?:\\u200D(?:\\u26A7\\uFE0F?|\\uD83C\\uDF08))?|\\uDFF4(?:\\u200D\\u2620\\uFE0F?|\\uDB40\\uDC67\\uDB40\\uDC62\\uDB40(?:\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F)?)|\\uD83D(?:[\\uDC3F\\uDCFD\\uDD49\\uDD4A\\uDD6F\\uDD70\\uDD73\\uDD76-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA\\uDECB\\uDECD-\\uDECF\\uDEE0-\\uDEE5\\uDEE9\\uDEF0\\uDEF3]\\uFE0F?|[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDC8F\\uDC91\\uDCAA\\uDD7A\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4\\uDEB5](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDD74\\uDD90](?:\\uD83C[\\uDFFB-\\uDFFF]|\\uFE0F)?|[\\uDC00-\\uDC07\\uDC09-\\uDC14\\uDC16-\\uDC25\\uDC27-\\uDC3A\\uDC3C-\\uDC3E\\uDC40\\uDC44\\uDC45\\uDC51-\\uDC65\\uDC6A\\uDC79-\\uDC7B\\uDC7D-\\uDC80\\uDC84\\uDC88-\\uDC8E\\uDC90\\uDC92-\\uDCA9\\uDCAB-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDDA4\\uDDFB-\\uDE2D\\uDE2F-\\uDE34\\uDE37-\\uDE41\\uDE43\\uDE44\\uDE48-\\uDE4A\\uDE80-\\uDEA2\\uDEA4-\\uDEB3\\uDEB7-\\uDEBF\\uDEC1-\\uDEC5\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEDC-\\uDEDF\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB\\uDFF0]|\\uDC08(?:\\u200D\\u2B1B)?|\\uDC15(?:\\u200D\\uD83E\\uDDBA)?|\\uDC26(?:\\u200D(?:\\u2B1B|\\uD83D\\uDD25))?|\\uDC3B(?:\\u200D\\u2744\\uFE0F?)?|\\uDC41\\uFE0F?(?:\\u200D\\uD83D\\uDDE8\\uFE0F?)?|\\uDC68(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D(?:[\\uDC68\\uDC69]\\u200D\\uD83D(?:\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?)|[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?)|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]))|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFC-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB-\\uDFFE])))?))?|\\uDC69(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?[\\uDC68\\uDC69]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D(?:[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?|\\uDC69\\u200D\\uD83D(?:\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?))|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]))|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFC-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB-\\uDFFE])))?))?|\\uDC6F(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\uDD75(?:\\uD83C[\\uDFFB-\\uDFFF]|\\uFE0F)?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\uDE2E(?:\\u200D\\uD83D\\uDCA8)?|\\uDE35(?:\\u200D\\uD83D\\uDCAB)?|\\uDE36(?:\\u200D\\uD83C\\uDF2B\\uFE0F?)?|\\uDE42(?:\\u200D[\\u2194\\u2195]\\uFE0F?)?|\\uDEB6(?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D(?:[\\u2640\\u2642]\\uFE0F?(?:\\u200D\\u27A1\\uFE0F?)?|\\u27A1\\uFE0F?))?)|\\uD83E(?:[\\uDD0C\\uDD0F\\uDD18-\\uDD1F\\uDD30-\\uDD34\\uDD36\\uDD77\\uDDB5\\uDDB6\\uDDBB\\uDDD2\\uDDD3\\uDDD5\\uDEC3-\\uDEC5\\uDEF0\\uDEF2-\\uDEF8](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD\\uDDCF\\uDDD4\\uDDD6-\\uDDDD](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDDDE\\uDDDF](?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDD0D\\uDD0E\\uDD10-\\uDD17\\uDD20-\\uDD25\\uDD27-\\uDD2F\\uDD3A\\uDD3F-\\uDD45\\uDD47-\\uDD76\\uDD78-\\uDDB4\\uDDB7\\uDDBA\\uDDBC-\\uDDCC\\uDDD0\\uDDE0-\\uDDFF\\uDE70-\\uDE7C\\uDE80-\\uDE89\\uDE8F-\\uDEC2\\uDEC6\\uDECE-\\uDEDC\\uDEDF-\\uDEE9]|\\uDD3C(?:\\u200D[\\u2640\\u2642]\\uFE0F?|\\uD83C[\\uDFFB-\\uDFFF])?|\\uDDCE(?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D(?:[\\u2640\\u2642]\\uFE0F?(?:\\u200D\\u27A1\\uFE0F?)?|\\u27A1\\uFE0F?))?|\\uDDD1(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1|\\uDDD1\\u200D\\uD83E\\uDDD2(?:\\u200D\\uD83E\\uDDD2)?|\\uDDD2(?:\\u200D\\uD83E\\uDDD2)?))|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFC-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB\\uDFFD-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFD\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFE]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?))?|\\uDEF1(?:\\uD83C(?:\\uDFFB(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFC-\\uDFFF])?|\\uDFFC(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])?|\\uDFFD(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])?|\\uDFFE(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])?|\\uDFFF(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB-\\uDFFE])?))?)/g;\n    };\n  }\n});\n\n// node_modules/get-east-asian-width/lookup.js\nfunction isFullWidth(x) {\n  return x === 12288 || x >= 65281 && x <= 65376 || x >= 65504 && x <= 65510;\n}\nfunction isWide(x) {\n  return x >= 4352 && x <= 4447 || x === 8986 || x === 8987 || x === 9001 || x === 9002 || x >= 9193 && x <= 9196 || x === 9200 || x === 9203 || x === 9725 || x === 9726 || x === 9748 || x === 9749 || x >= 9776 && x <= 9783 || x >= 9800 && x <= 9811 || x === 9855 || x >= 9866 && x <= 9871 || x === 9875 || x === 9889 || x === 9898 || x === 9899 || x === 9917 || x === 9918 || x === 9924 || x === 9925 || x === 9934 || x === 9940 || x === 9962 || x === 9970 || x === 9971 || x === 9973 || x === 9978 || x === 9981 || x === 9989 || x === 9994 || x === 9995 || x === 10024 || x === 10060 || x === 10062 || x >= 10067 && x <= 10069 || x === 10071 || x >= 10133 && x <= 10135 || x === 10160 || x === 10175 || x === 11035 || x === 11036 || x === 11088 || x === 11093 || x >= 11904 && x <= 11929 || x >= 11931 && x <= 12019 || x >= 12032 && x <= 12245 || x >= 12272 && x <= 12287 || x >= 12289 && x <= 12350 || x >= 12353 && x <= 12438 || x >= 12441 && x <= 12543 || x >= 12549 && x <= 12591 || x >= 12593 && x <= 12686 || x >= 12688 && x <= 12773 || x >= 12783 && x <= 12830 || x >= 12832 && x <= 12871 || x >= 12880 && x <= 42124 || x >= 42128 && x <= 42182 || x >= 43360 && x <= 43388 || x >= 44032 && x <= 55203 || x >= 63744 && x <= 64255 || x >= 65040 && x <= 65049 || x >= 65072 && x <= 65106 || x >= 65108 && x <= 65126 || x >= 65128 && x <= 65131 || x >= 94176 && x <= 94180 || x === 94192 || x === 94193 || x >= 94208 && x <= 100343 || x >= 100352 && x <= 101589 || x >= 101631 && x <= 101640 || x >= 110576 && x <= 110579 || x >= 110581 && x <= 110587 || x === 110589 || x === 110590 || x >= 110592 && x <= 110882 || x === 110898 || x >= 110928 && x <= 110930 || x === 110933 || x >= 110948 && x <= 110951 || x >= 110960 && x <= 111355 || x >= 119552 && x <= 119638 || x >= 119648 && x <= 119670 || x === 126980 || x === 127183 || x === 127374 || x >= 127377 && x <= 127386 || x >= 127488 && x <= 127490 || x >= 127504 && x <= 127547 || x >= 127552 && x <= 127560 || x === 127568 || x === 127569 || x >= 127584 && x <= 127589 || x >= 127744 && x <= 127776 || x >= 127789 && x <= 127797 || x >= 127799 && x <= 127868 || x >= 127870 && x <= 127891 || x >= 127904 && x <= 127946 || x >= 127951 && x <= 127955 || x >= 127968 && x <= 127984 || x === 127988 || x >= 127992 && x <= 128062 || x === 128064 || x >= 128066 && x <= 128252 || x >= 128255 && x <= 128317 || x >= 128331 && x <= 128334 || x >= 128336 && x <= 128359 || x === 128378 || x === 128405 || x === 128406 || x === 128420 || x >= 128507 && x <= 128591 || x >= 128640 && x <= 128709 || x === 128716 || x >= 128720 && x <= 128722 || x >= 128725 && x <= 128727 || x >= 128732 && x <= 128735 || x === 128747 || x === 128748 || x >= 128756 && x <= 128764 || x >= 128992 && x <= 129003 || x === 129008 || x >= 129292 && x <= 129338 || x >= 129340 && x <= 129349 || x >= 129351 && x <= 129535 || x >= 129648 && x <= 129660 || x >= 129664 && x <= 129673 || x >= 129679 && x <= 129734 || x >= 129742 && x <= 129756 || x >= 129759 && x <= 129769 || x >= 129776 && x <= 129784 || x >= 131072 && x <= 196605 || x >= 196608 && x <= 262141;\n}\nvar init_lookup = __esm({\n  \"node_modules/get-east-asian-width/lookup.js\"() {\n  }\n});\n\n// node_modules/get-east-asian-width/index.js\nvar _isNarrowWidth;\nvar init_get_east_asian_width = __esm({\n  \"node_modules/get-east-asian-width/index.js\"() {\n    init_lookup();\n    _isNarrowWidth = (codePoint) => !(isFullWidth(codePoint) || isWide(codePoint));\n  }\n});\n\n// src/utils/get-string-width.js\nfunction getStringWidth(text) {\n  if (!text) {\n    return 0;\n  }\n  if (!notAsciiRegex.test(text)) {\n    return text.length;\n  }\n  text = text.replace(emoji_regex_default(), \"  \");\n  let width = 0;\n  for (const character of text) {\n    const codePoint = character.codePointAt(0);\n    if (codePoint <= 31 || codePoint >= 127 && codePoint <= 159) {\n      continue;\n    }\n    if (codePoint >= 768 && codePoint <= 879) {\n      continue;\n    }\n    width += _isNarrowWidth(codePoint) ? 1 : 2;\n  }\n  return width;\n}\nvar notAsciiRegex, get_string_width_default;\nvar init_get_string_width = __esm({\n  \"src/utils/get-string-width.js\"() {\n    init_emoji_regex();\n    init_get_east_asian_width();\n    notAsciiRegex = /[^\\x20-\\x7F]/u;\n    get_string_width_default = getStringWidth;\n  }\n});\n\n// src/utils/has-newline-in-range.js\nfunction hasNewlineInRange(text, startIndex, endIndex) {\n  for (let i = startIndex; i < endIndex; ++i) {\n    if (text.charAt(i) === \"\\n\") {\n      return true;\n    }\n  }\n  return false;\n}\nvar has_newline_in_range_default;\nvar init_has_newline_in_range = __esm({\n  \"src/utils/has-newline-in-range.js\"() {\n    has_newline_in_range_default = hasNewlineInRange;\n  }\n});\n\n// src/utils/has-spaces.js\nfunction hasSpaces(text, startIndex, options = {}) {\n  const idx = skipSpaces(\n    text,\n    options.backwards ? startIndex - 1 : startIndex,\n    options\n  );\n  return idx !== startIndex;\n}\nvar has_spaces_default;\nvar init_has_spaces = __esm({\n  \"src/utils/has-spaces.js\"() {\n    init_skip();\n    has_spaces_default = hasSpaces;\n  }\n});\n\n// scripts/build/shims/string-replace-all.js\nvar stringReplaceAll, string_replace_all_default;\nvar init_string_replace_all = __esm({\n  \"scripts/build/shims/string-replace-all.js\"() {\n    stringReplaceAll = (isOptionalObject, original, pattern, replacement) => {\n      if (isOptionalObject && (original === void 0 || original === null)) {\n        return;\n      }\n      if (original.replaceAll) {\n        return original.replaceAll(pattern, replacement);\n      }\n      if (pattern.global) {\n        return original.replace(pattern, replacement);\n      }\n      return original.split(pattern).join(replacement);\n    };\n    string_replace_all_default = stringReplaceAll;\n  }\n});\n\n// src/utils/make-string.js\nfunction makeString(rawText, enclosingQuote, unescapeUnnecessaryEscapes) {\n  const otherQuote = enclosingQuote === '\"' ? \"'\" : '\"';\n  const regex = /\\\\(.)|([\"'])/gsu;\n  const raw = string_replace_all_default(\n    /* isOptionalObject */\n    false,\n    rawText,\n    regex,\n    (match, escaped, quote) => {\n      if (escaped === otherQuote) {\n        return escaped;\n      }\n      if (quote === enclosingQuote) {\n        return \"\\\\\" + quote;\n      }\n      if (quote) {\n        return quote;\n      }\n      return unescapeUnnecessaryEscapes && /^[^\\n\\r\"'0-7\\\\bfnrt-vx\\u2028\\u2029]$/u.test(escaped) ? escaped : \"\\\\\" + escaped;\n    }\n  );\n  return enclosingQuote + raw + enclosingQuote;\n}\nvar make_string_default;\nvar init_make_string = __esm({\n  \"src/utils/make-string.js\"() {\n    init_string_replace_all();\n    make_string_default = makeString;\n  }\n});\n\n// src/utils/public.js\nvar public_exports = {};\n__export(public_exports, {\n  addDanglingComment: () => addDanglingComment,\n  addLeadingComment: () => addLeadingComment,\n  addTrailingComment: () => addTrailingComment,\n  getAlignmentSize: () => get_alignment_size_default,\n  getIndentSize: () => get_indent_size_default,\n  getMaxContinuousCount: () => get_max_continuous_count_default,\n  getNextNonSpaceNonCommentCharacter: () => get_next_non_space_non_comment_character_default,\n  getNextNonSpaceNonCommentCharacterIndex: () => getNextNonSpaceNonCommentCharacterIndex2,\n  getPreferredQuote: () => get_preferred_quote_default,\n  getStringWidth: () => get_string_width_default,\n  hasNewline: () => has_newline_default,\n  hasNewlineInRange: () => has_newline_in_range_default,\n  hasSpaces: () => has_spaces_default,\n  isNextLineEmpty: () => isNextLineEmpty2,\n  isNextLineEmptyAfterIndex: () => is_next_line_empty_default,\n  isPreviousLineEmpty: () => isPreviousLineEmpty2,\n  makeString: () => make_string_default,\n  skip: () => skip,\n  skipEverythingButNewLine: () => skipEverythingButNewLine,\n  skipInlineComment: () => skip_inline_comment_default,\n  skipNewline: () => skip_newline_default,\n  skipSpaces: () => skipSpaces,\n  skipToLineEnd: () => skipToLineEnd,\n  skipTrailingComment: () => skip_trailing_comment_default,\n  skipWhitespace: () => skipWhitespace\n});\nfunction legacyGetNextNonSpaceNonCommentCharacterIndex(text, node, locEnd) {\n  return get_next_non_space_non_comment_character_index_default(\n    text,\n    locEnd(node)\n  );\n}\nfunction getNextNonSpaceNonCommentCharacterIndex2(text, startIndex) {\n  return arguments.length === 2 || typeof startIndex === \"number\" ? get_next_non_space_non_comment_character_index_default(text, startIndex) : (\n    // @ts-expect-error -- expected\n    // eslint-disable-next-line prefer-rest-params\n    legacyGetNextNonSpaceNonCommentCharacterIndex(...arguments)\n  );\n}\nfunction legacyIsPreviousLineEmpty(text, node, locStart) {\n  return is_previous_line_empty_default(text, locStart(node));\n}\nfunction isPreviousLineEmpty2(text, startIndex) {\n  return arguments.length === 2 || typeof startIndex === \"number\" ? is_previous_line_empty_default(text, startIndex) : (\n    // @ts-expect-error -- expected\n    // eslint-disable-next-line prefer-rest-params\n    legacyIsPreviousLineEmpty(...arguments)\n  );\n}\nfunction legacyIsNextLineEmpty(text, node, locEnd) {\n  return is_next_line_empty_default(text, locEnd(node));\n}\nfunction isNextLineEmpty2(text, startIndex) {\n  return arguments.length === 2 || typeof startIndex === \"number\" ? is_next_line_empty_default(text, startIndex) : (\n    // @ts-expect-error -- expected\n    // eslint-disable-next-line prefer-rest-params\n    legacyIsNextLineEmpty(...arguments)\n  );\n}\nvar init_public = __esm({\n  \"src/utils/public.js\"() {\n    init_get_next_non_space_non_comment_character_index();\n    init_is_next_line_empty();\n    init_is_previous_line_empty();\n    init_utils();\n    init_get_alignment_size();\n    init_get_indent_size();\n    init_get_max_continuous_count();\n    init_get_next_non_space_non_comment_character();\n    init_get_preferred_quote();\n    init_get_string_width();\n    init_has_newline();\n    init_has_newline_in_range();\n    init_has_spaces();\n    init_make_string();\n    init_skip();\n    init_skip_inline_comment();\n    init_skip_newline();\n    init_skip_trailing_comment();\n  }\n});\n\n// src/main/version.evaluate.js\nvar version_evaluate_exports = {};\n__export(version_evaluate_exports, {\n  default: () => version_evaluate_default\n});\nvar version_evaluate_default;\nvar init_version_evaluate = __esm({\n  \"src/main/version.evaluate.js\"() {\n    version_evaluate_default = \"3.6.2\";\n  }\n});\n\n// src/index.cjs\nvar prettierPromise = import(\"./index.mjs\");\nvar functionNames = [\n  \"formatWithCursor\",\n  \"format\",\n  \"check\",\n  \"resolveConfig\",\n  \"resolveConfigFile\",\n  \"clearConfigCache\",\n  \"getFileInfo\",\n  \"getSupportInfo\"\n];\nvar prettier = /* @__PURE__ */ Object.create(null);\nfor (const name of functionNames) {\n  prettier[name] = async (...args) => {\n    const prettier2 = await prettierPromise;\n    return prettier2[name](...args);\n  };\n}\nvar debugApiFunctionNames = [\n  \"parse\",\n  \"formatAST\",\n  \"formatDoc\",\n  \"printToDoc\",\n  \"printDocToString\"\n];\nvar debugApis = /* @__PURE__ */ Object.create(null);\nfor (const name of debugApiFunctionNames) {\n  debugApis[name] = async (...args) => {\n    const prettier2 = await prettierPromise;\n    return prettier2.__debug[name](...args);\n  };\n}\nprettier.__debug = debugApis;\nif (true) {\n  prettier.util = (init_public(), __toCommonJS(public_exports));\n  prettier.doc = require(\"./doc.js\");\n  prettier.version = (init_version_evaluate(), __toCommonJS(version_evaluate_exports)).default;\n} else {\n  Object.defineProperties(prettier, {\n    util: {\n      get() {\n        try {\n          return null;\n        } catch {\n        }\n        throw new Error(\n          \"prettier.util is not available in development CommonJS version\"\n        );\n      }\n    },\n    doc: {\n      get() {\n        try {\n          return null;\n        } catch {\n        }\n        throw new Error(\n          \"prettier.doc is not available in development CommonJS version\"\n        );\n      }\n    }\n  });\n  prettier.version = null.version;\n}\nmodule.exports = prettier;\n","module.exports = require(\"https\");","import * as vscode from 'vscode';\n\ninterface TemplateInfo {\n  range: vscode.Range;\n  content: string;\n  language: 'html' | 'css';\n  indentLevel: number;\n}\n\ninterface Expression {\n  placeholder: string;\n  content: string;\n}\n\n/**\n * Simple, focused formatter for actor-spa template literals.\n * No actors, no state machines, no external processes - just clean formatting logic.\n */\nexport class SimpleFormattingProvider\n  implements vscode.DocumentFormattingEditProvider, vscode.DocumentRangeFormattingEditProvider\n{\n  constructor(private outputChannel?: vscode.OutputChannel) {}\n\n  async provideDocumentFormattingEdits(\n    document: vscode.TextDocument,\n    options: vscode.FormattingOptions,\n    _token: vscode.CancellationToken\n  ): Promise<vscode.TextEdit[]> {\n    const templates = this.findTemplates(document);\n    const edits: vscode.TextEdit[] = [];\n\n    for (const template of templates) {\n      const formatted = this.formatTemplate(template, options);\n      if (formatted !== template.content) {\n        edits.push(vscode.TextEdit.replace(template.range, formatted));\n      }\n    }\n\n    return edits;\n  }\n\n  async provideDocumentRangeFormattingEdits(\n    document: vscode.TextDocument,\n    range: vscode.Range,\n    options: vscode.FormattingOptions,\n    _token: vscode.CancellationToken\n  ): Promise<vscode.TextEdit[]> {\n    // For template literals, we format the whole template if the range intersects\n    const templates = this.findTemplates(document);\n    const edits: vscode.TextEdit[] = [];\n\n    for (const template of templates) {\n      // Check if the template intersects with the requested range\n      if (range.intersection(template.range)) {\n        const formatted = this.formatTemplate(template, options);\n        if (formatted !== template.content) {\n          edits.push(vscode.TextEdit.replace(template.range, formatted));\n        }\n      }\n    }\n\n    return edits;\n  }\n\n  private findTemplates(document: vscode.TextDocument): TemplateInfo[] {\n    const templates: TemplateInfo[] = [];\n    const text = document.getText();\n\n    // Find both html`` and css`` templates\n    const regex = /\\b(html|css)\\s*`/g;\n    let match: RegExpExecArray | null;\n\n    // Restructure to avoid assignment in expression\n    match = regex.exec(text);\n    while (match !== null) {\n      const language = match[1] as 'html' | 'css';\n      const tagStart = match.index;\n      const contentStart = tagStart + match[0].length;\n\n      // Find closing backtick (handling nested template literals)\n      const contentEnd = this.findClosingBacktick(text, contentStart);\n      if (contentEnd === -1) {\n        match = regex.exec(text);\n        continue;\n      }\n\n      const content = text.slice(contentStart, contentEnd);\n      const startPos = document.positionAt(contentStart);\n      const endPos = document.positionAt(contentEnd);\n      const indentLevel = this.getIndentLevel(document, startPos.line);\n\n      templates.push({\n        range: new vscode.Range(startPos, endPos),\n        content,\n        language,\n        indentLevel,\n      });\n\n      match = regex.exec(text);\n    }\n\n    return templates;\n  }\n\n  private findClosingBacktick(text: string, start: number): number {\n    let depth = 1;\n    let i = start;\n\n    while (i < text.length && depth > 0) {\n      if (text[i] === '\\\\') {\n        i += 2; // Skip escaped character\n        continue;\n      }\n\n      if (text[i] === '`') {\n        // Check if it's a template literal start (e.g., html` or css`)\n        const before = text.slice(Math.max(0, i - 10), i);\n        if (/\\b(html|css)\\s*$/.test(before)) {\n          depth++;\n        } else {\n          depth--;\n        }\n      }\n\n      i++;\n    }\n\n    return depth === 0 ? i - 1 : -1;\n  }\n\n  private getIndentLevel(document: vscode.TextDocument, line: number): number {\n    const lineText = document.lineAt(line).text;\n    const match = lineText.match(/^(\\s*)/);\n    return match ? Math.floor(match[1].length / 2) : 0;\n  }\n\n  private formatTemplate(template: TemplateInfo, options: vscode.FormattingOptions): string {\n    const { content, language, indentLevel } = template;\n\n    if (!content.trim()) return content;\n\n    // Extract expressions to preserve them\n    const { cleanContent, expressions } = this.extractExpressions(content);\n\n    // Format based on language\n    const formatted =\n      language === 'html' ? this.formatHtml(cleanContent) : this.formatCss(cleanContent);\n\n    // Restore expressions\n    const withExpressions = this.restoreExpressions(formatted, expressions);\n\n    // Apply template literal indentation\n    return this.applyTemplateIndentation(withExpressions, indentLevel, options);\n  }\n\n  private extractExpressions(content: string): { cleanContent: string; expressions: Expression[] } {\n    const expressions: Expression[] = [];\n    let cleanContent = content;\n    let exprIndex = 0;\n\n    // Replace ${...} with placeholders\n    cleanContent = cleanContent.replace(/\\$\\{[^}]*\\}/g, (match) => {\n      const placeholder = `__EXPR_${exprIndex++}__`;\n      expressions.push({ placeholder, content: match });\n      return placeholder;\n    });\n\n    return { cleanContent, expressions };\n  }\n\n  private restoreExpressions(content: string, expressions: Expression[]): string {\n    let result = content;\n    for (const expr of expressions) {\n      result = result.replace(expr.placeholder, expr.content);\n    }\n    return result;\n  }\n\n  private formatHtml(content: string): string {\n    // Simple HTML formatting that preserves structure\n    return content\n      .replace(/>\\s*</g, '>\\n<') // Add newlines between tags\n      .replace(/(<[^>]+>)\\s*([^<\\s][^<]*?)\\s*(<\\/[^>]+>)/g, '$1$2$3') // Keep simple elements on one line\n      .split('\\n')\n      .map((line) => line.trim())\n      .filter((line) => line.length > 0)\n      .map((line, index, lines) => {\n        // Calculate indentation based on tag nesting\n        let indent = 0;\n        for (let i = 0; i < index; i++) {\n          if (lines[i].match(/<[^/][^>]*[^/]>/) && !lines[i].match(/<[^>]*\\/>/)) {\n            indent++;\n          }\n          if (lines[i].match(/<\\/[^>]+>/)) {\n            indent--;\n          }\n        }\n        if (line.match(/<\\/[^>]+>/)) {\n          indent--;\n        }\n        return '  '.repeat(Math.max(0, indent)) + line;\n      })\n      .join('\\n');\n  }\n\n  private formatCss(content: string): string {\n    // Simple CSS formatting\n    return content\n      .replace(/;\\s*/g, ';\\n') // Newline after semicolons\n      .replace(/\\{\\s*/g, ' {\\n') // Newline after opening braces\n      .replace(/\\}\\s*/g, '\\n}\\n') // Newlines around closing braces\n      .replace(/,\\s*/g, ',\\n') // Newline after commas in selectors\n      .split('\\n')\n      .map((line) => line.trim())\n      .filter((line) => line.length > 0)\n      .map((line, index, lines) => {\n        // Calculate indentation\n        let indent = 0;\n        for (let i = 0; i < index; i++) {\n          if (lines[i].includes('{')) indent++;\n          if (lines[i].includes('}')) indent--;\n        }\n        if (line === '}') indent--;\n        return '  '.repeat(Math.max(0, indent)) + line;\n      })\n      .join('\\n');\n  }\n\n  private applyTemplateIndentation(\n    content: string,\n    baseIndent: number,\n    options: vscode.FormattingOptions\n  ): string {\n    if (!content.trim()) return content;\n\n    const indent = options.insertSpaces\n      ? ' '.repeat(options.tabSize * (baseIndent + 1))\n      : '\\t'.repeat(baseIndent + 1);\n\n    const lines = content.split('\\n');\n    const indentedLines = lines.map((line) => (line.trim() ? indent + line : ''));\n\n    const baseIndentStr = options.insertSpaces\n      ? ' '.repeat(options.tabSize * baseIndent)\n      : '\\t'.repeat(baseIndent);\n\n    return `\\n${indentedLines.join('\\n')}\\n${baseIndentStr}`;\n  }\n}\n","'use strict';\n\nconst BINARY_TYPES = ['nodebuffer', 'arraybuffer', 'fragments'];\nconst hasBlob = typeof Blob !== 'undefined';\n\nif (hasBlob) BINARY_TYPES.push('blob');\n\nmodule.exports = {\n  BINARY_TYPES,\n  EMPTY_BUFFER: Buffer.alloc(0),\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  hasBlob,\n  kForOnEventAttribute: Symbol('kIsForOnEventAttribute'),\n  kListener: Symbol('kListener'),\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  NOOP: () => {}\n};\n","module.exports = require(\"node:path\");","'use strict';\n\nconst { EMPTY_BUFFER } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  if (list.length === 0) return EMPTY_BUFFER;\n  if (list.length === 1) return list[0];\n\n  const target = Buffer.allocUnsafe(totalLength);\n  let offset = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    target.set(buf, offset);\n    offset += buf.length;\n  }\n\n  if (offset < totalLength) {\n    return new FastBuffer(target.buffer, target.byteOffset, offset);\n  }\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (let i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  for (let i = 0; i < buffer.length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */\nfunction toArrayBuffer(buf) {\n  if (buf.length === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.length);\n}\n\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */\nfunction toBuffer(data) {\n  toBuffer.readOnly = true;\n\n  if (Buffer.isBuffer(data)) return data;\n\n  let buf;\n\n  if (data instanceof ArrayBuffer) {\n    buf = new FastBuffer(data);\n  } else if (ArrayBuffer.isView(data)) {\n    buf = new FastBuffer(data.buffer, data.byteOffset, data.byteLength);\n  } else {\n    buf = Buffer.from(data);\n    toBuffer.readOnly = false;\n  }\n\n  return buf;\n}\n\nmodule.exports = {\n  concat,\n  mask: _mask,\n  toArrayBuffer,\n  toBuffer,\n  unmask: _unmask\n};\n\n/* istanbul ignore else  */\nif (!process.env.WS_NO_BUFFER_UTIL) {\n  try {\n    const bufferUtil = require('bufferutil');\n\n    module.exports.mask = function (source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bufferUtil.mask(source, mask, output, offset, length);\n    };\n\n    module.exports.unmask = function (buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bufferUtil.unmask(buffer, mask);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","module.exports = require(\"path\");","module.exports = require(\"crypto\");","module.exports = require(\"url\");","module.exports = require(\"node:http\");","import * as vscode from 'vscode';\nimport { assign, fromPromise, setup } from 'xstate';\n\nexport interface TemplateInfo {\n  range: vscode.Range;\n  content: string;\n  language: 'html' | 'css';\n  indentLevel: number;\n  isNested: boolean;\n  complexity: 'simple' | 'medium' | 'complex';\n  expressionCount: number;\n  lineCount: number;\n  startPosition: number;\n  endPosition: number;\n}\n\nexport interface DiscoveryContext {\n  document: vscode.TextDocument | null;\n  text: string;\n  position: number;\n  templates: TemplateInfo[];\n  errors: string[];\n  currentTemplate: Partial<TemplateInfo> | null;\n  stats: {\n    totalTemplates: number;\n    htmlTemplates: number;\n    cssTemplates: number;\n    nestedTemplates: number;\n    complexTemplates: number;\n    processingTime: number;\n  };\n}\n\nexport type DiscoveryEvent =\n  | { type: 'DISCOVER'; document: vscode.TextDocument }\n  | { type: 'TEMPLATE_FOUND'; template: TemplateInfo }\n  | { type: 'SCAN_COMPLETE' }\n  | { type: 'ANALYSIS_COMPLETE' }\n  | { type: 'VALIDATION_COMPLETE' }\n  | { type: 'ERROR'; error: string }\n  | { type: 'RETRY' }\n  | { type: 'RESET' };\n\n// Helper functions for template discovery\nfunction findTemplateStart(\n  text: string,\n  position: number\n): { type: 'html' | 'css' | null; start: number } {\n  // Look for html` or css` patterns\n  const htmlMatch = text.indexOf('html`', position);\n  const cssMatch = text.indexOf('css`', position);\n\n  if (htmlMatch === -1 && cssMatch === -1) {\n    return { type: null, start: -1 };\n  }\n\n  if (htmlMatch !== -1 && (cssMatch === -1 || htmlMatch < cssMatch)) {\n    return { type: 'html', start: htmlMatch };\n  }\n\n  return { type: 'css', start: cssMatch };\n}\n\nfunction findClosingBacktick(text: string, start: number): number {\n  let depth = 0;\n  let i = start;\n  let inString = false;\n  let stringChar = '';\n\n  while (i < text.length) {\n    const char = text[i];\n    const nextChar = text[i + 1];\n\n    // Handle escaped characters\n    if (char === '\\\\') {\n      i += 2;\n      continue;\n    }\n\n    // Handle string literals\n    if (!inString && (char === '\"' || char === \"'\" || char === '`')) {\n      if (char === '`') {\n        if (depth === 0) {\n          return i;\n        }\n        depth--;\n      } else {\n        inString = true;\n        stringChar = char;\n      }\n    } else if (inString && char === stringChar) {\n      inString = false;\n      stringChar = '';\n    }\n\n    if (!inString) {\n      if (char === '$' && nextChar === '{') {\n        depth++;\n        i++; // Skip the '{'\n      } else if (char === '}' && depth > 0) {\n        depth--;\n      }\n    }\n\n    i++;\n  }\n\n  return -1;\n}\n\nfunction analyzeTemplateComplexity(content: string): 'simple' | 'medium' | 'complex' {\n  const expressionCount = (content.match(/\\$\\{/g) || []).length;\n  const lineCount = content.split('\\n').length;\n  const hasNestedTemplates = /html`|css`/.test(content);\n\n  if (hasNestedTemplates || expressionCount > 10 || lineCount > 20) {\n    return 'complex';\n  }\n\n  if (expressionCount > 3 || lineCount > 5) {\n    return 'medium';\n  }\n\n  return 'simple';\n}\n\nfunction getIndentLevel(document: vscode.TextDocument, lineNumber: number): number {\n  const line = document.lineAt(lineNumber);\n  const match = line.text.match(/^(\\s*)/);\n  return match ? Math.floor(match[1].length / 2) : 0;\n}\n\nfunction isNestedTemplate(text: string, currentPos: number): boolean {\n  // Look backwards to see if we're inside another template literal\n  let templateDepth = 0;\n  let i = currentPos - 1;\n\n  while (i >= 0) {\n    const char = text[i];\n\n    if (char === '`') {\n      // Check if this is a template tag\n      let j = i - 1;\n      while (j >= 0 && /\\s/.test(text[j])) {\n        j--;\n      }\n      const tagEnd = j + 1;\n      while (j >= 0 && /[a-zA-Z_$]/.test(text[j])) {\n        j--;\n      }\n\n      if (j >= 0 && /\\b(html|css)$/.test(text.slice(j + 1, tagEnd))) {\n        templateDepth++;\n        if (templateDepth > 1) {\n          return true;\n        }\n      }\n    }\n\n    i--;\n  }\n\n  return false;\n}\n\n// Actor for discovering templates\nconst discoverTemplatesActor = fromPromise(\n  async ({ input }: { input: { document: vscode.TextDocument } }) => {\n    const { document } = input;\n    const text = document.getText();\n    const templates: TemplateInfo[] = [];\n    let position = 0;\n\n    while (position < text.length) {\n      const { type, start } = findTemplateStart(text, position);\n\n      if (!type || start === -1) {\n        break;\n      }\n\n      const contentStart = start + type.length + 1; // +1 for the backtick\n      const contentEnd = findClosingBacktick(text, contentStart);\n\n      if (contentEnd === -1) {\n        position = start + 1;\n        continue;\n      }\n\n      const content = text.slice(contentStart, contentEnd);\n      const startPos = document.positionAt(contentStart);\n      const endPos = document.positionAt(contentEnd);\n      const indentLevel = getIndentLevel(document, startPos.line);\n      const isNested = isNestedTemplate(text, start);\n      const complexity = analyzeTemplateComplexity(content);\n      const expressionCount = (content.match(/\\$\\{/g) || []).length;\n      const lineCount = content.split('\\n').length;\n\n      const template: TemplateInfo = {\n        range: new vscode.Range(startPos, endPos),\n        content,\n        language: type,\n        indentLevel,\n        isNested,\n        complexity,\n        expressionCount,\n        lineCount,\n        startPosition: contentStart,\n        endPosition: contentEnd,\n      };\n\n      templates.push(template);\n      position = contentEnd + 1;\n    }\n\n    return templates;\n  }\n);\n\n// Actor for analyzing templates\nconst analyzeTemplatesActor = fromPromise(\n  async ({ input }: { input: { templates: TemplateInfo[] } }) => {\n    const { templates } = input;\n\n    // Perform additional analysis\n    const stats = {\n      totalTemplates: templates.length,\n      htmlTemplates: templates.filter((t) => t.language === 'html').length,\n      cssTemplates: templates.filter((t) => t.language === 'css').length,\n      nestedTemplates: templates.filter((t) => t.isNested).length,\n      complexTemplates: templates.filter((t) => t.complexity === 'complex').length,\n      processingTime: Date.now(),\n    };\n\n    return { templates, stats };\n  }\n);\n\n// Actor for validating templates\nconst validateTemplatesActor = fromPromise(\n  async ({ input }: { input: { templates: TemplateInfo[] } }) => {\n    const { templates } = input;\n    const errors: string[] = [];\n\n    for (const template of templates) {\n      // Basic validation\n      if (!template.content.trim()) {\n        errors.push(`Empty ${template.language} template found`);\n      }\n\n      // Check for unclosed tags in HTML\n      if (template.language === 'html') {\n        const openTags = (template.content.match(/<[^/][^>]*>/g) || []).length;\n        const closeTags = (template.content.match(/<\\/[^>]*>/g) || []).length;\n        const selfClosing = (template.content.match(/<[^>]*\\/>/g) || []).length;\n\n        if (openTags - selfClosing !== closeTags) {\n          errors.push(`Mismatched HTML tags in template at line ${template.range.start.line + 1}`);\n        }\n      }\n\n      // Check for unclosed braces in CSS\n      if (template.language === 'css') {\n        const openBraces = (template.content.match(/\\{/g) || []).length;\n        const closeBraces = (template.content.match(/\\}/g) || []).length;\n\n        if (openBraces !== closeBraces) {\n          errors.push(`Mismatched CSS braces in template at line ${template.range.start.line + 1}`);\n        }\n      }\n    }\n\n    return { templates, errors };\n  }\n);\n\nexport const discoveryMachine = setup({\n  types: {\n    context: {} as DiscoveryContext,\n    events: {} as DiscoveryEvent,\n  },\n  actors: {\n    discoverTemplates: discoverTemplatesActor,\n    analyzeTemplates: analyzeTemplatesActor,\n    validateTemplates: validateTemplatesActor,\n  },\n  actions: {\n    setDocument: assign({\n      document: ({ event }) => {\n        if (event.type === 'DISCOVER') {\n          return event.document;\n        }\n        return null;\n      },\n      text: ({ event }) => {\n        if (event.type === 'DISCOVER') {\n          return event.document.getText();\n        }\n        return '';\n      },\n      position: 0,\n    }),\n\n    updateTemplates: assign({\n      templates: ({ context, event }) => {\n        if (event.type === 'TEMPLATE_FOUND') {\n          return [...context.templates, event.template];\n        }\n        return context.templates;\n      },\n    }),\n\n    setAnalysisResults: assign({\n      templates: ({ context, event }) => {\n        if (event.type === 'ANALYSIS_COMPLETE') {\n          // This would be set by the analysis actor\n          return context.templates;\n        }\n        return context.templates;\n      },\n    }),\n\n    setValidationResults: assign({\n      errors: ({ context, event }) => {\n        if (event.type === 'VALIDATION_COMPLETE') {\n          // This would be set by the validation actor\n          return context.errors;\n        }\n        return context.errors;\n      },\n    }),\n\n    addError: assign({\n      errors: ({ context, event }) => {\n        if (event.type === 'ERROR') {\n          return [...context.errors, event.error];\n        }\n        return context.errors;\n      },\n    }),\n\n    resetState: assign({\n      document: null,\n      text: '',\n      position: 0,\n      templates: [],\n      errors: [],\n      currentTemplate: null,\n      stats: {\n        totalTemplates: 0,\n        htmlTemplates: 0,\n        cssTemplates: 0,\n        nestedTemplates: 0,\n        complexTemplates: 0,\n        processingTime: 0,\n      },\n    }),\n  },\n}).createMachine({\n  id: 'discovery',\n  initial: 'idle',\n  context: {\n    document: null,\n    text: '',\n    position: 0,\n    templates: [],\n    errors: [],\n    currentTemplate: null,\n    stats: {\n      totalTemplates: 0,\n      htmlTemplates: 0,\n      cssTemplates: 0,\n      nestedTemplates: 0,\n      complexTemplates: 0,\n      processingTime: 0,\n    },\n  },\n  states: {\n    idle: {\n      on: {\n        DISCOVER: {\n          target: 'scanning',\n          actions: 'setDocument',\n        },\n      },\n    },\n\n    scanning: {\n      invoke: {\n        id: 'discoverTemplates',\n        src: 'discoverTemplates',\n        input: ({ context }) => {\n          if (!context.document) {\n            throw new Error('No document provided for scanning');\n          }\n          return {\n            document: context.document,\n          };\n        },\n        onDone: {\n          target: 'analyzing',\n          actions: assign({\n            templates: ({ event }) => event.output,\n          }),\n        },\n        onError: {\n          target: 'error',\n          actions: assign({\n            errors: ({ context, event }) => [...context.errors, `Discovery error: ${event.error}`],\n          }),\n        },\n      },\n    },\n\n    analyzing: {\n      invoke: {\n        id: 'analyzeTemplates',\n        src: 'analyzeTemplates',\n        input: ({ context }) => ({\n          templates: context.templates,\n        }),\n        onDone: {\n          target: 'validating',\n          actions: assign({\n            templates: ({ event }) => event.output.templates,\n            stats: ({ event }) => event.output.stats,\n          }),\n        },\n        onError: {\n          target: 'error',\n          actions: assign({\n            errors: ({ context, event }) => [...context.errors, `Analysis error: ${event.error}`],\n          }),\n        },\n      },\n    },\n\n    validating: {\n      invoke: {\n        id: 'validateTemplates',\n        src: 'validateTemplates',\n        input: ({ context }) => ({\n          templates: context.templates,\n        }),\n        onDone: {\n          target: 'completed',\n          actions: assign({\n            templates: ({ event }) => event.output.templates,\n            errors: ({ event }) => event.output.errors,\n          }),\n        },\n        onError: {\n          target: 'error',\n          actions: assign({\n            errors: ({ context, event }) => [...context.errors, `Validation error: ${event.error}`],\n          }),\n        },\n      },\n    },\n\n    completed: {\n      on: {\n        DISCOVER: {\n          target: 'scanning',\n          actions: 'setDocument',\n        },\n        RESET: {\n          target: 'idle',\n          actions: 'resetState',\n        },\n      },\n    },\n\n    error: {\n      on: {\n        RETRY: {\n          target: 'scanning',\n        },\n        RESET: {\n          target: 'idle',\n          actions: 'resetState',\n        },\n      },\n    },\n  },\n});\n","module.exports = require(\"node:crypto\");","'use strict';\n\nconst { isUtf8 } = require('buffer');\n\nconst { hasBlob } = require('./constants');\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nfunction isValidStatusCode(code) {\n  return (\n    (code >= 1000 &&\n      code <= 1014 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n}\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction _isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0 // Overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong\n        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong\n        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||\n        buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Determines whether a value is a `Blob`.\n *\n * @param {*} value The value to be tested\n * @return {Boolean} `true` if `value` is a `Blob`, else `false`\n * @private\n */\nfunction isBlob(value) {\n  return (\n    hasBlob &&\n    typeof value === 'object' &&\n    typeof value.arrayBuffer === 'function' &&\n    typeof value.type === 'string' &&\n    typeof value.stream === 'function' &&\n    (value[Symbol.toStringTag] === 'Blob' ||\n      value[Symbol.toStringTag] === 'File')\n  );\n}\n\nmodule.exports = {\n  isBlob,\n  isValidStatusCode,\n  isValidUTF8: _isValidUTF8,\n  tokenChars\n};\n\nif (isUtf8) {\n  module.exports.isValidUTF8 = function (buf) {\n    return buf.length < 24 ? _isValidUTF8(buf) : isUtf8(buf);\n  };\n} /* istanbul ignore else  */ else if (!process.env.WS_NO_UTF_8_VALIDATE) {\n  try {\n    const isValidUTF8 = require('utf-8-validate');\n\n    module.exports.isValidUTF8 = function (buf) {\n      return buf.length < 32 ? _isValidUTF8(buf) : isValidUTF8(buf);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","import * as vscode from 'vscode';\nimport { ActorSpaFormattingProvider } from './formattingProvider';\n\n/**\n * XState-based formatting provider - FIXED VERSION\n * Now properly uses XState machine with error handling\n */\nexport class XStateFormattingProvider implements vscode.DocumentFormattingEditProvider {\n  private legacyFormatter: ActorSpaFormattingProvider;\n  private version: string;\n\n  constructor(private outputChannel?: vscode.OutputChannel) {\n    try {\n      // Get extension version\n      const extension = vscode.extensions.getExtension('actor-spa.actor-spa-framework');\n      this.version = extension?.packageJSON?.version || 'unknown';\n\n      this.legacyFormatter = new ActorSpaFormattingProvider(outputChannel);\n\n      // Test XState imports during construction\n      this.testXStateImports();\n\n      this.log(`🤖 XState Formatter v${this.version} initialized - XState machine ready`);\n    } catch (error) {\n      this.version = 'unknown';\n      this.log(\n        `❌ XState Formatter initialization error: ${error instanceof Error ? error.message : String(error)}`\n      );\n      this.log(`📊 Error stack: ${error instanceof Error ? error.stack : 'No stack'}`);\n      // Create legacy formatter as fallback\n      this.legacyFormatter = new ActorSpaFormattingProvider(outputChannel);\n    }\n  }\n\n  private testXStateImports(): void {\n    try {\n      // Dynamic import to avoid breaking extension activation\n      const xstate = require('xstate');\n\n      this.log('🔧 XState imports test successful', {\n        xstateAvailable: !!xstate,\n        createActorType: typeof xstate.createActor,\n      });\n    } catch (importError) {\n      this.log('❌ XState imports failed during test', {\n        error: importError instanceof Error ? importError.message : String(importError),\n        stack: importError instanceof Error ? importError.stack : 'No stack',\n      });\n      throw new Error(\n        `XState imports failed: ${importError instanceof Error ? importError.message : String(importError)}`\n      );\n    }\n  }\n\n  private log(message: string, data?: unknown): void {\n    try {\n      const timestamp = new Date().toISOString();\n      const logMessage = `[${timestamp}] [XState Formatter] ${message}`;\n      // Logging disabled to follow actor pattern - use output channel only\n      if (this.outputChannel) {\n        const dataStr = data ? ` | Data: ${JSON.stringify(data, null, 2)}` : '';\n        this.outputChannel.appendLine(`${logMessage}${dataStr}`);\n        this.outputChannel.show(); // Ensure channel is visible\n      }\n    } catch (_logError) {\n      // Fallback logging disabled to follow actor pattern\n    }\n  }\n\n  async provideDocumentFormattingEdits(\n    document: vscode.TextDocument,\n    options: vscode.FormattingOptions,\n    token: vscode.CancellationToken\n  ): Promise<vscode.TextEdit[]> {\n    this.log(`🚀 XState formatter v${this.version} activated - Using state machine`);\n\n    this.log(\n      `🔍 Processing document: ${document.fileName} (${document.getText().length} characters)`\n    );\n    this.log(\n      `📊 Formatting options: tabSize=${options.tabSize}, insertSpaces=${options.insertSpaces}`\n    );\n\n    try {\n      return await this.formatWithXStateMachine(document, options, token);\n    } catch (xstateError) {\n      this.log('❌ XState machine failed, falling back to legacy formatter', {\n        error: xstateError instanceof Error ? xstateError.message : String(xstateError),\n        stack: xstateError instanceof Error ? xstateError.stack : 'No stack',\n      });\n\n      // Fallback to legacy formatter\n      try {\n        return await this.legacyFormatter.provideDocumentFormattingEdits(document, options, token);\n      } catch (legacyError) {\n        this.log('❌ Even legacy formatter failed', {\n          error: legacyError instanceof Error ? legacyError.message : String(legacyError),\n          stack: legacyError instanceof Error ? legacyError.stack : 'No stack',\n        });\n        return [];\n      }\n    }\n  }\n\n  private async formatWithXStateMachine(\n    document: vscode.TextDocument,\n    options: vscode.FormattingOptions,\n    _token: vscode.CancellationToken\n  ): Promise<vscode.TextEdit[]> {\n    this.log('🤖 Starting XState formatter machine');\n\n    try {\n      // Dynamic imports to avoid breaking extension activation\n      this.log('📦 Loading XState modules...');\n      const { createActor } = require('xstate');\n      const { formatterMachine } = require('../machines/formatterMachine');\n\n      this.log('🔧 XState modules loaded successfully');\n\n      // Create actor from machine\n      this.log('🎭 Creating XState actor...');\n      const actor = createActor(formatterMachine);\n\n      this.log('🎭 Created XState actor, starting machine');\n\n      // Start the machine\n      this.log('🚀 Starting XState machine...');\n      actor.start();\n\n      this.log('🚀 XState machine started successfully');\n\n      // Get the document text\n      const documentText = document.getText();\n\n      this.log('📝 Processing document text with XState machine', {\n        textLength: documentText.length,\n        fileName: document.fileName,\n        firstChars: documentText.substring(0, 100),\n      });\n\n      // Send the START_FORMATTING event to the machine\n      this.log('📤 Sending START_FORMATTING event...');\n      actor.send({\n        type: 'START_FORMATTING',\n        input: documentText,\n        options,\n      });\n\n      this.log('📤 START_FORMATTING event sent successfully');\n\n      // Get the current state and check for formatted edits\n      this.log('📊 Getting machine state...');\n      const currentState = actor.getSnapshot();\n\n      this.log('📊 XState machine state', {\n        state: currentState.value,\n        contextKeys: Object.keys(currentState.context),\n        hasFormattedEdits: currentState.context.formattedEdits?.length > 0,\n        editsCount: currentState.context.formattedEdits?.length || 0,\n        hasInput: !!currentState.context.input,\n        inputLength: currentState.context.input?.length || 0,\n      });\n\n      // Stop the actor\n      this.log('🛑 Stopping XState machine...');\n      actor.stop();\n\n      this.log('🛑 XState machine stopped');\n\n      // Return the formatted edits\n      const edits = currentState.context.formattedEdits || [];\n\n      this.log(`✅ XState machine completed with ${edits.length} edits`);\n\n      return edits;\n    } catch (error) {\n      this.log('❌ XState machine processing failed', {\n        error: error instanceof Error ? error.message : String(error),\n        stack: error instanceof Error ? error.stack : 'No stack',\n        errorName: error instanceof Error ? error.name : 'Unknown',\n      });\n      throw error;\n    }\n  }\n}\n\nexport class XStateRangeFormattingProvider implements vscode.DocumentRangeFormattingEditProvider {\n  private formattingProvider: XStateFormattingProvider;\n\n  constructor(outputChannel?: vscode.OutputChannel) {\n    this.formattingProvider = new XStateFormattingProvider(outputChannel);\n  }\n\n  async provideDocumentRangeFormattingEdits(\n    document: vscode.TextDocument,\n    _range: vscode.Range,\n    options: vscode.FormattingOptions,\n    token: vscode.CancellationToken\n  ): Promise<vscode.TextEdit[]> {\n    // For now, format the whole document\n    return this.formattingProvider.provideDocumentFormattingEdits(document, options, token);\n  }\n}\n","import * as vscode from 'vscode';\n// Import AI Communication\nimport {\n  cleanupAICommunication,\n  initializeAICommunication,\n  registerAICommunicationCommands,\n} from './commands/aiCommunication';\n// Import centralized debug logger\nimport { COMPONENTS, createDebugLogger, type DebugLogger } from './core/debugLogger';\n// Import the new actor-based formatting providers\nimport { createFormattingProvider } from './providers/actorFormattingProvider';\n// Keep legacy providers for fallback (imported dynamically when needed)\nimport {\n  ActorSpaFormattingProvider,\n  ActorSpaRangeFormattingProvider,\n} from './providers/formattingProvider';\n// Import reactive-lint provider\nimport { ReactiveLintProvider } from './providers/reactiveLintProvider';\n// Import simple formatting provider\nimport { SimpleFormattingProvider } from './providers/simpleFormattingProvider';\n\n// Global output channel for logging\nlet outputChannel: vscode.OutputChannel;\nlet debugLogger: DebugLogger;\n\nexport function activate(context: vscode.ExtensionContext) {\n  try {\n    // Get extension version from package.json\n    const extension = vscode.extensions.getExtension('actor-spa.actor-spa-framework');\n    const version = extension?.packageJSON?.version || 'unknown';\n\n    // Create output channel for logs\n    outputChannel = vscode.window.createOutputChannel('Actor-SPA Framework');\n    outputChannel.show(); // Make sure output channel is visible\n\n    // Initialize debug logger\n    debugLogger = createDebugLogger(outputChannel);\n\n    debugLogger.info(\n      COMPONENTS.EXTENSION,\n      `🚀 Actor-SPA Framework extension v${version} activated`\n    );\n\n    // Add detailed logging\n    debugLogger.debug(COMPONENTS.EXTENSION, 'Extension context details', {\n      extensionPath: context.extensionPath,\n      globalState: !!context.globalState,\n      workspaceState: !!context.workspaceState,\n      version,\n    });\n\n    // Get formatter configuration\n    const config = vscode.workspace.getConfiguration('actor-spa');\n    const formatterType = config.get<string>('formatting.formatter', 'simple');\n\n    // Create the appropriate formatter based on configuration\n    let formattingProvider: vscode.DocumentFormattingEditProvider;\n    let rangeFormattingProvider: vscode.DocumentRangeFormattingEditProvider;\n\n    switch (formatterType) {\n      case 'simple': {\n        debugLogger.info(COMPONENTS.EXTENSION, '🎯 Using Simple formatter (recommended)');\n        const simpleProvider = new SimpleFormattingProvider(outputChannel);\n        formattingProvider = simpleProvider;\n        rangeFormattingProvider = simpleProvider; // Simple provider implements both interfaces\n        break;\n      }\n\n      case 'actor': {\n        debugLogger.info(COMPONENTS.EXTENSION, '🤖 Using Actor-based formatter');\n        const actorProviders = createFormattingProvider(outputChannel, debugLogger);\n        formattingProvider = actorProviders.documentProvider;\n        rangeFormattingProvider = actorProviders.rangeProvider;\n        break;\n      }\n      default:\n        debugLogger.info(COMPONENTS.EXTENSION, '📦 Using Legacy formatter');\n        formattingProvider = new ActorSpaFormattingProvider(outputChannel);\n        rangeFormattingProvider = new ActorSpaRangeFormattingProvider(outputChannel);\n        break;\n    }\n\n    // Language selectors\n    const selector: vscode.DocumentSelector = [\n      { language: 'typescript', scheme: 'file' },\n      { language: 'javascript', scheme: 'file' },\n      { language: 'typescriptreact', scheme: 'file' },\n      { language: 'javascriptreact', scheme: 'file' },\n    ];\n\n    // Register providers with correct method names\n    const documentFormattingProvider = vscode.languages.registerDocumentFormattingEditProvider(\n      selector,\n      formattingProvider\n    );\n\n    const documentRangeFormattingProvider =\n      vscode.languages.registerDocumentRangeFormattingEditProvider(\n        selector,\n        rangeFormattingProvider\n      );\n\n    // Register reactive-lint provider\n    const reactiveLintProvider = new ReactiveLintProvider(outputChannel);\n    const codeActionProvider = vscode.languages.registerCodeActionsProvider(\n      selector,\n      reactiveLintProvider\n    );\n\n    // Set up reactive-lint diagnostics on document changes\n    const documentChangeListener = vscode.workspace.onDidChangeTextDocument((event) => {\n      if (\n        event.document.languageId === 'typescript' ||\n        event.document.languageId === 'typescriptreact'\n      ) {\n        // Debounce analysis to avoid excessive calls\n        setTimeout(() => {\n          reactiveLintProvider.analyzeFile(event.document);\n        }, 1000);\n      }\n    });\n\n    // Analyze open documents on startup\n    vscode.workspace.textDocuments.forEach((document) => {\n      if (document.languageId === 'typescript' || document.languageId === 'typescriptreact') {\n        reactiveLintProvider.analyzeFile(document);\n      }\n    });\n\n    // Register commands\n    const generateComponentCommand = vscode.commands.registerCommand(\n      'actor-spa.generateComponent',\n      () => {\n        debugLogger.info(COMPONENTS.EXTENSION, '📦 Generate Component command executed');\n        vscode.window.showInformationMessage('Actor-SPA: Generate Component command executed!');\n      }\n    );\n\n    const showReactivePatternDocsCommand = vscode.commands.registerCommand(\n      'actor-spa.showReactivePatternDocs',\n      (rule: string) => {\n        debugLogger.info(\n          COMPONENTS.EXTENSION,\n          `📖 Showing reactive pattern docs for rule: ${rule}`\n        );\n\n        // Open the reactive patterns documentation\n        const docUri = vscode.Uri.file(\n          `${vscode.workspace.workspaceFolders?.[0]?.uri.fsPath}/docs/REACTIVE_PATTERNS.md`\n        );\n\n        vscode.window.showTextDocument(docUri).then(\n          () => {\n            // Find the section for this rule\n            const editor = vscode.window.activeTextEditor;\n            if (editor) {\n              const document = editor.document;\n              const text = document.getText();\n              const searchPattern = new RegExp(`### \\\\d+\\\\. \\`${rule}\\``, 'i');\n              const match = text.match(searchPattern);\n\n              if (match && match.index !== undefined) {\n                const position = document.positionAt(match.index);\n                const range = new vscode.Range(position, position);\n                editor.selection = new vscode.Selection(range.start, range.end);\n                editor.revealRange(range, vscode.TextEditorRevealType.InCenter);\n              }\n            }\n          },\n          (error) => {\n            vscode.window.showErrorMessage(\n              `Could not open reactive patterns documentation: ${error.message}`\n            );\n          }\n        );\n      }\n    );\n\n    const generateMachineCommand = vscode.commands.registerCommand(\n      'actor-spa.generateMachine',\n      () => {\n        debugLogger.info(COMPONENTS.EXTENSION, '🤖 Generate Machine command executed');\n        vscode.window.showInformationMessage('Actor-SPA: Generate Machine command executed!');\n      }\n    );\n\n    // Initialize AI Communication\n    initializeAICommunication(context, outputChannel).catch((error) => {\n      debugLogger.error(\n        COMPONENTS.EXTENSION,\n        '❌ Failed to initialize AI Communication',\n        undefined,\n        error instanceof Error ? error : new Error(String(error))\n      );\n    });\n\n    // Register AI Communication commands\n    registerAICommunicationCommands(context);\n\n    // Add all disposables to context\n    context.subscriptions.push(\n      outputChannel,\n      documentFormattingProvider,\n      documentRangeFormattingProvider,\n      codeActionProvider,\n      documentChangeListener,\n      generateComponentCommand,\n      generateMachineCommand,\n      showReactivePatternDocsCommand,\n      reactiveLintProvider\n    );\n\n    debugLogger.info(COMPONENTS.EXTENSION, '✅ All providers registered successfully');\n  } catch (error) {\n    // Create output channel even if other initialization fails\n    if (!outputChannel) {\n      outputChannel = vscode.window.createOutputChannel('Actor-SPA Framework');\n    }\n\n    // Initialize debug logger for error handling\n    if (!debugLogger) {\n      debugLogger = createDebugLogger(outputChannel);\n    }\n\n    debugLogger.error(\n      COMPONENTS.EXTENSION,\n      '❌ Extension activation failed',\n      undefined,\n      error instanceof Error ? error : new Error(String(error))\n    );\n\n    // Try to continue with simple formatter as ultimate fallback\n    try {\n      const fallbackProvider = new SimpleFormattingProvider(outputChannel);\n      const selector: vscode.DocumentSelector = [\n        { language: 'typescript', scheme: 'file' },\n        { language: 'javascript', scheme: 'file' },\n        { language: 'typescriptreact', scheme: 'file' },\n        { language: 'javascriptreact', scheme: 'file' },\n      ];\n\n      const fallbackRegistration = vscode.languages.registerDocumentFormattingEditProvider(\n        selector,\n        fallbackProvider\n      );\n\n      context.subscriptions.push(outputChannel, fallbackRegistration);\n      debugLogger.info(COMPONENTS.EXTENSION, '🆘 Fallback to simple formatter activated');\n    } catch (fallbackError) {\n      debugLogger.error(\n        COMPONENTS.EXTENSION,\n        '💥 Fallback also failed',\n        undefined,\n        fallbackError instanceof Error ? fallbackError : new Error(String(fallbackError))\n      );\n    }\n  }\n}\n\nexport function deactivate() {\n  if (debugLogger) {\n    debugLogger.info(COMPONENTS.EXTENSION, '👋 Actor-SPA Framework extension deactivated');\n  }\n\n  // Cleanup AI Communication\n  cleanupAICommunication();\n\n  if (outputChannel) {\n    outputChannel.dispose();\n  }\n}\n\n// Export output channel for use in other modules\nexport function getOutputChannel(): vscode.OutputChannel {\n  return outputChannel;\n}\n\n// Export debug logger for use in other modules\nexport function getDebugLogger(): DebugLogger {\n  return debugLogger;\n}\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex\" }] */\n\n'use strict';\n\nconst { Duplex } = require('stream');\nconst { randomFillSync } = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst { EMPTY_BUFFER, kWebSocket, NOOP } = require('./constants');\nconst { isBlob, isValidStatusCode } = require('./validation');\nconst { mask: applyMask, toBuffer } = require('./buffer-util');\n\nconst kByteLength = Symbol('kByteLength');\nconst maskBuffer = Buffer.alloc(4);\nconst RANDOM_POOL_SIZE = 8 * 1024;\nlet randomPool;\nlet randomPoolPointer = RANDOM_POOL_SIZE;\n\nconst DEFAULT = 0;\nconst DEFLATING = 1;\nconst GET_BLOB_DATA = 2;\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {Duplex} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Function} [generateMask] The function used to generate the masking\n   *     key\n   */\n  constructor(socket, extensions, generateMask) {\n    this._extensions = extensions || {};\n\n    if (generateMask) {\n      this._generateMask = generateMask;\n      this._maskBuffer = Buffer.alloc(4);\n    }\n\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._queue = [];\n    this._state = DEFAULT;\n    this.onerror = NOOP;\n    this[kWebSocket] = undefined;\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {(Buffer|String)} data The data to frame\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {(Buffer|String)[]} The framed data\n   * @public\n   */\n  static frame(data, options) {\n    let mask;\n    let merge = false;\n    let offset = 2;\n    let skipMasking = false;\n\n    if (options.mask) {\n      mask = options.maskBuffer || maskBuffer;\n\n      if (options.generateMask) {\n        options.generateMask(mask);\n      } else {\n        if (randomPoolPointer === RANDOM_POOL_SIZE) {\n          /* istanbul ignore else  */\n          if (randomPool === undefined) {\n            //\n            // This is lazily initialized because server-sent frames must not\n            // be masked so it may never be used.\n            //\n            randomPool = Buffer.alloc(RANDOM_POOL_SIZE);\n          }\n\n          randomFillSync(randomPool, 0, RANDOM_POOL_SIZE);\n          randomPoolPointer = 0;\n        }\n\n        mask[0] = randomPool[randomPoolPointer++];\n        mask[1] = randomPool[randomPoolPointer++];\n        mask[2] = randomPool[randomPoolPointer++];\n        mask[3] = randomPool[randomPoolPointer++];\n      }\n\n      skipMasking = (mask[0] | mask[1] | mask[2] | mask[3]) === 0;\n      offset = 6;\n    }\n\n    let dataLength;\n\n    if (typeof data === 'string') {\n      if (\n        (!options.mask || skipMasking) &&\n        options[kByteLength] !== undefined\n      ) {\n        dataLength = options[kByteLength];\n      } else {\n        data = Buffer.from(data);\n        dataLength = data.length;\n      }\n    } else {\n      dataLength = data.length;\n      merge = options.mask && options.readOnly && !skipMasking;\n    }\n\n    let payloadLength = dataLength;\n\n    if (dataLength >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (dataLength > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? dataLength + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    target[1] = payloadLength;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(dataLength, 2);\n    } else if (payloadLength === 127) {\n      target[2] = target[3] = 0;\n      target.writeUIntBE(dataLength, 4, 6);\n    }\n\n    if (!options.mask) return [target, data];\n\n    target[1] |= 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (skipMasking) return [target, data];\n\n    if (merge) {\n      applyMask(data, mask, target, offset, dataLength);\n      return [target];\n    }\n\n    applyMask(data, mask, data, 0, dataLength);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {(String|Buffer)} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    let buf;\n\n    if (code === undefined) {\n      buf = EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || !data.length) {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      const length = Buffer.byteLength(data);\n\n      if (length > 123) {\n        throw new RangeError('The message must not be greater than 123 bytes');\n      }\n\n      buf = Buffer.allocUnsafe(2 + length);\n      buf.writeUInt16BE(code, 0);\n\n      if (typeof data === 'string') {\n        buf.write(data, 2);\n      } else {\n        buf.set(data, 2);\n      }\n    }\n\n    const options = {\n      [kByteLength]: buf.length,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x08,\n      readOnly: false,\n      rsv1: false\n    };\n\n    if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, buf, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(buf, options), cb);\n    }\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x09,\n      readOnly,\n      rsv1: false\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, false, options, cb]);\n      } else {\n        this.getBlobData(data, false, options, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x0a,\n      readOnly,\n      rsv1: false\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, false, options, cb]);\n      } else {\n        this.getBlobData(data, false, options, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  send(data, options, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    let opcode = options.binary ? 2 : 1;\n    let rsv1 = options.compress;\n\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (\n        rsv1 &&\n        perMessageDeflate &&\n        perMessageDeflate.params[\n          perMessageDeflate._isServer\n            ? 'server_no_context_takeover'\n            : 'client_no_context_takeover'\n        ]\n      ) {\n        rsv1 = byteLength >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    const opts = {\n      [kByteLength]: byteLength,\n      fin: options.fin,\n      generateMask: this._generateMask,\n      mask: options.mask,\n      maskBuffer: this._maskBuffer,\n      opcode,\n      readOnly,\n      rsv1\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, this._compress, opts, cb]);\n      } else {\n        this.getBlobData(data, this._compress, opts, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n    } else {\n      this.dispatch(data, this._compress, opts, cb);\n    }\n  }\n\n  /**\n   * Gets the contents of a blob as binary data.\n   *\n   * @param {Blob} blob The blob\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     the data\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  getBlobData(blob, compress, options, cb) {\n    this._bufferedBytes += options[kByteLength];\n    this._state = GET_BLOB_DATA;\n\n    blob\n      .arrayBuffer()\n      .then((arrayBuffer) => {\n        if (this._socket.destroyed) {\n          const err = new Error(\n            'The socket was closed while the blob was being read'\n          );\n\n          //\n          // `callCallbacks` is called in the next tick to ensure that errors\n          // that might be thrown in the callbacks behave like errors thrown\n          // outside the promise chain.\n          //\n          process.nextTick(callCallbacks, this, err, cb);\n          return;\n        }\n\n        this._bufferedBytes -= options[kByteLength];\n        const data = toBuffer(arrayBuffer);\n\n        if (!compress) {\n          this._state = DEFAULT;\n          this.sendFrame(Sender.frame(data, options), cb);\n          this.dequeue();\n        } else {\n          this.dispatch(data, compress, options, cb);\n        }\n      })\n      .catch((err) => {\n        //\n        // `onError` is called in the next tick for the same reason that\n        // `callCallbacks` above is.\n        //\n        process.nextTick(onError, this, err, cb);\n      });\n  }\n\n  /**\n   * Dispatches a message.\n   *\n   * @param {(Buffer|String)} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._bufferedBytes += options[kByteLength];\n    this._state = DEFLATING;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      if (this._socket.destroyed) {\n        const err = new Error(\n          'The socket was closed while data was being compressed'\n        );\n\n        callCallbacks(this, err, cb);\n        return;\n      }\n\n      this._bufferedBytes -= options[kByteLength];\n      this._state = DEFAULT;\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (this._state === DEFAULT && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[3][kByteLength];\n      Reflect.apply(params[0], this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[3][kByteLength];\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {(Buffer | String)[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.cork();\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n      this._socket.uncork();\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n\n/**\n * Calls queued callbacks with an error.\n *\n * @param {Sender} sender The `Sender` instance\n * @param {Error} err The error to call the callbacks with\n * @param {Function} [cb] The first callback\n * @private\n */\nfunction callCallbacks(sender, err, cb) {\n  if (typeof cb === 'function') cb(err);\n\n  for (let i = 0; i < sender._queue.length; i++) {\n    const params = sender._queue[i];\n    const callback = params[params.length - 1];\n\n    if (typeof callback === 'function') callback(err);\n  }\n}\n\n/**\n * Handles a `Sender` error.\n *\n * @param {Sender} sender The `Sender` instance\n * @param {Error} err The error\n * @param {Function} [cb] The first pending callback\n * @private\n */\nfunction onError(sender, err, cb) {\n  callCallbacks(sender, err, cb);\n  sender.onerror(err);\n}\n","module.exports = require(\"node:util\");","module.exports = require(\"node:os\");","'use strict';\n\nconst { kForOnEventAttribute, kListener } = require('./constants');\n\nconst kCode = Symbol('kCode');\nconst kData = Symbol('kData');\nconst kError = Symbol('kError');\nconst kMessage = Symbol('kMessage');\nconst kReason = Symbol('kReason');\nconst kTarget = Symbol('kTarget');\nconst kType = Symbol('kType');\nconst kWasClean = Symbol('kWasClean');\n\n/**\n * Class representing an event.\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @throws {TypeError} If the `type` argument is not specified\n   */\n  constructor(type) {\n    this[kTarget] = null;\n    this[kType] = type;\n  }\n\n  /**\n   * @type {*}\n   */\n  get target() {\n    return this[kTarget];\n  }\n\n  /**\n   * @type {String}\n   */\n  get type() {\n    return this[kType];\n  }\n}\n\nObject.defineProperty(Event.prototype, 'target', { enumerable: true });\nObject.defineProperty(Event.prototype, 'type', { enumerable: true });\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {Number} [options.code=0] The status code explaining why the\n   *     connection was closed\n   * @param {String} [options.reason=''] A human-readable string explaining why\n   *     the connection was closed\n   * @param {Boolean} [options.wasClean=false] Indicates whether or not the\n   *     connection was cleanly closed\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kCode] = options.code === undefined ? 0 : options.code;\n    this[kReason] = options.reason === undefined ? '' : options.reason;\n    this[kWasClean] = options.wasClean === undefined ? false : options.wasClean;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get code() {\n    return this[kCode];\n  }\n\n  /**\n   * @type {String}\n   */\n  get reason() {\n    return this[kReason];\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get wasClean() {\n    return this[kWasClean];\n  }\n}\n\nObject.defineProperty(CloseEvent.prototype, 'code', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'reason', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'wasClean', { enumerable: true });\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.error=null] The error that generated this event\n   * @param {String} [options.message=''] The error message\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kError] = options.error === undefined ? null : options.error;\n    this[kMessage] = options.message === undefined ? '' : options.message;\n  }\n\n  /**\n   * @type {*}\n   */\n  get error() {\n    return this[kError];\n  }\n\n  /**\n   * @type {String}\n   */\n  get message() {\n    return this[kMessage];\n  }\n}\n\nObject.defineProperty(ErrorEvent.prototype, 'error', { enumerable: true });\nObject.defineProperty(ErrorEvent.prototype, 'message', { enumerable: true });\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.data=null] The message content\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kData] = options.data === undefined ? null : options.data;\n  }\n\n  /**\n   * @type {*}\n   */\n  get data() {\n    return this[kData];\n  }\n}\n\nObject.defineProperty(MessageEvent.prototype, 'data', { enumerable: true });\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {(Function|Object)} handler The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */\n  addEventListener(type, handler, options = {}) {\n    for (const listener of this.listeners(type)) {\n      if (\n        !options[kForOnEventAttribute] &&\n        listener[kListener] === handler &&\n        !listener[kForOnEventAttribute]\n      ) {\n        return;\n      }\n    }\n\n    let wrapper;\n\n    if (type === 'message') {\n      wrapper = function onMessage(data, isBinary) {\n        const event = new MessageEvent('message', {\n          data: isBinary ? data : data.toString()\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'close') {\n      wrapper = function onClose(code, message) {\n        const event = new CloseEvent('close', {\n          code,\n          reason: message.toString(),\n          wasClean: this._closeFrameReceived && this._closeFrameSent\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'error') {\n      wrapper = function onError(error) {\n        const event = new ErrorEvent('error', {\n          error,\n          message: error.message\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'open') {\n      wrapper = function onOpen() {\n        const event = new Event('open');\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else {\n      return;\n    }\n\n    wrapper[kForOnEventAttribute] = !!options[kForOnEventAttribute];\n    wrapper[kListener] = handler;\n\n    if (options.once) {\n      this.once(type, wrapper);\n    } else {\n      this.on(type, wrapper);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {(Function|Object)} handler The listener to remove\n   * @public\n   */\n  removeEventListener(type, handler) {\n    for (const listener of this.listeners(type)) {\n      if (listener[kListener] === handler && !listener[kForOnEventAttribute]) {\n        this.removeListener(type, listener);\n        break;\n      }\n    }\n  }\n};\n\nmodule.exports = {\n  CloseEvent,\n  ErrorEvent,\n  Event,\n  EventTarget,\n  MessageEvent\n};\n\n/**\n * Call an event listener\n *\n * @param {(Function|Object)} listener The listener to call\n * @param {*} thisArg The value to use as `this`` when calling the listener\n * @param {Event} event The event to pass to the listener\n * @private\n */\nfunction callListener(listener, thisArg, event) {\n  if (typeof listener === 'object' && listener.handleEvent) {\n    listener.handleEvent.call(listener, event);\n  } else {\n    listener.call(thisArg, event);\n  }\n}\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst http = require('http');\nconst { Duplex } = require('stream');\nconst { createHash } = require('crypto');\n\nconst extension = require('./extension');\nconst PerMessageDeflate = require('./permessage-deflate');\nconst subprotocol = require('./subprotocol');\nconst WebSocket = require('./websocket');\nconst { GUID, kWebSocket } = require('./constants');\n\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\n\nconst RUNNING = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n   *     automatically send a pong in response to a ping\n   * @param {Number} [options.backlog=511] The maximum length of the queue of\n   *     pending connections\n   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n   *     track clients\n   * @param {Function} [options.handleProtocols] A hook to handle protocols\n   * @param {String} [options.host] The hostname where to bind the server\n   * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n   *     size\n   * @param {Boolean} [options.noServer=false] Enable no server mode\n   * @param {String} [options.path] Accept only connections matching this path\n   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n   *     permessage-deflate\n   * @param {Number} [options.port] The port where to bind the server\n   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n   *     server to use\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @param {Function} [options.verifyClient] A hook to reject connections\n   * @param {Function} [options.WebSocket=WebSocket] Specifies the `WebSocket`\n   *     class to use. It must be the `WebSocket` class or class that extends it\n   * @param {Function} [callback] A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = {\n      allowSynchronousEvents: true,\n      autoPong: true,\n      maxPayload: 100 * 1024 * 1024,\n      skipUTF8Validation: false,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null,\n      WebSocket,\n      ...options\n    };\n\n    if (\n      (options.port == null && !options.server && !options.noServer) ||\n      (options.port != null && (options.server || options.noServer)) ||\n      (options.server && options.noServer)\n    ) {\n      throw new TypeError(\n        'One and only one of the \"port\", \"server\", or \"noServer\" options ' +\n          'must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      const emitConnection = this.emit.bind(this, 'connection');\n\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, emitConnection);\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) {\n      this.clients = new Set();\n      this._shouldEmitClose = false;\n    }\n\n    this.options = options;\n    this._state = RUNNING;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Stop the server from accepting new connections and emit the `'close'` event\n   * when all existing connections are closed.\n   *\n   * @param {Function} [cb] A one-time listener for the `'close'` event\n   * @public\n   */\n  close(cb) {\n    if (this._state === CLOSED) {\n      if (cb) {\n        this.once('close', () => {\n          cb(new Error('The server is not running'));\n        });\n      }\n\n      process.nextTick(emitClose, this);\n      return;\n    }\n\n    if (cb) this.once('close', cb);\n\n    if (this._state === CLOSING) return;\n    this._state = CLOSING;\n\n    if (this.options.noServer || this.options.server) {\n      if (this._server) {\n        this._removeListeners();\n        this._removeListeners = this._server = null;\n      }\n\n      if (this.clients) {\n        if (!this.clients.size) {\n          process.nextTick(emitClose, this);\n        } else {\n          this._shouldEmitClose = true;\n        }\n      } else {\n        process.nextTick(emitClose, this);\n      }\n    } else {\n      const server = this._server;\n\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // The HTTP/S server was created internally. Close it, and rely on its\n      // `'close'` event.\n      //\n      server.close(() => {\n        emitClose(this);\n      });\n    }\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const key = req.headers['sec-websocket-key'];\n    const upgrade = req.headers.upgrade;\n    const version = +req.headers['sec-websocket-version'];\n\n    if (req.method !== 'GET') {\n      const message = 'Invalid HTTP method';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 405, message);\n      return;\n    }\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      const message = 'Invalid Upgrade header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (key === undefined || !keyRegex.test(key)) {\n      const message = 'Missing or invalid Sec-WebSocket-Key header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (version !== 13 && version !== 8) {\n      const message = 'Missing or invalid Sec-WebSocket-Version header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message, {\n        'Sec-WebSocket-Version': '13, 8'\n      });\n      return;\n    }\n\n    if (!this.shouldHandle(req)) {\n      abortHandshake(socket, 400);\n      return;\n    }\n\n    const secWebSocketProtocol = req.headers['sec-websocket-protocol'];\n    let protocols = new Set();\n\n    if (secWebSocketProtocol !== undefined) {\n      try {\n        protocols = subprotocol.parse(secWebSocketProtocol);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Protocol header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    const secWebSocketExtensions = req.headers['sec-websocket-extensions'];\n    const extensions = {};\n\n    if (\n      this.options.perMessageDeflate &&\n      secWebSocketExtensions !== undefined\n    ) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = extension.parse(secWebSocketExtensions);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        const message =\n          'Invalid or unacceptable Sec-WebSocket-Extensions header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.socket.authorized || req.socket.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(\n            extensions,\n            key,\n            protocols,\n            req,\n            socket,\n            head,\n            cb\n          );\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(extensions, key, protocols, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {Object} extensions The accepted extensions\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Set} protocols The subprotocols\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */\n  completeUpgrade(extensions, key, protocols, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    if (socket[kWebSocket]) {\n      throw new Error(\n        'server.handleUpgrade() was called more than once with the same ' +\n          'socket, possibly due to a misconfiguration'\n      );\n    }\n\n    if (this._state > RUNNING) return abortHandshake(socket, 503);\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${digest}`\n    ];\n\n    const ws = new this.options.WebSocket(null, undefined, this.options);\n\n    if (protocols.size) {\n      //\n      // Optionally call external protocol selection handler.\n      //\n      const protocol = this.options.handleProtocols\n        ? this.options.handleProtocols(protocols, req)\n        : protocols.values().next().value;\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws._protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = extension.format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, {\n      allowSynchronousEvents: this.options.allowSynchronousEvents,\n      maxPayload: this.options.maxPayload,\n      skipUTF8Validation: this.options.skipUTF8Validation\n    });\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => {\n        this.clients.delete(ws);\n\n        if (this._shouldEmitClose && !this.clients.size) {\n          process.nextTick(emitClose, this);\n        }\n      });\n    }\n\n    cb(ws, req);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when\n *     called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server._state = CLOSED;\n  server.emit('close');\n}\n\n/**\n * Handle socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  //\n  // The socket is writable unless the user destroyed or ended it before calling\n  // `server.handleUpgrade()` or in the `verifyClient` function, which is a user\n  // error. Handling this does not make much sense as the worst that can happen\n  // is that some of the data written by the user might be discarded due to the\n  // call to `socket.end()` below, which triggers an `'error'` event that in\n  // turn causes the socket to be destroyed.\n  //\n  message = message || http.STATUS_CODES[code];\n  headers = {\n    Connection: 'close',\n    'Content-Type': 'text/html',\n    'Content-Length': Buffer.byteLength(message),\n    ...headers\n  };\n\n  socket.once('finish', socket.destroy);\n\n  socket.end(\n    `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n      Object.keys(headers)\n        .map((h) => `${h}: ${headers[h]}`)\n        .join('\\r\\n') +\n      '\\r\\n\\r\\n' +\n      message\n  );\n}\n\n/**\n * Emit a `'wsClientError'` event on a `WebSocketServer` if there is at least\n * one listener for it, otherwise call `abortHandshake()`.\n *\n * @param {WebSocketServer} server The WebSocket server\n * @param {http.IncomingMessage} req The request object\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} message The HTTP response body\n * @param {Object} [headers] The HTTP response headers\n * @private\n */\nfunction abortHandshakeOrEmitwsClientError(\n  server,\n  req,\n  socket,\n  code,\n  message,\n  headers\n) {\n  if (server.listenerCount('wsClientError')) {\n    const err = new Error(message);\n    Error.captureStackTrace(err, abortHandshakeOrEmitwsClientError);\n\n    server.emit('wsClientError', err, socket, req);\n  } else {\n    abortHandshake(socket, code, message, headers);\n  }\n}\n","module.exports = require(\"http\");","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Parses the `Sec-WebSocket-Protocol` header into a set of subprotocol names.\n *\n * @param {String} header The field value of the header\n * @return {Set} The subprotocol names\n * @public\n */\nfunction parse(header) {\n  const protocols = new Set();\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (i; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (end === -1 && tokenChars[code] === 1) {\n      if (start === -1) start = i;\n    } else if (\n      i !== 0 &&\n      (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n    ) {\n      if (end === -1 && start !== -1) end = i;\n    } else if (code === 0x2c /* ',' */) {\n      if (start === -1) {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n\n      if (end === -1) end = i;\n\n      const protocol = header.slice(start, end);\n\n      if (protocols.has(protocol)) {\n        throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n      }\n\n      protocols.add(protocol);\n      start = end = -1;\n    } else {\n      throw new SyntaxError(`Unexpected character at index ${i}`);\n    }\n  }\n\n  if (start === -1 || end !== -1) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  const protocol = header.slice(start, i);\n\n  if (protocols.has(protocol)) {\n    throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n  }\n\n  protocols.add(protocol);\n  return protocols;\n}\n\nmodule.exports = { parse };\n","module.exports = require(\"util\");","'use strict';\n\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst { kStatusCode } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed if context takeover is disabled\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) {\n        data = new FastBuffer(data.buffer, data.byteOffset, data.length - 4);\n      }\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n\n  //\n  // The choice to employ `zlib.reset()` over `zlib.close()` is dictated by the\n  // fact that in Node.js versions prior to 13.10.0, the callback for\n  // `zlib.flush()` is not called if `zlib.close()` is used. Utilizing\n  // `zlib.reset()` ensures that either the callback is invoked or an error is\n  // emitted.\n  //\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n\n  if (this[kError]) {\n    this[kCallback](this[kError]);\n    return;\n  }\n\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n","/**\n * WebSocket Server Actor\n *\n * This actor manages a WebSocket server for real-time AI-to-AI communication.\n * It handles connections, message routing, and connection health monitoring.\n */\n\nimport { randomUUID } from 'node:crypto';\nimport * as http from 'node:http';\nimport * as WebSocket from 'ws';\nimport { assign, createActor, fromPromise, setup } from 'xstate';\nimport type { DebugLogger } from '../core/debugLogger';\nimport type { AIAgent, AIMessage } from '../types/aiCommunication';\n\nconst WS_COMPONENT = 'WEBSOCKET_SERVER';\n\n/**\n * WebSocket client connection\n */\nexport interface WSConnection {\n  id: string;\n  ws: WebSocket.WebSocket;\n  agent: AIAgent;\n  connectedAt: number;\n  lastActivity: number;\n  messageCount: number;\n}\n\n/**\n * WebSocket server configuration\n */\nexport interface WSServerConfig {\n  port: number;\n  host: string;\n  maxConnections: number;\n  heartbeatInterval: number;\n  connectionTimeout: number;\n  messageTimeout: number;\n  maxMessageSize: number;\n}\n\n/**\n * WebSocket server context\n */\nexport interface WSServerContext {\n  server: WebSocket.Server | null;\n  httpServer: http.Server | null;\n  connections: Map<string, WSConnection>;\n  config: WSServerConfig;\n  stats: {\n    totalConnections: number;\n    activeConnections: number;\n    messagesSent: number;\n    messagesReceived: number;\n    errors: number;\n  };\n  errors: Error[];\n}\n\n/**\n * WebSocket server events\n */\nexport type WSServerEvent =\n  | { type: 'START' }\n  | { type: 'STOP' }\n  | { type: 'CONNECTION'; ws: WebSocket.WebSocket; agent: AIAgent }\n  | { type: 'DISCONNECTION'; connectionId: string }\n  | { type: 'MESSAGE'; connectionId: string; message: AIMessage }\n  | { type: 'BROADCAST'; message: AIMessage; excludeId?: string }\n  | { type: 'SEND_TO'; connectionId: string; message: AIMessage }\n  | { type: 'HEARTBEAT' }\n  | { type: 'ERROR'; error: Error };\n\n/**\n * Default server configuration\n */\nconst defaultServerConfig: WSServerConfig = {\n  port: 8765,\n  host: 'localhost',\n  maxConnections: 100,\n  heartbeatInterval: 30000, // 30 seconds\n  connectionTimeout: 60000, // 60 seconds\n  messageTimeout: 30000, // 30 seconds\n  maxMessageSize: 1024 * 1024, // 1MB\n};\n\n/**\n * Actor for starting the WebSocket server\n */\nconst startServerActor = fromPromise(\n  async ({\n    input,\n  }: {\n    input: {\n      config: WSServerConfig;\n      onConnection: (ws: WebSocket.WebSocket) => void;\n      debugLogger?: DebugLogger;\n    };\n  }) => {\n    const { config, onConnection, debugLogger } = input;\n\n    return new Promise<{ server: WebSocket.Server; httpServer: http.Server }>((resolve, reject) => {\n      // Create HTTP server\n      const httpServer = http.createServer();\n\n      // Create WebSocket server\n      const wsServer = new WebSocket.Server({\n        server: httpServer,\n        maxPayload: config.maxMessageSize,\n      });\n\n      // Set up connection handler\n      wsServer.on('connection', (ws) => {\n        debugLogger?.info(WS_COMPONENT, 'New WebSocket connection');\n        onConnection(ws);\n      });\n\n      // Set up error handler\n      wsServer.on('error', (error) => {\n        debugLogger?.error(WS_COMPONENT, 'WebSocket server error', undefined, error);\n        reject(error);\n      });\n\n      // Start HTTP server\n      httpServer.listen(config.port, config.host, () => {\n        debugLogger?.info(\n          WS_COMPONENT,\n          `WebSocket server started on ${config.host}:${config.port}`\n        );\n        resolve({ server: wsServer, httpServer });\n      });\n\n      httpServer.on('error', (error) => {\n        debugLogger?.error(WS_COMPONENT, 'HTTP server error', undefined, error);\n        reject(error);\n      });\n    });\n  }\n);\n\n/**\n * Actor for stopping the WebSocket server\n */\nconst stopServerActor = fromPromise(\n  async ({\n    input,\n  }: {\n    input: {\n      server: WebSocket.Server | null;\n      httpServer: http.Server | null;\n      connections: Map<string, WSConnection>;\n    };\n  }) => {\n    const { server, httpServer, connections } = input;\n\n    // Close all connections\n    connections.forEach((conn) => {\n      if (conn.ws.readyState === WebSocket.OPEN) {\n        conn.ws.close(1000, 'Server shutting down');\n      }\n    });\n\n    // Close WebSocket server\n    if (server) {\n      await new Promise<void>((resolve) => {\n        server.close(() => resolve());\n      });\n    }\n\n    // Close HTTP server\n    if (httpServer) {\n      await new Promise<void>((resolve) => {\n        httpServer.close(() => resolve());\n      });\n    }\n  }\n);\n\n/**\n * Create the WebSocket server state machine\n */\nexport const webSocketServerMachine = setup({\n  types: {\n    context: {} as WSServerContext,\n    events: {} as WSServerEvent,\n  },\n  actors: {\n    startServer: startServerActor,\n    stopServer: stopServerActor,\n  },\n  actions: {\n    /**\n     * Initialize context\n     */\n    initialize: assign({\n      config: () => defaultServerConfig,\n      connections: () => new Map(),\n      stats: () => ({\n        totalConnections: 0,\n        activeConnections: 0,\n        messagesSent: 0,\n        messagesReceived: 0,\n        errors: 0,\n      }),\n      errors: () => [],\n    }),\n\n    /**\n     * Set server instances\n     */\n    setServer: assign({\n      server: ({ event }) => {\n        if ('output' in event) {\n          const doneEvent = event as {\n            output: { server: WebSocket.Server; httpServer: http.Server };\n          };\n          return doneEvent.output.server;\n        }\n        return null;\n      },\n      httpServer: ({ event }) => {\n        if ('output' in event) {\n          const doneEvent = event as {\n            output: { server: WebSocket.Server; httpServer: http.Server };\n          };\n          return doneEvent.output.httpServer;\n        }\n        return null;\n      },\n    }),\n\n    /**\n     * Add connection\n     */\n    addConnection: assign({\n      connections: ({ context, event }) => {\n        if (event.type !== 'CONNECTION') return context.connections;\n\n        const connection: WSConnection = {\n          id: randomUUID(),\n          ws: event.ws,\n          agent: event.agent,\n          connectedAt: Date.now(),\n          lastActivity: Date.now(),\n          messageCount: 0,\n        };\n\n        const connections = new Map(context.connections);\n        connections.set(connection.id, connection);\n\n        // Set up message handler\n        event.ws.on('message', (data) => {\n          try {\n            const _message = JSON.parse(data.toString()) as AIMessage;\n            // Send message event to actor system - can't send from here\n            // Messages should be handled through the actor system's event handling\n          } catch (_error) {}\n        });\n\n        // Set up close handler\n        event.ws.on('close', () => {\n          // Disconnection will be handled when the connection is checked\n          connections.delete(connection.id);\n        });\n\n        // Set up error handler\n        event.ws.on('error', (_error) => {\n          // Errors will be handled through the actor system\n        });\n\n        return connections;\n      },\n      stats: ({ context, event }) => {\n        if (event.type !== 'CONNECTION') return context.stats;\n\n        return {\n          ...context.stats,\n          totalConnections: context.stats.totalConnections + 1,\n          activeConnections: context.stats.activeConnections + 1,\n        };\n      },\n    }),\n\n    /**\n     * Remove connection\n     */\n    removeConnection: assign({\n      connections: ({ context, event }) => {\n        if (event.type !== 'DISCONNECTION') return context.connections;\n\n        const connections = new Map(context.connections);\n        connections.delete(event.connectionId);\n\n        return connections;\n      },\n      stats: ({ context, event }) => {\n        if (event.type !== 'DISCONNECTION') return context.stats;\n\n        return {\n          ...context.stats,\n          activeConnections: Math.max(0, context.stats.activeConnections - 1),\n        };\n      },\n    }),\n\n    /**\n     * Handle incoming message\n     */\n    handleMessage: assign({\n      connections: ({ context, event }) => {\n        if (event.type !== 'MESSAGE') return context.connections;\n\n        const connections = new Map(context.connections);\n        const connection = connections.get(event.connectionId);\n\n        if (connection) {\n          connection.lastActivity = Date.now();\n          connection.messageCount++;\n        }\n\n        return connections;\n      },\n      stats: ({ context, event }) => {\n        if (event.type !== 'MESSAGE') return context.stats;\n\n        return {\n          ...context.stats,\n          messagesReceived: context.stats.messagesReceived + 1,\n        };\n      },\n    }),\n\n    /**\n     * Broadcast message to all connections\n     */\n    broadcastMessage: ({ context, event }) => {\n      if (event.type !== 'BROADCAST') return;\n\n      const { message, excludeId } = event;\n      let sentCount = 0;\n\n      context.connections.forEach((conn, id) => {\n        if (id !== excludeId && conn.ws.readyState === WebSocket.OPEN) {\n          try {\n            conn.ws.send(JSON.stringify(message));\n            sentCount++;\n          } catch (_error) {}\n        }\n      });\n\n      context.stats.messagesSent += sentCount;\n    },\n\n    /**\n     * Send message to specific connection\n     */\n    sendToConnection: ({ context, event }) => {\n      if (event.type !== 'SEND_TO') return;\n\n      const { connectionId, message } = event;\n      const connection = context.connections.get(connectionId);\n\n      if (connection && connection.ws.readyState === WebSocket.OPEN) {\n        try {\n          connection.ws.send(JSON.stringify(message));\n          context.stats.messagesSent++;\n        } catch (_error) {}\n      }\n    },\n\n    /**\n     * Check connection health\n     */\n    checkConnections: ({ context }) => {\n      const now = Date.now();\n      const timeout = context.config.connectionTimeout;\n\n      context.connections.forEach((conn, _id) => {\n        if (now - conn.lastActivity > timeout) {\n          // Connection timed out\n          if (conn.ws.readyState === WebSocket.OPEN) {\n            conn.ws.close(1000, 'Connection timeout');\n          }\n        } else if (conn.ws.readyState === WebSocket.OPEN) {\n          // Send ping\n          conn.ws.ping();\n        }\n      });\n    },\n\n    /**\n     * Clear server instances\n     */\n    clearServer: assign({\n      server: () => null,\n      httpServer: () => null,\n    }),\n\n    /**\n     * Log error\n     */\n    logError: assign({\n      errors: ({ context, event }) => {\n        if (event.type === 'ERROR') {\n          return [...context.errors, event.error];\n        }\n        return context.errors;\n      },\n      stats: ({ context, event }) => {\n        if (event.type === 'ERROR') {\n          return {\n            ...context.stats,\n            errors: context.stats.errors + 1,\n          };\n        }\n        return context.stats;\n      },\n    }),\n  },\n}).createMachine({\n  id: 'webSocketServer',\n  initial: 'stopped',\n  context: {\n    server: null,\n    httpServer: null,\n    connections: new Map(),\n    config: defaultServerConfig,\n    stats: {\n      totalConnections: 0,\n      activeConnections: 0,\n      messagesSent: 0,\n      messagesReceived: 0,\n      errors: 0,\n    },\n    errors: [],\n  },\n  states: {\n    stopped: {\n      entry: 'initialize',\n      on: {\n        START: 'starting',\n      },\n    },\n\n    starting: {\n      invoke: {\n        id: 'startServer',\n        src: 'startServer',\n        input: ({ context, self }) => ({\n          config: context.config,\n          onConnection: (ws: WebSocket.WebSocket) => {\n            // This will be called for each new connection\n            // We need to wait for the agent handshake\n            ws.once('message', (data) => {\n              try {\n                const handshake = JSON.parse(data.toString());\n                if (handshake.type === 'HANDSHAKE' && handshake.agent) {\n                  self.send({\n                    type: 'CONNECTION',\n                    ws,\n                    agent: handshake.agent,\n                  });\n                }\n              } catch (_error) {\n                ws.close(1002, 'Invalid handshake');\n              }\n            });\n          },\n          debugLogger: undefined,\n        }),\n        onDone: {\n          target: 'running',\n          actions: 'setServer',\n        },\n        onError: {\n          target: 'stopped',\n          actions: 'logError',\n        },\n      },\n    },\n\n    running: {\n      // TODO: Add heartbeat functionality\n      on: {\n        CONNECTION: {\n          actions: 'addConnection',\n        },\n        DISCONNECTION: {\n          actions: 'removeConnection',\n        },\n        MESSAGE: {\n          actions: 'handleMessage',\n        },\n        BROADCAST: {\n          actions: 'broadcastMessage',\n        },\n        SEND_TO: {\n          actions: 'sendToConnection',\n        },\n        HEARTBEAT: {\n          actions: 'checkConnections',\n        },\n        STOP: 'stopping',\n        ERROR: {\n          actions: 'logError',\n        },\n      },\n    },\n\n    stopping: {\n      invoke: {\n        id: 'stopServer',\n        src: 'stopServer',\n        input: ({ context }) => ({\n          server: context.server,\n          httpServer: context.httpServer,\n          connections: context.connections,\n        }),\n        onDone: {\n          target: 'stopped',\n          actions: 'clearServer',\n        },\n        onError: {\n          target: 'stopped',\n          actions: ['logError', 'clearServer'],\n        },\n      },\n    },\n  },\n});\n\n/**\n * Create and start a WebSocket server actor\n */\nexport function createWebSocketServer(config?: Partial<WSServerConfig>, debugLogger?: DebugLogger) {\n  const actor = createActor(webSocketServerMachine, {\n    input: {\n      config: { ...defaultServerConfig, ...config },\n    },\n  });\n\n  if (debugLogger) {\n    actor.subscribe((state) => {\n      debugLogger.debug(WS_COMPONENT, `State: ${JSON.stringify(state.value)}`, {\n        activeConnections: state.context.connections.size,\n        stats: state.context.stats,\n      });\n    });\n  }\n\n  return actor;\n}\n\n/**\n * WebSocket client for AI agents to connect to the server\n */\nexport class AIWebSocketClient {\n  private ws: WebSocket.WebSocket | null = null;\n  private agent: AIAgent;\n  private url: string;\n  private reconnectAttempts = 0;\n  private maxReconnectAttempts = 5;\n  private reconnectDelay = 1000;\n\n  constructor(agent: AIAgent, url = 'ws://localhost:8765') {\n    this.agent = agent;\n    this.url = url;\n  }\n\n  connect(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.ws = new WebSocket.WebSocket(this.url);\n\n      this.ws.on('open', () => {\n        // Send handshake\n        this.ws?.send(\n          JSON.stringify({\n            type: 'HANDSHAKE',\n            agent: this.agent,\n          })\n        );\n\n        this.reconnectAttempts = 0;\n        resolve();\n      });\n\n      this.ws.on('error', (error) => {\n        reject(error);\n      });\n\n      this.ws.on('close', () => {\n        this.handleDisconnect();\n      });\n    });\n  }\n\n  private handleDisconnect() {\n    if (this.reconnectAttempts < this.maxReconnectAttempts) {\n      this.reconnectAttempts++;\n      setTimeout(() => {\n        this.connect().catch(console.error);\n      }, this.reconnectDelay * this.reconnectAttempts);\n    }\n  }\n\n  send(message: AIMessage): void {\n    if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n      this.ws.send(JSON.stringify(message));\n    } else {\n      throw new Error('WebSocket not connected');\n    }\n  }\n\n  onMessage(handler: (message: AIMessage) => void): void {\n    if (this.ws) {\n      this.ws.on('message', (data) => {\n        try {\n          const message = JSON.parse(data.toString()) as AIMessage;\n          handler(message);\n        } catch (_error) {}\n      });\n    }\n  }\n\n  close(): void {\n    if (this.ws) {\n      this.ws.close();\n      this.ws = null;\n    }\n  }\n}\n","/**\n * AI Communication Bridge Actor\n *\n * This actor manages communication between different AI agents (Claude, Cursor, etc.)\n * using the actor model pattern with XState v5.\n */\n\nimport { randomUUID } from 'node:crypto';\nimport * as fs from 'node:fs/promises';\nimport * as path from 'node:path';\nimport * as vscode from 'vscode';\nimport { assign, createActor, fromPromise, setup } from 'xstate';\nimport { createDebugLogger, type DebugLogger } from '../core/debugLogger';\nimport {\n  type AIAgent,\n  type AICommunicationContext,\n  type AICommunicationEvent,\n  type AIMessage,\n  CommunicationChannel,\n  type CommunicationConfig,\n  MessagePriority,\n  type MessageSubscription,\n  type MessageType,\n} from '../types/aiCommunication';\n\n// Create a dedicated component for AI communication logging\nconst AI_COMM_COMPONENT = 'AI_COMMUNICATION';\n\n/**\n * Default configuration for AI communication\n */\nconst defaultConfig: CommunicationConfig = {\n  maxQueueSize: 1000,\n  maxHistorySize: 10000,\n  messageTimeout: 30000, // 30 seconds\n  retryAttempts: 3,\n  retryDelay: 1000, // 1 second\n  enableEncryption: false,\n  enableCompression: false,\n  communicationMethod: 'file',\n  fileStoragePath: '.ai-messages',\n};\n\n/**\n * Actor for persisting messages to file system\n */\nconst persistMessageActor = fromPromise(\n  async ({\n    input,\n  }: {\n    input: {\n      message: AIMessage;\n      storagePath: string;\n    };\n  }) => {\n    const { message, storagePath } = input;\n\n    // Ensure storage directory exists\n    const storageDir = path.join(\n      vscode.workspace.workspaceFolders?.[0]?.uri.fsPath || process.cwd(),\n      storagePath\n    );\n\n    await fs.mkdir(storageDir, { recursive: true });\n\n    // Write message to file\n    const fileName = `${message.timestamp}-${message.id}.json`;\n    const filePath = path.join(storageDir, fileName);\n\n    await fs.writeFile(filePath, JSON.stringify(message, null, 2), 'utf8');\n\n    return filePath;\n  }\n);\n\n/**\n * Actor for reading message history from file system\n */\nconst loadMessageHistoryActor = fromPromise(\n  async ({\n    input,\n  }: {\n    input: {\n      storagePath: string;\n      since?: number;\n    };\n  }) => {\n    const { storagePath, since = 0 } = input;\n\n    const storageDir = path.join(\n      vscode.workspace.workspaceFolders?.[0]?.uri.fsPath || process.cwd(),\n      storagePath\n    );\n\n    try {\n      const files = await fs.readdir(storageDir);\n      const messages: AIMessage[] = [];\n\n      for (const file of files) {\n        if (file.endsWith('.json')) {\n          const filePath = path.join(storageDir, file);\n          const content = await fs.readFile(filePath, 'utf8');\n          const message = JSON.parse(content) as AIMessage;\n\n          if (message.timestamp >= since) {\n            messages.push(message);\n          }\n        }\n      }\n\n      return messages.sort((a, b) => a.timestamp - b.timestamp);\n    } catch (_error) {\n      // Directory might not exist yet\n      return [];\n    }\n  }\n);\n\n/**\n * Actor for processing outgoing messages\n */\nconst processOutgoingMessageActor = fromPromise(\n  async ({\n    input,\n  }: {\n    input: {\n      message: AIMessage;\n      config: CommunicationConfig;\n      debugLogger?: DebugLogger;\n    };\n  }) => {\n    const { message, config, debugLogger } = input;\n\n    debugLogger?.info(AI_COMM_COMPONENT, 'Processing outgoing message', {\n      messageId: message.id,\n      type: message.type,\n      target: typeof message.target === 'string' ? message.target : message.target.id,\n    });\n\n    // Apply encryption if enabled\n    if (config.enableEncryption && !message.metadata.encrypted) {\n      // TODO: Implement encryption\n      debugLogger?.debug(AI_COMM_COMPONENT, 'Encryption not yet implemented');\n    }\n\n    // Apply compression if enabled\n    if (config.enableCompression && !message.metadata.compressed) {\n      // TODO: Implement compression\n      debugLogger?.debug(AI_COMM_COMPONENT, 'Compression not yet implemented');\n    }\n\n    // Sign the message\n    // TODO: Implement message signing\n    const signedMessage = {\n      ...message,\n      signature: 'not-implemented',\n    };\n\n    return signedMessage;\n  }\n);\n\n/**\n * Create the AI Communication Bridge state machine\n */\nexport const aiCommunicationBridgeMachine = setup({\n  types: {\n    context: {} as AICommunicationContext,\n    events: {} as AICommunicationEvent,\n  },\n  actors: {\n    persistMessage: persistMessageActor,\n    loadMessageHistory: loadMessageHistoryActor,\n    processOutgoingMessage: processOutgoingMessageActor,\n  },\n  actions: {\n    /**\n     * Initialize context with configuration\n     */\n    initialize: assign({\n      agents: () => new Map<string, AIAgent>(),\n      messageQueue: () => [],\n      messageHistory: () => [],\n      subscriptions: () =>\n        new Map<CommunicationChannel, Set<MessageSubscription>>([\n          [CommunicationChannel.CODE_REVIEW, new Set()],\n          [CommunicationChannel.REFACTORING, new Set()],\n          [CommunicationChannel.ARCHITECTURE, new Set()],\n          [CommunicationChannel.TASK_COORDINATION, new Set()],\n          [CommunicationChannel.KNOWLEDGE_SHARING, new Set()],\n          [CommunicationChannel.SYSTEM, new Set()],\n          [CommunicationChannel.GENERAL, new Set()],\n        ]),\n      stats: () => ({\n        messagesSent: 0,\n        messagesReceived: 0,\n        messagesDropped: 0,\n        averageLatency: 0,\n        activeConnections: 0,\n        lastActivity: Date.now(),\n      }),\n      config: () => ({\n        ...defaultConfig,\n        ...vscode.workspace.getConfiguration('actor-spa.aiCommunication').get('config', {}),\n      }),\n      errors: () => [],\n    }),\n\n    /**\n     * Queue a message for sending\n     */\n    queueMessage: assign({\n      messageQueue: ({ context, event }) => {\n        if (event.type !== 'SEND_MESSAGE') return context.messageQueue;\n\n        const { message } = event;\n        const queue = [...context.messageQueue, message];\n\n        // Enforce max queue size\n        if (queue.length > context.config.maxQueueSize) {\n          // Remove oldest messages\n          const dropped = queue.splice(0, queue.length - context.config.maxQueueSize);\n          // Update stats\n          context.stats.messagesDropped += dropped.length;\n        }\n\n        return queue;\n      },\n      stats: ({ context, event }) => {\n        if (event.type !== 'SEND_MESSAGE') return context.stats;\n\n        return {\n          ...context.stats,\n          messagesSent: context.stats.messagesSent + 1,\n          lastActivity: Date.now(),\n        };\n      },\n    }),\n\n    /**\n     * Process received message\n     */\n    processReceivedMessage: assign({\n      messageHistory: ({ context, event }) => {\n        if (event.type !== 'MESSAGE_RECEIVED') return context.messageHistory;\n\n        const history = [...context.messageHistory, event.message];\n\n        // Enforce max history size\n        if (history.length > context.config.maxHistorySize) {\n          history.splice(0, history.length - context.config.maxHistorySize);\n        }\n\n        return history;\n      },\n      stats: ({ context, event }) => {\n        if (event.type !== 'MESSAGE_RECEIVED') return context.stats;\n\n        const latency = Date.now() - event.message.timestamp;\n        const totalMessages = context.stats.messagesReceived + 1;\n        const newAverageLatency =\n          (context.stats.averageLatency * context.stats.messagesReceived + latency) / totalMessages;\n\n        return {\n          ...context.stats,\n          messagesReceived: totalMessages,\n          averageLatency: newAverageLatency,\n          lastActivity: Date.now(),\n        };\n      },\n    }),\n\n    /**\n     * Notify subscribers of a message\n     */\n    notifySubscribers: ({ context, event }) => {\n      if (event.type !== 'MESSAGE_RECEIVED') return;\n\n      const { message } = event;\n      const channelSubscribers = context.subscriptions.get(message.metadata.channel);\n\n      if (channelSubscribers) {\n        channelSubscribers.forEach((subscription) => {\n          // Apply filters\n          if (subscription.filter) {\n            const { types, sources, priority } = subscription.filter;\n\n            if (types && !types.includes(message.type)) return;\n            if (sources && !sources.includes(message.source.id)) return;\n            if (priority !== undefined && message.metadata.priority < priority) return;\n          }\n\n          // Call handler\n          try {\n            subscription.handler(message);\n          } catch (_error) {}\n        });\n      }\n    },\n\n    /**\n     * Add subscription\n     */\n    addSubscription: assign({\n      subscriptions: ({ context, event }) => {\n        if (event.type !== 'SUBSCRIBE') return context.subscriptions;\n\n        const { channel, callback } = event;\n        const subscription: MessageSubscription = {\n          id: randomUUID(),\n          channel,\n          handler: callback,\n        };\n\n        const channelSubscriptions = context.subscriptions.get(channel) || new Set();\n        channelSubscriptions.add(subscription);\n\n        const newSubscriptions = new Map(context.subscriptions);\n        newSubscriptions.set(channel, channelSubscriptions);\n\n        return newSubscriptions;\n      },\n    }),\n\n    /**\n     * Remove subscription\n     */\n    removeSubscription: assign({\n      subscriptions: ({ context, event }) => {\n        if (event.type !== 'UNSUBSCRIBE') return context.subscriptions;\n\n        const { channel, handlerId } = event;\n        const channelSubscriptions = context.subscriptions.get(channel);\n\n        if (channelSubscriptions) {\n          const filtered = new Set(\n            Array.from(channelSubscriptions).filter((sub) => sub.id !== handlerId)\n          );\n\n          const newSubscriptions = new Map(context.subscriptions);\n          newSubscriptions.set(channel, filtered);\n\n          return newSubscriptions;\n        }\n\n        return context.subscriptions;\n      },\n    }),\n\n    /**\n     * Register an AI agent\n     */\n    registerAgent: assign({\n      agents: ({ context, event }) => {\n        if (event.type !== 'CONNECT') return context.agents;\n\n        const { agent } = event;\n        const agents = new Map(context.agents);\n        agents.set(agent.id, agent);\n\n        return agents;\n      },\n      stats: ({ context, event }) => {\n        if (event.type !== 'CONNECT') return context.stats;\n\n        return {\n          ...context.stats,\n          activeConnections: context.stats.activeConnections + 1,\n          lastActivity: Date.now(),\n        };\n      },\n    }),\n\n    /**\n     * Unregister an AI agent\n     */\n    unregisterAgent: assign({\n      agents: ({ context, event }) => {\n        if (event.type !== 'DISCONNECT') return context.agents;\n\n        const { agentId } = event;\n        const agents = new Map(context.agents);\n        agents.delete(agentId);\n\n        return agents;\n      },\n      stats: ({ context, event }) => {\n        if (event.type !== 'DISCONNECT') return context.stats;\n\n        return {\n          ...context.stats,\n          activeConnections: Math.max(0, context.stats.activeConnections - 1),\n          lastActivity: Date.now(),\n        };\n      },\n    }),\n\n    /**\n     * Clear message history\n     */\n    clearHistory: assign({\n      messageHistory: () => [],\n      stats: ({ context }) => ({\n        ...context.stats,\n        lastActivity: Date.now(),\n      }),\n    }),\n\n    /**\n     * Log error\n     */\n    logError: assign({\n      errors: ({ context, event }) => {\n        if (event.type !== 'ERROR') return context.errors;\n\n        return [...context.errors, event.error];\n      },\n    }),\n  },\n}).createMachine({\n  id: 'aiCommunicationBridge',\n  initial: 'initializing',\n  context: {\n    agents: new Map(),\n    messageQueue: [],\n    messageHistory: [],\n    subscriptions: new Map(),\n    stats: {\n      messagesSent: 0,\n      messagesReceived: 0,\n      messagesDropped: 0,\n      averageLatency: 0,\n      activeConnections: 0,\n      lastActivity: Date.now(),\n    },\n    config: defaultConfig,\n    errors: [],\n  },\n  states: {\n    initializing: {\n      entry: 'initialize',\n      invoke: {\n        id: 'loadHistory',\n        src: 'loadMessageHistory',\n        input: ({ context }) => ({\n          storagePath: context.config.fileStoragePath || '.ai-messages',\n          since: Date.now() - 24 * 60 * 60 * 1000, // Last 24 hours\n        }),\n        onDone: {\n          target: 'active',\n          actions: assign({\n            messageHistory: ({ event }) => {\n              // XState done event contains output from the actor\n              const doneEvent = event as { output: AIMessage[] };\n              return doneEvent.output || [];\n            },\n          }),\n        },\n        onError: {\n          target: 'active',\n          actions: 'logError',\n        },\n      },\n    },\n\n    active: {\n      on: {\n        SEND_MESSAGE: {\n          actions: ['queueMessage'],\n          target: '.processingQueue',\n        },\n        MESSAGE_RECEIVED: {\n          actions: ['processReceivedMessage', 'notifySubscribers'],\n        },\n        SUBSCRIBE: {\n          actions: 'addSubscription',\n        },\n        UNSUBSCRIBE: {\n          actions: 'removeSubscription',\n        },\n        CONNECT: {\n          actions: 'registerAgent',\n        },\n        DISCONNECT: {\n          actions: 'unregisterAgent',\n        },\n        HEARTBEAT: {\n          actions: assign({\n            stats: ({ context }) => ({\n              ...context.stats,\n              lastActivity: Date.now(),\n            }),\n          }),\n        },\n        CLEAR_HISTORY: {\n          actions: 'clearHistory',\n        },\n        REPLAY_MESSAGES: {\n          actions: ({ context, event, self }) => {\n            if (event.type !== 'REPLAY_MESSAGES') return;\n\n            const messagesToReplay = context.messageHistory.filter(\n              (msg) => msg.timestamp >= event.since\n            );\n\n            messagesToReplay.forEach((msg) => {\n              self.send({ type: 'MESSAGE_RECEIVED', message: msg });\n            });\n          },\n        },\n        ERROR: {\n          actions: 'logError',\n        },\n      },\n\n      initial: 'idle',\n      states: {\n        idle: {},\n\n        processingQueue: {\n          always: [\n            {\n              target: 'sendingMessage',\n              guard: ({ context }) => context.messageQueue.length > 0,\n            },\n            {\n              target: 'idle',\n            },\n          ],\n        },\n\n        sendingMessage: {\n          invoke: {\n            id: 'processOutgoing',\n            src: 'processOutgoingMessage',\n            input: ({ context }) => {\n              const message = context.messageQueue[0];\n              return {\n                message,\n                config: context.config,\n                debugLogger: createDebugLogger(\n                  vscode.window.createOutputChannel('AI Communication')\n                ),\n              };\n            },\n            onDone: {\n              target: 'persistingMessage',\n              actions: assign({\n                messageQueue: ({ context }) => context.messageQueue.slice(1),\n              }),\n            },\n            onError: {\n              target: 'idle',\n              actions: [\n                'logError',\n                assign({\n                  messageQueue: ({ context }) => context.messageQueue.slice(1),\n                }),\n              ],\n            },\n          },\n        },\n\n        persistingMessage: {\n          invoke: {\n            id: 'persist',\n            src: 'persistMessage',\n            input: ({ context }) => ({\n              message: context.messageQueue[0],\n              storagePath: context.config.fileStoragePath || '.ai-messages',\n            }),\n            onDone: {\n              target: 'processingQueue',\n            },\n            onError: {\n              target: 'processingQueue',\n              actions: 'logError',\n            },\n          },\n        },\n      },\n    },\n  },\n});\n\n/**\n * Create and start the AI Communication Bridge actor\n */\nexport function createAICommunicationBridge(debugLogger?: DebugLogger) {\n  const actor = createActor(aiCommunicationBridgeMachine);\n\n  if (debugLogger) {\n    actor.subscribe((state) => {\n      debugLogger.debug(AI_COMM_COMPONENT, `State: ${JSON.stringify(state.value)}`, {\n        agents: state.context.agents.size,\n        queueLength: state.context.messageQueue.length,\n        historyLength: state.context.messageHistory.length,\n        stats: state.context.stats,\n      });\n    });\n  }\n\n  return actor;\n}\n\n/**\n * Helper function to create an AI agent\n */\nexport function createAIAgent(type: 'claude' | 'cursor' | 'custom', name: string): AIAgent {\n  return {\n    id: randomUUID(),\n    type,\n    name,\n    version: '1.0.0',\n    capabilities: [],\n  };\n}\n\n/**\n * Helper function to create a message\n */\nexport function createMessage<T = unknown>(\n  source: AIAgent,\n  target: AIAgent | 'broadcast',\n  type: MessageType,\n  payload: T,\n  options?: Partial<{\n    priority: MessagePriority;\n    channel: CommunicationChannel;\n    correlationId: string;\n    replyTo: string;\n  }>\n): AIMessage<T> {\n  return {\n    id: randomUUID(),\n    timestamp: Date.now(),\n    source,\n    target,\n    type,\n    payload,\n    metadata: {\n      priority: options?.priority ?? MessagePriority.NORMAL,\n      channel: options?.channel ?? CommunicationChannel.GENERAL,\n      correlationId: options?.correlationId,\n      replyTo: options?.replyTo,\n    },\n  };\n}\n","module.exports = require(\"net\");","import { exec } from 'node:child_process';\nimport * as fs from 'node:fs';\nimport * as os from 'node:os';\nimport * as path from 'node:path';\nimport { promisify } from 'node:util';\nimport * as vscode from 'vscode';\n\n// Import bundled formatters\nlet prettier: typeof import('prettier') | undefined;\n\ntry {\n  prettier = require('prettier');\n} catch (_error) {\n  // Prettier not available\n}\n\nconst execAsync = promisify(exec);\n\ninterface TemplateInfo {\n  range: vscode.Range;\n  content: string;\n  language: 'html' | 'css';\n  indentLevel: number;\n  isNested: boolean;\n}\n\ninterface ExpressionInfo {\n  placeholder: string;\n  original: string;\n  hasNestedTemplate: boolean;\n}\n\nexport class ActorSpaFormattingProvider implements vscode.DocumentFormattingEditProvider {\n  private version: string;\n\n  constructor(private outputChannel?: vscode.OutputChannel) {\n    // Get extension version\n    const extension = vscode.extensions.getExtension('actor-spa.actor-spa-framework');\n    this.version = extension?.packageJSON?.version || 'unknown';\n  }\n\n  private log(message: string, data?: unknown): void {\n    const timestamp = new Date().toISOString();\n    const logMessage = `[${timestamp}] [Actor-SPA Formatter] ${message}`;\n    if (this.outputChannel) {\n      const dataStr = data ? ` | Data: ${JSON.stringify(data, null, 2)}` : '';\n      this.outputChannel.appendLine(`${logMessage}${dataStr}`);\n    }\n  }\n\n  private logDebug(message: string, data?: unknown): void {\n    const config = vscode.workspace.getConfiguration('actor-spa');\n    if (config.get<boolean>('enableDiagnostics', true)) {\n      this.log(`[DEBUG] ${message}`, data);\n    }\n  }\n\n  async provideDocumentFormattingEdits(\n    document: vscode.TextDocument,\n    options: vscode.FormattingOptions,\n    token: vscode.CancellationToken\n  ): Promise<vscode.TextEdit[]> {\n    this.log(\n      `🚀 Starting Actor-SPA document formatting v${this.version} (Biome → Prettier → Simple fallback)`,\n      {\n        fileName: document.fileName,\n        languageId: document.languageId,\n        lineCount: document.lineCount,\n      }\n    );\n\n    const config = vscode.workspace.getConfiguration('actor-spa.formatting');\n    if (!config.get<boolean>('enabled', true)) {\n      this.log('❌ Formatting disabled in configuration');\n      return [];\n    }\n\n    const edits: vscode.TextEdit[] = [];\n    const templates = this.findTemplates(document);\n\n    // 🔧 IMPROVEMENT: Add performance warnings for large documents\n    if (templates.length > 50) {\n      this.log('⚠️ Large number of templates detected, formatting may take longer', {\n        templateCount: templates.length,\n      });\n    }\n\n    // 🔧 IMPROVEMENT: Track processing statistics\n    const processingStats = {\n      totalTemplates: templates.length,\n      nestedTemplates: templates.filter((t) => t.isNested).length,\n      htmlTemplates: templates.filter((t) => t.language === 'html').length,\n      cssTemplates: templates.filter((t) => t.language === 'css').length,\n      startTime: Date.now(),\n    };\n\n    this.log(`📋 Found ${templates.length} templates to format`, {\n      templates: templates.map((t) => ({\n        language: t.language,\n        isNested: t.isNested,\n        indentLevel: t.indentLevel,\n        contentLength: t.content.length,\n        lineRange: `${t.range.start.line + 1}-${t.range.end.line + 1}`,\n        linesSpanned: t.range.end.line - t.range.start.line + 1, // 🔧 ADDED: Line span info\n      })),\n      summary: processingStats,\n    });\n\n    // 🔧 IMPROVEMENT: Process templates with better error isolation\n    let successCount = 0;\n    let errorCount = 0;\n\n    for (let i = 0; i < templates.length; i++) {\n      const template = templates[i];\n\n      if (token.isCancellationRequested) {\n        this.log('⚠️ Formatting cancelled by user', {\n          processedCount: i,\n          totalCount: templates.length,\n        });\n        break;\n      }\n\n      this.logDebug(`🔧 Processing template ${i + 1}/${templates.length}`, {\n        language: template.language,\n        isNested: template.isNested,\n        originalLength: template.content.length,\n        linesSpanned: template.range.end.line - template.range.start.line + 1,\n      });\n\n      try {\n        const formatted = await this.formatTemplate(template, options);\n        if (formatted !== template.content) {\n          edits.push(vscode.TextEdit.replace(template.range, formatted));\n          successCount++;\n          this.logDebug(`✅ Template ${i + 1} formatted successfully`, {\n            originalLength: template.content.length,\n            formattedLength: formatted.length,\n            changePercent: Math.round(\n              ((formatted.length - template.content.length) / template.content.length) * 100\n            ),\n          });\n        } else {\n          this.logDebug(`⏭️ Template ${i + 1} unchanged (already formatted)`);\n          successCount++;\n        }\n      } catch (error) {\n        errorCount++;\n        this.log(`❌ Failed to format template ${i + 1}`, {\n          error: error instanceof Error ? error.message : String(error),\n          template: {\n            language: template.language,\n            length: template.content.length,\n            isNested: template.isNested,\n          },\n        });\n        // 🔧 IMPROVEMENT: Continue processing other templates on error\n      }\n    }\n\n    // 🔧 IMPROVEMENT: Enhanced completion summary with performance metrics\n    const processingTime = Date.now() - processingStats.startTime;\n    this.log('🎉 Formatting complete', {\n      totalEdits: edits.length,\n      templatesProcessed: templates.length,\n      successCount,\n      errorCount,\n      processingTimeMs: processingTime,\n      averageTimePerTemplate:\n        templates.length > 0 ? Math.round(processingTime / templates.length) : 0,\n      performance: processingTime > 5000 ? 'slow' : processingTime > 2000 ? 'moderate' : 'fast',\n    });\n\n    return edits;\n  }\n\n  private findTemplates(document: vscode.TextDocument): TemplateInfo[] {\n    this.logDebug('🔍 Starting template discovery');\n\n    const templates: TemplateInfo[] = [];\n    const text = document.getText();\n\n    // Find html`` templates\n    const htmlTemplates = this.findTemplatesOfType(text, document, 'html', templates);\n    this.logDebug(`Found ${htmlTemplates} HTML templates`);\n\n    // Find css`` templates\n    const cssTemplates = this.findTemplatesOfType(text, document, 'css', templates);\n    this.logDebug(`Found ${cssTemplates} CSS templates`);\n\n    this.logDebug('📊 Template discovery summary', {\n      htmlTemplates,\n      cssTemplates,\n      totalTemplates: templates.length,\n      nestedTemplates: templates.filter((t) => t.isNested).length,\n    });\n\n    return templates;\n  }\n\n  private findTemplatesOfType(\n    text: string,\n    document: vscode.TextDocument,\n    type: 'html' | 'css',\n    templates: TemplateInfo[]\n  ): number {\n    const regex = new RegExp(`\\\\b(${type})\\\\s*\\``, 'g');\n    let match: RegExpExecArray | null;\n    let count = 0;\n\n    match = regex.exec(text);\n    while (match !== null) {\n      const tagStart = match.index;\n      const contentStart = tagStart + match[0].length;\n\n      this.logDebug(`🎯 Found ${type} template at position ${tagStart}`);\n\n      // Find the closing backtick\n      const contentEnd = this.findClosingBacktick(text, contentStart);\n\n      if (contentEnd === -1) {\n        this.logDebug(`⚠️ No closing backtick found for ${type} template at position ${tagStart}`);\n        match = regex.exec(text);\n        continue;\n      }\n\n      const content = text.slice(contentStart, contentEnd);\n      const startPos = document.positionAt(contentStart);\n      const endPos = document.positionAt(contentEnd);\n\n      // 🔧 IMPROVEMENT: Better line range calculation\n      const actualStartLine = startPos.line;\n      const actualEndLine = endPos.line;\n\n      const indentLevel = this.getIndentLevel(document, startPos.line);\n\n      // Check if this is a nested template (inside another template)\n      const isNested = this.isNestedTemplate(text, tagStart);\n\n      templates.push({\n        range: new vscode.Range(startPos, endPos),\n        content,\n        language: type,\n        indentLevel,\n        isNested,\n      });\n\n      count++;\n\n      this.logDebug(`✅ ${type} template processed`, {\n        position: tagStart,\n        contentLength: content.length,\n        isNested,\n        indentLevel,\n        lineRange: `${actualStartLine + 1}-${actualEndLine + 1}`, // 🔧 FIXED: Show actual line range\n        linesSpanned: actualEndLine - actualStartLine + 1,\n      });\n\n      match = regex.exec(text);\n    }\n\n    return count;\n  }\n\n  private isNestedTemplate(text: string, currentPos: number): boolean {\n    this.logDebug(`🔍 Checking if template at position ${currentPos} is nested`);\n\n    // Look backwards to see if we're inside another template literal\n    let templateDepth = 0;\n    let expressionDepth = 0;\n    let i = currentPos - 1;\n    let inString = false;\n    let stringChar = '';\n\n    while (i >= 0) {\n      const char = text[i];\n      const nextChar = text[i + 1];\n\n      // Handle escaped characters\n      if (char === '\\\\') {\n        i -= 2;\n        continue;\n      }\n\n      // Handle string literals\n      if (!inString && (char === '\"' || char === \"'\" || char === '`')) {\n        // Check if this backtick is part of a template literal tag\n        if (char === '`') {\n          // Look backwards to see if there's a tag before this backtick\n          let j = i - 1;\n          while (j >= 0 && /\\s/.test(text[j])) {\n            j--;\n          } // Skip whitespace\n          const tagEnd = j + 1;\n          while (j >= 0 && /[a-zA-Z_$]/.test(text[j])) {\n            j--;\n          } // Find tag start\n\n          if (j >= 0 && /\\b(html|css)$/.test(text.slice(j + 1, tagEnd))) {\n            templateDepth--;\n            this.logDebug(\n              `🎯 Found template tag at position ${j + 1}, template depth: ${templateDepth}`\n            );\n\n            // If we're inside a template and find another template tag, we're nested\n            if (templateDepth > 0 || expressionDepth > 0) {\n              this.logDebug(\n                `🪆 Template is nested (template depth: ${templateDepth}, expression depth: ${expressionDepth})`\n              );\n              return true;\n            }\n          } else {\n            // Regular string backtick\n            inString = true;\n            stringChar = char;\n          }\n        } else {\n          inString = true;\n          stringChar = char;\n        }\n      } else if (inString && char === stringChar) {\n        inString = false;\n        stringChar = '';\n      }\n\n      if (!inString) {\n        if (char === '}' && nextChar !== '}') {\n          expressionDepth++;\n        } else if (char === '$' && nextChar === '{') {\n          expressionDepth--;\n          if (expressionDepth < 0) {\n            expressionDepth = 0;\n          }\n        } else if (char === '`') {\n          templateDepth++;\n        }\n      }\n\n      i--;\n    }\n\n    this.logDebug('📄 Template is top-level (not nested)');\n    return false;\n  }\n\n  private findClosingBacktick(text: string, start: number): number {\n    this.logDebug(`🔍 Finding closing backtick starting from position ${start}`);\n    this.logDebug(`📝 Context: \"${text.slice(Math.max(0, start - 10), start + 50)}\"`);\n\n    let depth = 0;\n    let i = start;\n    let inString = false;\n    let stringChar = '';\n    let inRegex = false;\n\n    while (i < text.length) {\n      const char = text[i];\n      const nextChar = text[i + 1];\n\n      // Add detailed character logging for first 20 characters\n      if (i < start + 20) {\n        this.logDebug(\n          `📍 Pos ${i}: char='${char}' depth=${depth} inString=${inString} inRegex=${inRegex}`\n        );\n      }\n\n      // Handle escaped characters\n      if (char === '\\\\') {\n        this.logDebug(`🔄 Escaped character at ${i}, skipping`);\n        i += 2; // Skip escaped character and continue\n        continue;\n      }\n\n      // Handle regex literals (to avoid confusion with division)\n      if (!inString && char === '/' && nextChar !== '/' && nextChar !== '*') {\n        // Look back to see if this could be a regex\n        let j = i - 1;\n        while (j >= 0 && /\\s/.test(text[j])) {\n          j--;\n        } // Skip whitespace\n        const prevChar = text[j];\n        if (prevChar && '=({[,;:!&|?+\\n'.includes(prevChar)) {\n          inRegex = true;\n          this.logDebug(`🔤 Entering regex at ${i}`);\n          i++;\n          continue;\n        }\n      }\n\n      if (inRegex) {\n        if (char === '/' && text[i - 1] !== '\\\\') {\n          inRegex = false;\n          this.logDebug(`🔤 Exiting regex at ${i}`);\n        }\n        i++;\n        continue;\n      }\n\n      // Now handle the actual template literal parsing FIRST\n      if (char === '`') {\n        if (depth === 0) {\n          this.logDebug(`✅ Found closing backtick at position ${i} (depth: ${depth})`);\n          return i;\n        }\n        // This is a nested template literal closing\n        depth--;\n        this.logDebug(`📉 Nested template closed, depth now: ${depth}`);\n      } else if (char === '$' && nextChar === '{') {\n        depth++;\n        this.logDebug(`📈 Template expression opened, depth now: ${depth}`);\n        i++; // Skip the '{'\n      } else if (char === '}' && depth > 0) {\n        depth--;\n        this.logDebug(`📉 Template expression closed, depth now: ${depth}`);\n      }\n\n      // Handle string literals inside template expressions (only when depth > 0)\n      if (!inString && (char === '\"' || char === \"'\" || (char === '`' && depth > 0))) {\n        inString = true;\n        stringChar = char;\n        this.logDebug(`🎨 Entering string '${char}' at ${i}`);\n        i++;\n        continue;\n      }\n\n      if (inString) {\n        if (char === stringChar && text[i - 1] !== '\\\\') {\n          inString = false;\n          stringChar = '';\n          this.logDebug(`🎨 Exiting string at ${i}`);\n        }\n        i++;\n        continue;\n      }\n\n      i++;\n    }\n\n    this.logDebug(`❌ No closing backtick found (ended at depth: ${depth})`);\n    this.logDebug(`📝 Final context: \"${text.slice(Math.max(0, i - 20), i + 10)}\"`);\n    return -1;\n  }\n\n  private getIndentLevel(document: vscode.TextDocument, lineNumber: number): number {\n    const line = document.lineAt(lineNumber);\n    const match = line.text.match(/^(\\s*)/);\n    const indentLevel = match ? Math.floor(match[1].length / 2) : 0;\n    this.logDebug(`📏 Calculated indent level: ${indentLevel} for line ${lineNumber + 1}`);\n    return indentLevel;\n  }\n\n  private validateTemplateContent(template: TemplateInfo): {\n    isValid: boolean;\n    warnings: string[];\n  } {\n    const warnings: string[] = [];\n    const isValid = true;\n\n    // 🔧 IMPROVEMENT: Detect potentially problematic templates\n    if (template.content.length > 10000) {\n      warnings.push(`Large template (${template.content.length} chars)`);\n    }\n\n    if (template.isNested && template.content.includes('${')) {\n      const expressionCount = (template.content.match(/\\$\\{/g) || []).length;\n      if (expressionCount > 20) {\n        warnings.push(`High expression density (${expressionCount} expressions)`);\n      }\n    }\n\n    // Check for common formatting issues\n    if (template.language === 'html' && template.content.includes('<script')) {\n      warnings.push('Contains script tags - may need special handling');\n    }\n\n    if (template.language === 'css' && template.content.includes('@import')) {\n      warnings.push('Contains @import - may need special handling');\n    }\n\n    // Check for deeply nested templates\n    const nestedTemplateCount = (template.content.match(/html`|css`/g) || []).length;\n    if (nestedTemplateCount > 5) {\n      warnings.push(`Deep template nesting (${nestedTemplateCount} nested templates)`);\n    }\n\n    return { isValid, warnings };\n  }\n\n  private async formatTemplate(\n    template: TemplateInfo,\n    options: vscode.FormattingOptions\n  ): Promise<string> {\n    const { content, language, indentLevel } = template;\n\n    this.logDebug(`🎨 Starting ${language} template formatting`, {\n      contentLength: content.length,\n      indentLevel,\n      tabSize: options.tabSize,\n    });\n\n    if (!content.trim()) {\n      this.logDebug('⏭️ Skipping empty template');\n      return content;\n    }\n\n    // 🔧 IMPROVEMENT: Validate template content\n    const validation = this.validateTemplateContent(template);\n    if (validation.warnings.length > 0) {\n      this.logDebug('⚠️ Template validation warnings', {\n        warnings: validation.warnings,\n        language: template.language,\n        isNested: template.isNested,\n      });\n    }\n\n    try {\n      // Step 1: Extract template expressions\n      const { content: cleanContent, expressions } = this.extractExpressions(content);\n\n      this.logDebug(`🔧 Extracted ${expressions.length} expressions`, {\n        expressionsWithNestedTemplates: expressions.filter((e) => e.hasNestedTemplate).length,\n        cleanContentLength: cleanContent.length,\n      });\n\n      // Step 2: Format with Biome CLI (with Prettier fallback)\n      const formatted = await this.formatWithBiome(cleanContent, language);\n\n      this.logDebug(`✨ ${language} formatting applied`, {\n        originalLength: cleanContent.length,\n        formattedLength: formatted.length,\n      });\n\n      // Step 3: Restore template expressions\n      const withExpressions = this.restoreExpressions(formatted, expressions);\n\n      this.logDebug(`🔄 Restored ${expressions.length} expressions`);\n\n      // Step 4: Apply template literal style\n      const final = this.applyTemplateLiteralStyle(withExpressions, indentLevel);\n\n      this.logDebug('🎯 Applied template literal styling', {\n        finalLength: final.length,\n        totalChangePercent: Math.round(((final.length - content.length) / content.length) * 100),\n      });\n\n      return final;\n    } catch (error) {\n      this.log(`❌ Formatting failed for ${language} template`, {\n        error: error instanceof Error ? error.message : String(error),\n        contentLength: content.length,\n        indentLevel,\n      });\n      return content;\n    }\n  }\n\n  private async formatWithBiome(content: string, language: 'html' | 'css'): Promise<string> {\n    this.logDebug(`🔧 Formatting ${language} content (Biome CLI → Prettier → Legacy)`, {\n      contentLength: content.length,\n    });\n\n    try {\n      // Step 1: Try Biome CLI first\n      try {\n        this.logDebug(`🟪 Attempting Biome CLI formatting for ${language}`);\n\n        // Get the extension path for the biome binary\n        const extensionPath = vscode.extensions.getExtension(\n          'actor-spa.actor-spa-framework'\n        )?.extensionPath;\n\n        if (!extensionPath) {\n          throw new Error('Extension path not found');\n        }\n\n        // Use the biome command from node_modules\n        const biomeCommand = path.join(extensionPath, 'node_modules', '.bin', 'biome');\n\n        // Check if biome exists, if not try global installation\n        let biomePath = biomeCommand;\n        try {\n          await fs.promises.access(biomeCommand);\n        } catch {\n          // Try global biome installation\n          biomePath = 'biome';\n        }\n\n        // Create a temporary file with the content\n        const tempDir = os.tmpdir();\n        const tempFile = path.join(tempDir, `biome-format-${Date.now()}.${language}`);\n\n        await fs.promises.writeFile(tempFile, content, 'utf8');\n\n        // Use proper Biome CLI command format: biome format [options] [files...]\n        const biomeArgs = ['format', '--write', tempFile];\n\n        try {\n          const { stdout, stderr } = await execAsync(`\"${biomePath}\" ${biomeArgs.join(' ')}`, {\n            cwd: extensionPath,\n            timeout: 10000, // 10 second timeout\n          });\n\n          // Log any output from biome\n          if (stdout) {\n            this.logDebug('🟪 Biome CLI stdout:', { output: stdout });\n          }\n          if (stderr) {\n            this.logDebug('🟪 Biome CLI stderr:', { output: stderr });\n          }\n\n          // Read the formatted content\n          const formatted = await fs.promises.readFile(tempFile, 'utf8');\n\n          // Clean up temp file\n          await fs.promises.unlink(tempFile).catch(() => {\n            // Ignore cleanup errors\n          });\n\n          this.logDebug(`✅ Biome CLI formatting successful for ${language}`);\n          return formatted;\n        } catch (biomeError) {\n          // Clean up temp file on error\n          await fs.promises.unlink(tempFile).catch(() => {\n            // Ignore cleanup errors\n          });\n\n          this.logDebug(`⚠️ Biome CLI formatting failed for ${language}`, {\n            error: biomeError instanceof Error ? biomeError.message : String(biomeError),\n          });\n        }\n      } catch (biomeSetupError) {\n        this.logDebug(`⚠️ Biome CLI setup failed for ${language}`, {\n          error:\n            biomeSetupError instanceof Error ? biomeSetupError.message : String(biomeSetupError),\n        });\n      }\n\n      // Step 2: Try bundled Prettier\n      if (prettier) {\n        try {\n          this.logDebug(`🟦 Attempting Prettier formatting for ${language}`);\n          const parser = language === 'html' ? 'html' : 'css';\n          const formatted = await prettier.format(content, {\n            parser,\n            printWidth: 100,\n            tabWidth: 2,\n            useTabs: false,\n            semi: true,\n            singleQuote: false,\n            trailingComma: 'es5',\n          });\n\n          this.logDebug(`✅ Prettier formatting successful for ${language}`);\n          return formatted;\n        } catch (prettierError) {\n          this.logDebug(`⚠️ Prettier bundled formatting failed for ${language}`, {\n            error: prettierError instanceof Error ? prettierError.message : String(prettierError),\n          });\n        }\n      } else {\n        this.logDebug('⚠️ Prettier not available, falling back to legacy');\n      }\n\n      // Step 3: Fallback to legacy simple formatting\n      this.logDebug(`🟨 Using legacy simple formatting for ${language}`);\n      return this.simpleFormat(content, language);\n    } catch (error) {\n      this.logDebug(`❌ Formatting error for ${language}`, {\n        error: error instanceof Error ? error.message : String(error),\n      });\n      // Return original content if formatting fails\n      return content;\n    }\n  }\n\n  private simpleFormat(content: string, language: 'html' | 'css'): string {\n    this.logDebug(`🔧 Applying simple ${language} formatting`);\n\n    if (language === 'html') {\n      return this.simpleHtmlFormat(content);\n    }\n    return this.simpleCssFormat(content);\n  }\n\n  private simpleHtmlFormat(content: string): string {\n    // First, break up single-line HTML into multiple lines by adding newlines around tags\n    const preFormatted = content\n      // Add newlines before opening tags (but not the first one)\n      .replace(/(?<!^)(<[^/])/g, '\\n$1')\n      // Add newlines before closing tags\n      .replace(/(<\\/)/g, '\\n$1')\n      // Add newlines after closing tags (but not the last one)\n      .replace(/(\\/>|>)/g, '$1\\n')\n      // Clean up multiple newlines and trim\n      .replace(/\\n+/g, '\\n')\n      .trim();\n\n    const lines = preFormatted.split('\\n');\n    const formatted: string[] = [];\n    let indentLevel = 0;\n    const indentSize = 2;\n\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i].trim();\n      if (!line) {\n        continue;\n      }\n\n      // Check if this is a simple tag that should stay on one line\n      if (line.startsWith('<') && !line.startsWith('</')) {\n        // Look ahead to see if we can combine with the next few lines\n        const combined = this.tryCreateSingleLineTag(lines, i);\n        if (combined.success) {\n          formatted.push(' '.repeat(indentLevel * indentSize) + combined.content);\n          i = combined.skipToIndex; // Skip the lines we've combined\n          continue;\n        }\n      }\n\n      // Decrease indent for closing tags\n      if (line.startsWith('</')) {\n        indentLevel = Math.max(0, indentLevel - 1);\n      }\n\n      // Add indented line\n      formatted.push(' '.repeat(indentLevel * indentSize) + line);\n\n      // Increase indent for opening tags (but not self-closing)\n      if (line.startsWith('<') && !line.startsWith('</') && !line.endsWith('/>')) {\n        // Check if it's not a self-closing tag\n        const tagMatch = line.match(/<(\\w+)/);\n        if (tagMatch) {\n          const tagName = tagMatch[1].toLowerCase();\n          // Don't indent for void elements\n          const voidElements = [\n            'area',\n            'base',\n            'br',\n            'col',\n            'embed',\n            'hr',\n            'img',\n            'input',\n            'link',\n            'meta',\n            'param',\n            'source',\n            'track',\n            'wbr',\n          ];\n          if (!voidElements.includes(tagName)) {\n            indentLevel++;\n          }\n        }\n      }\n    }\n\n    return formatted.join('\\n');\n  }\n\n  private tryCreateSingleLineTag(\n    lines: string[],\n    startIndex: number\n  ): { success: boolean; content: string; skipToIndex: number } {\n    const openingLine = lines[startIndex].trim();\n\n    // Only consider simple opening tags (not complex ones with lots of attributes)\n    if (openingLine.length > 50 || openingLine.includes('\\n')) {\n      return { success: false, content: '', skipToIndex: startIndex };\n    }\n\n    const tagMatch = openingLine.match(/<(\\w+)/);\n    if (!tagMatch) {\n      return { success: false, content: '', skipToIndex: startIndex };\n    }\n\n    const tagName = tagMatch[1].toLowerCase();\n    const expectedClosingTag = `</${tagName}>`;\n\n    // Look for the closing tag within the next few lines\n    let textContent = '';\n    let currentIndex = startIndex + 1;\n    let foundClosing = false;\n    let totalLength = openingLine.length;\n\n    while (currentIndex < lines.length && currentIndex < startIndex + 5) {\n      const currentLine = lines[currentIndex].trim();\n\n      if (currentLine === expectedClosingTag) {\n        foundClosing = true;\n        totalLength += currentLine.length;\n        break;\n      }\n\n      // If we encounter another tag or the content is getting too long, abort\n      if (currentLine.includes('<') || totalLength > 80) {\n        break;\n      }\n\n      textContent += (textContent ? ' ' : '') + currentLine;\n      totalLength += currentLine.length + 1; // +1 for space\n      currentIndex++;\n    }\n\n    // Only combine if we found the closing tag, content is short, and it's simple\n    if (foundClosing && totalLength <= 80 && !textContent.includes('\\n')) {\n      const combined = textContent\n        ? `${openingLine}${textContent}${expectedClosingTag}`\n        : `${openingLine}${expectedClosingTag}`;\n\n      return {\n        success: true,\n        content: combined,\n        skipToIndex: currentIndex,\n      };\n    }\n\n    return { success: false, content: '', skipToIndex: startIndex };\n  }\n\n  private simpleCssFormat(content: string): string {\n    // First, break up single-line CSS into multiple lines\n    const formatted = content\n      // Add newlines after semicolons (but not inside url() or other functions)\n      .replace(/;(?![^()]*\\))/g, ';\\n')\n      // Add newlines before opening braces (with proper spacing)\n      .replace(/\\s*\\{/g, ' {\\n')\n      // Add newlines after closing braces\n      .replace(/\\}/g, '\\n}\\n')\n      // Clean up multiple consecutive newlines\n      .replace(/\\n+/g, '\\n')\n      // Clean up extra spaces\n      .replace(/[ \\t]+/g, ' ')\n      .trim();\n\n    // Now apply proper indentation\n    const lines = formatted.split('\\n');\n    const indentedLines: string[] = [];\n    let indentLevel = 0;\n    const indentSize = 2;\n\n    for (let line of lines) {\n      line = line.trim();\n      if (!line) {\n        continue;\n      }\n\n      // Decrease indent for closing braces\n      if (line === '}') {\n        indentLevel = Math.max(0, indentLevel - 1);\n      }\n\n      // Add indented line\n      indentedLines.push(' '.repeat(indentLevel * indentSize) + line);\n\n      // Increase indent for opening braces\n      if (line.endsWith('{')) {\n        indentLevel++;\n      }\n    }\n\n    return indentedLines.join('\\n');\n  }\n\n  private extractExpressions(content: string): { content: string; expressions: ExpressionInfo[] } {\n    this.logDebug('🔍 Extracting template expressions');\n\n    const expressions: ExpressionInfo[] = [];\n    let result = content;\n    let index = 0;\n\n    // More sophisticated regex to handle nested braces\n    const expressionRegex = /\\$\\{[^}]*(?:\\{[^}]*\\}[^}]*)*\\}/g;\n    let match: RegExpExecArray | null;\n\n    match = expressionRegex.exec(content);\n    while (match !== null) {\n      const placeholder = `__EXPR_${index}__`;\n      const original = match[0];\n      const hasNestedTemplate = original.includes('html`') || original.includes('css`');\n\n      expressions.push({\n        placeholder,\n        original,\n        hasNestedTemplate,\n      });\n\n      this.logDebug(`📦 Extracted expression ${index}`, {\n        length: original.length,\n        hasNestedTemplate,\n        preview: original.length > 50 ? `${original.substring(0, 47)}...` : original,\n      });\n\n      result = result.replace(original, placeholder);\n      index++;\n      match = expressionRegex.exec(content);\n    }\n\n    this.logDebug('✅ Expression extraction complete', {\n      totalExpressions: expressions.length,\n      nestedTemplateExpressions: expressions.filter((e) => e.hasNestedTemplate).length,\n    });\n\n    return { content: result, expressions };\n  }\n\n  private restoreExpressions(content: string, expressions: ExpressionInfo[]): string {\n    this.logDebug(`🔄 Restoring ${expressions.length} expressions`);\n\n    let result = content;\n    for (const expr of expressions) {\n      result = result.replace(new RegExp(expr.placeholder, 'g'), expr.original);\n    }\n\n    this.logDebug('✅ Expression restoration complete');\n    return result;\n  }\n\n  private applyTemplateLiteralStyle(content: string, baseIndent: number): string {\n    this.logDebug('🎯 Applying template literal styling', {\n      baseIndent,\n      contentLines: content.split('\\n').length,\n    });\n\n    if (!content.trim()) {\n      return content;\n    }\n\n    const lines = content.split('\\n');\n    const indentStr = '  '.repeat(baseIndent + 1);\n\n    const indentedLines = lines.map((line) => (line.trim() ? indentStr + line : line));\n\n    const result = `\\n${indentedLines.join('\\n')}\\n${'  '.repeat(baseIndent)}`;\n\n    this.logDebug('✅ Template literal styling applied', {\n      inputLines: lines.length,\n      outputLength: result.length,\n    });\n\n    return result;\n  }\n}\n\nexport class ActorSpaRangeFormattingProvider implements vscode.DocumentRangeFormattingEditProvider {\n  private formattingProvider: ActorSpaFormattingProvider;\n\n  constructor(outputChannel?: vscode.OutputChannel) {\n    this.formattingProvider = new ActorSpaFormattingProvider(outputChannel);\n  }\n\n  async provideDocumentRangeFormattingEdits(\n    document: vscode.TextDocument,\n    _range: vscode.Range,\n    options: vscode.FormattingOptions,\n    token: vscode.CancellationToken\n  ): Promise<vscode.TextEdit[]> {\n    return this.formattingProvider.provideDocumentFormattingEdits(document, options, token);\n  }\n}\n","import * as vscode from 'vscode';\n\nexport enum LogLevel {\n  ERROR = 0,\n  WARN = 1,\n  INFO = 2,\n  DEBUG = 3,\n  TRACE = 4,\n}\n\nexport interface LogEntry {\n  timestamp: Date;\n  level: LogLevel;\n  component: string;\n  message: string;\n  data?: unknown;\n  error?: Error;\n}\n\nexport class DebugLogger {\n  private static instance: DebugLogger;\n  private outputChannel: vscode.OutputChannel;\n  private logLevel: LogLevel = LogLevel.INFO;\n  private enabledComponents: Set<string> = new Set();\n  private logBuffer: LogEntry[] = [];\n  private maxBufferSize = 1000;\n\n  private constructor(outputChannel: vscode.OutputChannel) {\n    this.outputChannel = outputChannel;\n    this.loadConfiguration();\n\n    // Watch for configuration changes\n    vscode.workspace.onDidChangeConfiguration((e) => {\n      if (e.affectsConfiguration('actor-spa.debug')) {\n        this.loadConfiguration();\n      }\n    });\n  }\n\n  public static getInstance(outputChannel?: vscode.OutputChannel): DebugLogger {\n    if (!DebugLogger.instance) {\n      if (!outputChannel) {\n        throw new Error('DebugLogger must be initialized with an output channel');\n      }\n      DebugLogger.instance = new DebugLogger(outputChannel);\n    }\n    return DebugLogger.instance;\n  }\n\n  private loadConfiguration(): void {\n    const config = vscode.workspace.getConfiguration('actor-spa.debug');\n\n    // Set log level\n    const levelString = config.get<string>('logLevel', 'info').toLowerCase();\n    this.logLevel = this.stringToLogLevel(levelString);\n\n    // Set enabled components\n    const enabledComponents = config.get<string[]>('enabledComponents', ['*']);\n    this.enabledComponents = new Set(enabledComponents);\n\n    // If '*' is in enabled components, enable all\n    if (this.enabledComponents.has('*')) {\n      this.enabledComponents.clear();\n      this.enabledComponents.add('*');\n    }\n\n    this.log(\n      LogLevel.INFO,\n      'DebugLogger',\n      `Configuration loaded: level=${LogLevel[this.logLevel]}, components=${Array.from(this.enabledComponents).join(', ')}`\n    );\n  }\n\n  private stringToLogLevel(level: string): LogLevel {\n    switch (level) {\n      case 'error':\n        return LogLevel.ERROR;\n      case 'warn':\n        return LogLevel.WARN;\n      case 'info':\n        return LogLevel.INFO;\n      case 'debug':\n        return LogLevel.DEBUG;\n      case 'trace':\n        return LogLevel.TRACE;\n      default:\n        return LogLevel.INFO;\n    }\n  }\n\n  private shouldLog(level: LogLevel, component: string): boolean {\n    if (level > this.logLevel) {\n      return false;\n    }\n\n    if (this.enabledComponents.has('*')) {\n      return true;\n    }\n\n    return this.enabledComponents.has(component);\n  }\n\n  private log(\n    level: LogLevel,\n    component: string,\n    message: string,\n    data?: unknown,\n    error?: Error\n  ): void {\n    if (!this.shouldLog(level, component)) {\n      return;\n    }\n\n    const entry: LogEntry = {\n      timestamp: new Date(),\n      level,\n      component,\n      message,\n      data,\n      error,\n    };\n\n    // Add to buffer\n    this.logBuffer.push(entry);\n    if (this.logBuffer.length > this.maxBufferSize) {\n      this.logBuffer.shift();\n    }\n\n    // Format and output\n    this.outputToChannel(entry);\n  }\n\n  private outputToChannel(entry: LogEntry): void {\n    const timestamp = entry.timestamp.toISOString();\n    const levelStr = LogLevel[entry.level].padEnd(5);\n    const componentStr = entry.component.padEnd(15);\n\n    let logLine = `[${timestamp}] [${levelStr}] [${componentStr}] ${entry.message}`;\n\n    if (entry.data) {\n      logLine += `\\n    Data: ${JSON.stringify(entry.data, null, 2)}`;\n    }\n\n    if (entry.error) {\n      logLine += `\\n    Error: ${entry.error.message}`;\n      if (entry.error.stack) {\n        logLine += `\\n    Stack: ${entry.error.stack}`;\n      }\n    }\n\n    this.outputChannel.appendLine(logLine);\n  }\n\n  // Public logging methods\n  public error(component: string, message: string, data?: unknown, error?: Error): void {\n    this.log(LogLevel.ERROR, component, message, data, error);\n    // Also show error message to user for critical errors\n    if (error) {\n      vscode.window.showErrorMessage(`Actor-SPA ${component}: ${message}`);\n    }\n  }\n\n  public warn(component: string, message: string, data?: unknown): void {\n    this.log(LogLevel.WARN, component, message, data);\n  }\n\n  public info(component: string, message: string, data?: unknown): void {\n    this.log(LogLevel.INFO, component, message, data);\n  }\n\n  public debug(component: string, message: string, data?: unknown): void {\n    this.log(LogLevel.DEBUG, component, message, data);\n  }\n\n  public trace(component: string, message: string, data?: unknown): void {\n    this.log(LogLevel.TRACE, component, message, data);\n  }\n\n  // Utility methods\n  public show(): void {\n    this.outputChannel.show();\n  }\n\n  public clear(): void {\n    this.outputChannel.clear();\n    this.logBuffer = [];\n  }\n\n  public getLogBuffer(): LogEntry[] {\n    return [...this.logBuffer];\n  }\n\n  public exportLogs(): string {\n    return this.logBuffer\n      .map((entry) => {\n        const timestamp = entry.timestamp.toISOString();\n        const levelStr = LogLevel[entry.level];\n        let line = `[${timestamp}] [${levelStr}] [${entry.component}] ${entry.message}`;\n\n        if (entry.data) {\n          line += `\\n    Data: ${JSON.stringify(entry.data, null, 2)}`;\n        }\n\n        if (entry.error) {\n          line += `\\n    Error: ${entry.error.message}`;\n          if (entry.error.stack) {\n            line += `\\n    Stack: ${entry.error.stack}`;\n          }\n        }\n\n        return line;\n      })\n      .join('\\n');\n  }\n\n  // Try-catch wrapper for better error handling\n  public async safeExecute<T>(\n    component: string,\n    operation: string,\n    fn: () => Promise<T>,\n    fallback?: T\n  ): Promise<T | undefined> {\n    try {\n      this.debug(component, `Starting ${operation}`);\n      const result = await fn();\n      this.debug(component, `Successfully completed ${operation}`);\n      return result;\n    } catch (error) {\n      this.error(\n        component,\n        `Failed to ${operation}`,\n        { operation },\n        error instanceof Error ? error : new Error(String(error))\n      );\n      return fallback;\n    }\n  }\n\n  public safeExecuteSync<T>(\n    component: string,\n    operation: string,\n    fn: () => T,\n    fallback?: T\n  ): T | undefined {\n    try {\n      this.debug(component, `Starting ${operation}`);\n      const result = fn();\n      this.debug(component, `Successfully completed ${operation}`);\n      return result;\n    } catch (error) {\n      this.error(\n        component,\n        `Failed to ${operation}`,\n        { operation },\n        error instanceof Error ? error : new Error(String(error))\n      );\n      return fallback;\n    }\n  }\n}\n\n// Export convenience function\nexport function createDebugLogger(outputChannel: vscode.OutputChannel): DebugLogger {\n  return DebugLogger.getInstance(outputChannel);\n}\n\n// Export component names for consistency\nexport const COMPONENTS = {\n  EXTENSION: 'Extension',\n  ACTOR_FORMATTER: 'ActorFormatter',\n  COORDINATOR: 'Coordinator',\n  DISCOVERY: 'Discovery',\n  FORMATTING: 'Formatting',\n  PARSER: 'Parser',\n  VALIDATOR: 'Validator',\n} as const;\n","module.exports = require(\"fs\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".extension.js\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(7682);\n"],"names":["installedChunks","text","_version","options","events","tokenizeForMachine","edits","currentLine","currentColumn","inTemplate","templateType","i","length","event","nextEvent","type","tag","position","vscode","Position","indent","insertSpaces","repeat","tabSize","indentLevel","range","Range","push","newText","nextPos","char","slice","module","exports","require","MessageType","MessagePriority","CommunicationChannel","isCodeReviewRequest","message","CODE_REVIEW_REQUEST","isCodeReviewResponse","CODE_REVIEW_RESPONSE","kDone","Symbol","kRun","constructor","concurrency","this","pending","Infinity","jobs","add","job","shift","__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","public_exports","target","all","name","get","enumerable","__export","builders","printer","utils","DOC_TYPE_STRING","DOC_TYPE_ARRAY","DOC_TYPE_CURSOR","DOC_TYPE_INDENT","DOC_TYPE_ALIGN","DOC_TYPE_TRIM","DOC_TYPE_GROUP","DOC_TYPE_FILL","DOC_TYPE_IF_BREAK","DOC_TYPE_INDENT_IF_BREAK","DOC_TYPE_LINE_SUFFIX","DOC_TYPE_LINE_SUFFIX_BOUNDARY","DOC_TYPE_LINE","DOC_TYPE_LABEL","DOC_TYPE_BREAK_PARENT","VALID_OBJECT_DOC_TYPES","Set","at_default","isOptionalObject","object","index","Array","isArray","at","get_doc_type_default","doc","has","getDocErrorMessage","Error","objectType","toString","call","EXPECTED_TYPE_VALUES","list","map","type2","Intl","ListFormat","format","invalid_doc_error_default","super","traverseDocOnExitStackMarker","traverse_doc_default","onEnter","onExit","shouldTraverseConditionalGroups","docsStack","doc2","pop","docType","parts","flatContents","breakContents","expandedStates","contents","mapDoc","cb","mapped","Map","rec","result","process2","set","findInDoc","fn","defaultValue","shouldSkipFurtherProcessing","maybeResult","willBreakFn","break","hard","breakParentGroup","groupStack","parentGroup","removeLinesFn","soft","stripTrailingHardlineFromParts","lastPart","stripTrailingHardlineFromDoc","string","end","trimNewlinesEnd","canBreakFn","noop","assertDoc","assertDocArray","assertDocFillParts","align","widthOrString","n","group","opts","id","Boolean","shouldBreak","lineSuffixBoundary","breakParent","trim","hardlineWithoutBreakParent","literallineWithoutBreakParent","literal","line","softline","hardline","literalline","cursor","join","separator","docs","string_replace_all_default","original","pattern","replacement","replaceAll","global","replace","split","_isNarrowWidth","codePoint","x","isWide","notAsciiRegex","get_string_width_default","test","width","character","codePointAt","MODE_BREAK","MODE_FLAT","CURSOR_PLACEHOLDER","DOC_FILL_PRINTED_LENGTH","makeIndent","ind","generateInd","makeAlign","indent2","widthOrDoc","Number","NEGATIVE_INFINITY","root","value","queue","newPart","lastTabs","lastSpaces","part","flush","useTabs","addTabs","addSpaces","tabWidth","flushSpaces","count","resetLast","trim2","out","trimCount","cursorCount","outIndex","outer","last","charIndex","fits","next","restCommands","hasLineSuffix","groupModeMap","mustBeFlat","POSITIVE_INFINITY","restIdx","cmds","mode","groupMode","groupId","mod","conditionalGroup","states","fill","lineSuffix","ifBreak","indentIfBreak","negate","addAlignmentToDoc","size","aligned","Math","floor","markAsRoot","dedentToRoot","dedent","label","label2","concat","printDocToString","printWidth","newLine","convertEndOfLineToChars","endOfLine","pos","shouldRemeasure","lineSuffix2","printedCursorCount","alreadyVisitedSet","propagateBreaks","formatted","rem","mostExpanded","state","cmd","offset","content","whitespace","contentFlatCmd","contentBreakCmd","contentFits","whitespaceFlatCmd","whitespaceBreakCmd","secondContent","remainingCmd","reverse","cursorPlaceholderIndex","indexOf","otherCursorPlaceholderIndex","filter","beforeCursor","aroundCursor","cursorNodeStart","cursorNodeText","willBreak","traverseDoc","removeLines","stripTrailingHardline","currentDoc","every","currentPart","restParts","cleanDocFn","cleanDoc","replaceEndOfLine","canBreak","to","from","except","desc","key","__copyProps","factory","default","interopModuleDefault","ReactiveLintProvider","outputChannel","diagnosticCollection","languages","createDiagnosticCollection","DIAGNOSTIC_COLLECTION_NAME","analyzeFile","document","shouldAnalyze","violations","runReactiveLint","uri","fsPath","updateDiagnostics","error","appendLine","workspace","getConfiguration","isTypeScript","languageId","isTestFile","includes","isNodeModules","filePath","Promise","resolve","reject","workspaceFolder","getWorkspaceFolder","Uri","file","cwd","path","dirname","reactiveLintPath","extensionReactiveLintPath","args","child","spawn","stdout","stderr","on","data","code","parseReactiveLintOutput","_error","parsePlainTextOutput","output","JSON","parse","violation","column","rule","severity","fix","lines","errorMatch","match","parseInt","warnMatch","diagnostics","diagnostic","Diagnostic","DiagnosticSeverity","Warning","source","provideCodeActions","_range","context","_token","actions","reactiveLintDiagnostics","quickFix","createQuickFix","learnMoreAction","CodeAction","CodeActionKind","QuickFix","command","title","arguments","lineText","lineAt","start","createBooleanToStateQuickFix","createDomQueryQuickFix","createTimerQuickFix","createEventListenerQuickFix","action","edit","WorkspaceEdit","dispose","Duplex","emitClose","stream","emit","duplexOnEnd","destroyed","_writableState","finished","destroy","duplexOnError","err","removeListener","listenerCount","ws","terminateOnDestroy","duplex","autoDestroy","objectMode","writableObjectMode","msg","isBinary","_readableState","pause","once","_destroy","callback","readyState","CLOSED","process","nextTick","called","terminate","_final","CONNECTING","_socket","endEmitted","close","_read","isPaused","resume","_write","chunk","encoding","send","runDiscoveryActor","fromPromise","async","input","discoveryActor","createActor","discoveryMachine","subscription","subscribe","matches","stop","templates","errors","setTimeout","unsubscribe","parallelFormattingActor","config","template","status","startTime","Date","now","results","batchSize","enableParallelProcessing","maxParallelJobs","batch","batchPromises","ActorSpaFormattingProvider","window","createOutputChannel","formatter","language","substring","show","mockDocument","getText","fileName","lineCount","positionAt","offsetAt","formatPromise","provideDocumentFormattingEdits","CancellationTokenSource","token","then","race","_","timeout","endTime","String","allSettled","forEach","reason","preferredFormatter","createTextEdits","TextEdit","coordinatorMachine","setup","types","actors","runDiscovery","parallelFormatting","initializeFormatting","assign","stats","totalTemplates","successfulJobs","failedJobs","processingTimeMs","completedJobs","setDiscoveryResults","setFormattingResults","addError","resetState","createMachine","initial","idle","FORMAT","discovering","invoke","src","onDone","onError","coordinating","always","guard","parallelProcessing","aggregating","entry","completing","RETRY","RESET","tokenChars","dest","elem","undefined","extensions","keys","extension","configurations","params","k","values","v","header","offers","create","extensionName","paramName","mustUnescape","isEscaping","inQuotes","charCodeAt","SyntaxError","debugLogger","createDebugLogger","info","COMPONENTS","EXTENSION","communicationBridge","createAICommunicationBridge","commMethod","wsConfig","port","host","wsServer","createWebSocketServer","currentAgent","createAIAgent","agent","workspaceFolders","RelativePattern","watcher","createFileSystemWatcher","onDidCreate","fs","readFile","Buffer","subscriptions","setupFileWatcher","method","agentId","sendMessageCommand","commands","registerCommand","showErrorMessage","messageTypes","selectedType","showQuickPick","placeHolder","targetChoice","showInputBox","prompt","payload","KNOWLEDGE_QUERY","question","TASK_ASSIGNMENT","description","taskId","priority","getMessagePayload","createMessage","NORMAL","channel","CODE_REVIEW","REFACTORING","ARCHITECTURE","TASK_COORDINATION","KNOWLEDGE_SHARING","GENERAL","showInformationMessage","viewHistoryCommand","history","getSnapshot","messageHistory","createWebviewPanel","ViewColumn","One","enableScripts","webview","html","timestamp","toLocaleString","stringify","subscribeCommand","channels","selectedChannel","selection","Two","metadata","getMessageDetailHtml","getStatsCommand","messagesSent","messagesReceived","activeConnections","round","averageLatency","startWSCommand","stopWSCommand","EventEmitter","https","http","net","tls","randomBytes","createHash","Readable","URL","PerMessageDeflate","Receiver","Sender","isBlob","BINARY_TYPES","EMPTY_BUFFER","GUID","kForOnEventAttribute","kListener","kStatusCode","kWebSocket","NOOP","EventTarget","addEventListener","removeEventListener","toBuffer","kAborted","protocolVersions","readyStates","subprotocolRegex","WebSocket","address","protocols","_binaryType","_closeCode","_closeFrameReceived","_closeFrameSent","_closeMessage","_closeTimer","_errorEmitted","_extensions","_paused","_protocol","_readyState","_receiver","_sender","_bufferedAmount","_isServer","_redirects","initAsClient","_autoPong","autoPong","binaryType","bufferedAmount","_bufferedBytes","onclose","onerror","onopen","onmessage","protocol","url","_url","setSocket","socket","head","receiver","allowSynchronousEvents","isServer","maxPayload","skipUTF8Validation","sender","generateMask","receiverOnConclude","receiverOnDrain","receiverOnError","receiverOnMessage","receiverOnPing","receiverOnPong","senderOnError","setNoDelay","unshift","socketOnClose","socketOnData","socketOnEnd","socketOnError","OPEN","cleanup","removeAllListeners","abortHandshake","_req","CLOSING","errorEmitted","setCloseTimer","ping","mask","sendAfterClose","pong","needDrain","binary","compress","fin","websocket","protocolVersion","perMessageDeflate","followRedirects","maxRedirects","socketPath","hostname","RangeError","parsedUrl","e","href","isSecure","isIpcUrl","invalidUrlMessage","pathname","hash","emitErrorAndClose","defaultPort","request","protocolSet","req","createConnection","tlsConnect","netConnect","startsWith","headers","Connection","Upgrade","search","handshakeTimeout","offer","origin","Origin","username","password","auth","_originalIpc","_originalSecure","_originalHostOrSocketPath","entries","toLowerCase","isSameHost","authorization","cookie","res","location","statusCode","addr","abort","upgrade","digest","update","serverProt","protError","secWebSocketExtensions","extensionNames","accept","finishRequest","connect","servername","isIP","captureStackTrace","setHeader","bind","receiverOnFinish","read","write","clearTimeout","property","listener","listeners","handler","createWebSocketStream","Server","WebSocketServer","documentProvider","ActorFormattingProvider","rangeProvider","ActorRangeFormattingProvider","XStateFormattingProvider","XStateRangeFormattingProvider","_outputChannel","getExtension","version","packageJSON","log","debug","ACTOR_FORMATTER","coordinatorActor","hasResolved","cancellationListener","onCancellationRequested","templatesFound","jobsCompleted","editsGenerated","errorCount","stack","formattingProvider","provideDocumentRangeFormattingEdits","devToolsAdapter","service","devTools","w","globalThis","self","__xstate__","getDevTools","register","Mailbox","_process","_active","_current","_last","clear","enqueue","enqueued","consumed","XSTATE_INIT","XSTATE_ERROR","XSTATE_STOP","createDoneStateEvent","createErrorActorEvent","actorId","createInitEvent","reportUnhandledError","symbolObservable","observable","matchesState","parentStateId","childStateId","parentStateValue","toStateValue","childStateValue","toStatePath","stateId","segment","stateValue","isMachineSnapshot","pathToStateValue","statePath","marker","previous","mapValues","collection","iteratee","collectionKeys","toArrayStrict","toArray","resolveOutput","mapper","toTransitionConfigArray","configLike","transitionLike","normalizeTarget","toObserver","nextHandler","errorHandler","completionHandler","isObserver","complete","createInvokeId","stateNodeId","resolveReferencedActor","machine","implementations","indexStr","nodeId","invokeConfig","getStateNodeById","getAllOwnEventDescriptors","snapshot","_nodes","flatMap","sn","ownEvents","createScheduledEventId","actorRef","sessionId","idCounter","executingCustomAction","ProcessingStatus","defaultOptions","clock","ms","logger","console","Actor","logic","_snapshot","mailbox","observers","eventListeners","_processingStatus","NotStarted","_parent","_syncSnapshot","ref","_actorScope","_systemId","system","_doneEvent","_deferred","resolvedOptions","parent","syncSnapshot","systemId","inspect","rootActor","children","keyedActors","reverseKeyedActors","WeakMap","inspectionObservers","timerMap","scheduler","schedule","delay","random","scheduledEvent","startedAt","scheduledEventId","_scheduledEvents","_relay","cancel","cancelAll","_bookId","_register","_unregister","delete","_set","existing","observerOrFn","observer","_sendInspectionEvent","resolvedInspectionEvent","rootId","sourceRef","_send","scheduledEvents","scheduledId","_clock","_logger","createSystem","defer","stopChild","_stop","emittedEvent","wildcardListener","allListeners","actionExecutor","exec","saveExecutingCustomAction","Running","_initState","persistedState","restoreSnapshot","getInitialSnapshot","deferredFn","_stopProcedure","_complete","invokeId","nextListenerOrObserver","errorListener","completeListener","Stopped","wrappedHandler","initEvent","attachDevTools","nextState","caughtError","transition","_reportError","reportError","err2","toJSON","xstate$$type","getPersistedSnapshot","interpret","resolveCancel","actionArgs","actionParams","sendId","executeCancel","actorScope","_args","_params","execute","resolveSpawn","_actionParams","resolvedId","resolvedInput","cloneMachineSnapshot","executeSpawn","spawnChild","resolveStop","actorRefOrString","resolvedActorRef","executeStop","checkStateIn","isStateId","some","stateIn","check","checkNot","guards","evaluateGuard","not","checkAnd","and","checkOr","or","isInline","resolved","guardArgs","guardParams","isAtomicStateNode","stateNode","getChildren","getProperAncestors","toStateNode","ancestors","m","getAllStateNodes","stateNodes","nodeSet","adjList","getAdjList","s","initialStates","getInitialStateNodesWithTheirAncestors","initialStateNode","getValueFromAdj","baseNode","childStateNodes","childStateNode","getStateValue","rootNode","isInFinalState","stateNodeSet","str","formatTransition","descriptor","transitionConfig","normalizedTarget","reenter","targets","isInternalTarget","getStateNodeByPath","resolvedTarget","resolveTarget","eventType","t","resolveHistoryDefaultTransition","isHistoryNode","getInitialStateNodes","initialState","ancestor","iter","descStateNode","getStateNode","stateKey","arrayStatePath","currentStateNode","getStateNodes","childStateKeys","subStateKey","reduce","allSubStateNodes","subStateNode","subStateNodes","transitionNode","transitionAtomicNode","subStateKeys","transitionCompoundNode","allInnerTransitions","subStateValue","innerTransitions","transitionParallelNode","getHistoryNodes","isDescendant","parentStateNode","hasIntersection","s1","s2","set1","set2","item","removeConflictingTransitions","enabledTransitions","historyValue","filteredTransitions","t1","t1Preempted","transitionsToRemove","t2","computeExitSet","t3","getEffectiveTargetStates","targetNode","node","getTransitionDomain","targetStates","tail","findLeastCommonAncestor","transitions","statesToExit","domain","microstep","currentSnapshot","isInitial","internalQueue","mutStateNodeSet","nextSnapshot","changedHistory","sort","a","b","order","exitStateNode","historyNode","predicate","resolveActionsAndContext","exit","def","exitStates","statesToEnter","statesForDefaultEntry","addDescendantStatesToEnter","addAncestorStatesToEnter","computeEntrySet","completedNodes","stateNodeToEnter","invokeDef","onSnapshot","initialActions","ancestorMarker","rootCompletionNode","getMachineOutput","enterStates","nextStateNodes","prevStateNodes","nextStateNodeSet","areStateNodeCollectionsEqual","doneStateEvent","historyStateNodes","addProperAncestorStatesToEnter","historyDefaultTransition","reentrancyDomain","anc","getAction","actionType","resolveAndExecuteActionsWithContext","extra","retries","intermediateSnapshot","resolvedAction","builtinAction","deferredActorIds","retryResolve","macrostep","microstates","addMicrostate","microstate","_transitions","stopChildren","currentEvent","isErr","isErrorActorEvent","selectTransitions","shouldSelectEventlessTransitions","selectEventlessTransitions","previousState","getTransitionData","enabledTransitionSet","atomicStates","loop","machineSnapshotMatches","testValue","machineSnapshotHasTag","tags","machineSnapshotCan","transitionData","machineSnapshotToJSON","nodes","getMeta","can","hasTag","jsonValues","machineSnapshotGetMeta","acc","meta","createMachineSnapshot","serializeHistoryValue","persistContext","contextPart","copy","resolveRaise","eventOrExpr","delaysMap","delays","resolvedEvent","resolvedDelay","configDelay","executeRaise","raise","fromTransition","initialContext","instanceStates","fromCallback","callbackState","receivers","sendBack","receive","XSTATE_OBSERVABLE_NEXT","XSTATE_OBSERVABLE_ERROR","XSTATE_OBSERVABLE_COMPLETE","fromObservable","observableCreator","_subscription","fromEventObservable","lazyObservable","XSTATE_PROMISE_RESOLVE","XSTATE_PROMISE_REJECT","controllerMap","promiseCreator","scope","resolvedValue","controller","AbortController","signal","response","errorData","emptyLogic","createEmptyActor","createSpawner","spawnedChildren","resolveAssign","assignment","assignArgs","partialUpdate","propAssignment","cache","memo","memoizedData","EMPTY_OBJECT","toSerializableAction","StateNode","_key","_machine","idMap","stateConfig","_initialize","transitionsConfig","delayedTransition","after","formatTransitions","definition","flat","sourceName","invokeDefValues","afterConfig","delayedTransitions","configTransition","resolvedTransition","isNaN","afterEvent","mutateEntryExit","getDelayedTransitions","_target","formatInitialTransition","selectedTransition","candidates","getCandidates","receivedEventType","eventDescriptor","endsWith","partialEventTokens","eventTokens","tokenIndex","partialEventToken","eventToken","candidate","resolvedContext","guardPassed","guardType","StateMachine","schemas","__xstatenode","provide","resolveState","resolvedStateValue","getPreInitialState","preInitial","preInitialState","macroState","fullPath","relativePath","resolvedStateId","childrenJson","snapshotChildren","resolveHistoryReferencedState","referenced","actorData","childState","revivedHistoryValue","revived","arr","reviveHistoryValue","restoredSnapshot","seen","reviveContext","resolveEmit","executeEmit","SpecialTargets","resolveSendTo","targetActorRef","Parent","Internal","targetId","retryResolveSendTo","executeSendTo","sendTo","sendParent","forwardTo","resolveEnqueueActions","collect","enqueueActions","resolveLog","executeLog","assertEvent","typesText","createInertActorScope","actorLogic","getNextSnapshot","inertActorScope","SimulatedClock","timeouts","_now","_id","_flushing","_flushingInvalidated","getId","time","flushTimeouts","sorted","_idA","timeoutA","_idB","timeoutB","endA","increment","toPromise","actor","executableActions","initialTransition","defaultWaitForOptions","waitFor","rej","aborted","done","handle","sub","abortListener","checkEmitted","emitted","formatterMachine","advancePosition","incrementLine","recordTemplateStart","templateStart","templateIndent","enterTemplate","exitTemplate","max","resetTemplate","enterInterpolation","exprDepth","incrementExprDepth","decrementExprDepth","addNewlineAfterBacktick","insert","addNewlineBeforeBacktick","addTemplateIndent","translate","setTemplateTag","indentSize","formattedEdits","processTokens","tokens","nextToken","_editError","finalizeEdits","isAtExpressionEnd","currentIndent","preserveNewlines","START_FORMATTING","TEMPLATE_TAG","CHAR","NEWLINE","formatting","waitingForBacktick","BACKTICK","DOLLAR_LBRACE","interpolation","LBRACE","RBRACE","Writable","toArrayBuffer","unmask","isValidStatusCode","isValidUTF8","FastBuffer","species","_allowSynchronousEvents","_maxPayload","_skipUTF8Validation","_buffers","_compressed","_payloadLength","_mask","_fragmented","_masked","_fin","_opcode","_totalPayloadLength","_messageLength","_fragments","_errored","_loop","_state","startLoop","consume","buf","buffer","byteOffset","dst","allocUnsafe","Uint8Array","getInfo","getPayloadLength16","getPayloadLength64","getMask","getData","createError","compressed","haveLength","readUInt16BE","num","readUInt32BE","pow","controlMessage","decompress","dataMessage","messageLength","fragments","Blob","setImmediate","ErrorCtor","prefix","errorCode","skipWhitespace","skipSpaces","skipToLineEnd","skipEverythingButNewLine","getPrototypeOf","__esm","__toCommonJS","skip","characters","startIndex","backwards","charAt","RegExp","skip_inline_comment_default","init_skip","skipInlineComment","skip_newline_default","init_skip_inline_comment","skipNewline","skip_trailing_comment_default","init_skip_newline","skipTrailingComment","get_next_non_space_non_comment_character_index_default","init_skip_trailing_comment","getNextNonSpaceNonCommentCharacterIndex","oldIdx","nextIdx","has_newline_default","init_get_next_non_space_non_comment_character_index","hasNewline","idx","is_next_line_empty_default","init_has_newline","isNextLineEmpty","is_previous_line_empty_default","init_is_next_line_empty","isPreviousLineEmpty","init_is_previous_line_empty","addCommentHelper","comment","comments","printed","nodeDescription","nodeType","kind","nodeName","operator","describeNodeForDebugging","addLeadingComment","leading","trailing","addDanglingComment","addTrailingComment","get_alignment_size_default","init_utils","getAlignmentSize","get_indent_size_default","init_get_alignment_size","getIndentSize","lastNewlineIndex","lastIndexOf","get_max_continuous_count_default","init_get_indent_size","init_escape_string_regexp","getMaxContinuousCount","searchString","TypeError","escapeStringRegexp","maxCount","get_next_non_space_non_comment_character_default","init_get_max_continuous_count","getNextNonSpaceNonCommentCharacter","SINGLE_QUOTE","DOUBLE_QUOTE","get_preferred_quote_default","init_get_next_non_space_non_comment_character","getPreferredQuote","preferredQuoteOrPreferSingleQuote","preferred","alternate","preferredQuoteCount","alternateQuoteCount","emoji_regex_default","init_get_preferred_quote","init_emoji_regex","init_lookup","init_get_east_asian_width","getStringWidth","has_newline_in_range_default","init_get_string_width","hasNewlineInRange","endIndex","has_spaces_default","init_has_newline_in_range","hasSpaces","make_string_default","init_has_spaces","init_string_replace_all","makeString","rawText","enclosingQuote","unescapeUnnecessaryEscapes","otherQuote","raw","escaped","quote","init_make_string","getNextNonSpaceNonCommentCharacterIndex2","locEnd","isPreviousLineEmpty2","locStart","isNextLineEmpty2","isNextLineEmptyAfterIndex","version_evaluate_default","init_public","version_evaluate_exports","init_version_evaluate","prettierPromise","prettier","debugApis","__debug","util","findTemplates","formatTemplate","intersection","regex","contentStart","contentEnd","findClosingBacktick","startPos","endPos","getIndentLevel","depth","before","cleanContent","expressions","extractExpressions","formatHtml","formatCss","withExpressions","restoreExpressions","applyTemplateIndentation","exprIndex","placeholder","expr","baseIndent","indentedLines","baseIndentStr","hasBlob","alloc","_unmask","totalLength","byteLength","readOnly","isBuffer","ArrayBuffer","isView","env","WS_NO_BUFFER_UTIL","bufferUtil","findTemplateStart","htmlMatch","cssMatch","inString","stringChar","nextChar","analyzeTemplateComplexity","expressionCount","lineNumber","isNestedTemplate","currentPos","templateDepth","j","tagEnd","discoverTemplatesActor","isNested","complexity","startPosition","endPosition","analyzeTemplatesActor","htmlTemplates","cssTemplates","nestedTemplates","complexTemplates","processingTime","validateTemplatesActor","openTags","closeTags","discoverTemplates","analyzeTemplates","validateTemplates","setDocument","updateTemplates","setAnalysisResults","setValidationResults","currentTemplate","DISCOVER","scanning","analyzing","validating","completed","isUtf8","_isValidUTF8","len","arrayBuffer","toStringTag","WS_NO_UTF_8_VALIDATE","legacyFormatter","testXStateImports","xstate","xstateAvailable","createActorType","importError","logMessage","toISOString","dataStr","_logError","formatWithXStateMachine","xstateError","legacyError","documentText","textLength","firstChars","currentState","contextKeys","hasFormattedEdits","editsCount","hasInput","inputLength","errorName","extensionPath","globalState","workspaceState","rangeFormattingProvider","simpleProvider","SimpleFormattingProvider","actorProviders","createFormattingProvider","ActorSpaRangeFormattingProvider","selector","scheme","documentFormattingProvider","registerDocumentFormattingEditProvider","documentRangeFormattingProvider","registerDocumentRangeFormattingEditProvider","reactiveLintProvider","codeActionProvider","registerCodeActionsProvider","documentChangeListener","onDidChangeTextDocument","textDocuments","generateComponentCommand","showReactivePatternDocsCommand","docUri","showTextDocument","editor","activeTextEditor","searchPattern","Selection","revealRange","TextEditorRevealType","InCenter","generateMachineCommand","initializeAICommunication","catch","registerAICommunicationCommands","fallbackProvider","fallbackRegistration","fallbackError","cleanupAICommunication","randomFillSync","applyMask","kByteLength","maskBuffer","RANDOM_POOL_SIZE","randomPool","randomPoolPointer","_generateMask","_maskBuffer","_firstFragment","_compress","_queue","frame","dataLength","merge","skipMasking","payloadLength","opcode","rsv1","writeUInt16BE","writeUIntBE","dispatch","sendFrame","getBlobData","_threshold","blob","callCallbacks","dequeue","Reflect","apply","cork","uncork","kCode","kData","kError","kMessage","kReason","kTarget","kType","kWasClean","Event","CloseEvent","wasClean","ErrorEvent","MessageEvent","wrapper","callListener","thisArg","handleEvent","subprotocol","keyRegex","server","STATUS_CODES","h","abortHandshakeOrEmitwsClientError","handleProtocols","clientTracking","verifyClient","noServer","backlog","_server","createServer","body","writeHead","listen","emitConnection","_removeListeners","addListeners","listening","handleUpgrade","clients","_shouldEmitClose","shouldHandle","secWebSocketProtocol","secure","authorized","encrypted","verified","completeUpgrade","readable","writable","zlib","Limiter","TRAILER","kPerMessageDeflate","kTotalLength","kCallback","kBuffers","zlibLimiter","deflateOnData","inflateOnData","reset","inflateOnError","_inflate","_options","threshold","_deflate","concurrencyLimit","serverNoContextTakeover","server_no_context_takeover","clientNoContextTakeover","client_no_context_takeover","serverMaxWindowBits","server_max_window_bits","clientMaxWindowBits","client_max_window_bits","normalizeParams","acceptAsServer","acceptAsClient","accepted","find","isInteger","_decompress","endpoint","windowBits","Z_DEFAULT_WINDOWBITS","createInflateRaw","zlibInflateOptions","createDeflateRaw","zlibDeflateOptions","Z_SYNC_FLUSH","webSocketServerMachine","defaultServerConfig","WS_COMPONENT","connections","maxConnections","heartbeatInterval","connectionTimeout","messageTimeout","maxMessageSize","startServerActor","onConnection","httpServer","stopServerActor","conn","startServer","stopServer","initialize","totalConnections","setServer","addConnection","connection","randomUUID","connectedAt","lastActivity","messageCount","removeConnection","connectionId","handleMessage","broadcastMessage","excludeId","sentCount","sendToConnection","checkConnections","clearServer","logError","stopped","START","starting","handshake","running","CONNECTION","DISCONNECTION","MESSAGE","BROADCAST","SEND_TO","HEARTBEAT","STOP","ERROR","stopping","reconnectAttempts","maxReconnectAttempts","reconnectDelay","handleDisconnect","onMessage","aiCommunicationBridgeMachine","AI_COMM_COMPONENT","agents","queueLength","messageQueue","historyLength","capabilities","correlationId","replyTo","defaultConfig","maxQueueSize","maxHistorySize","retryAttempts","retryDelay","enableEncryption","enableCompression","communicationMethod","fileStoragePath","persistMessageActor","storagePath","storageDir","mkdir","recursive","writeFile","loadMessageHistoryActor","since","files","readdir","messages","processOutgoingMessageActor","messageId","signature","persistMessage","loadMessageHistory","processOutgoingMessage","SYSTEM","messagesDropped","queueMessage","dropped","splice","processReceivedMessage","latency","totalMessages","newAverageLatency","notifySubscribers","channelSubscribers","sources","addSubscription","channelSubscriptions","newSubscriptions","removeSubscription","handlerId","filtered","registerAgent","unregisterAgent","clearHistory","initializing","active","SEND_MESSAGE","MESSAGE_RECEIVED","SUBSCRIBE","UNSUBSCRIBE","CONNECT","DISCONNECT","CLEAR_HISTORY","REPLAY_MESSAGES","processingQueue","sendingMessage","persistingMessage","execAsync","promisify","logDebug","templateCount","processingStats","contentLength","lineRange","linesSpanned","summary","successCount","isCancellationRequested","processedCount","totalCount","originalLength","formattedLength","changePercent","totalEdits","templatesProcessed","averageTimePerTemplate","performance","findTemplatesOfType","tagStart","actualStartLine","actualEndLine","expressionDepth","inRegex","prevChar","validateTemplateContent","warnings","nestedTemplateCount","isValid","validation","expressionsWithNestedTemplates","hasNestedTemplate","cleanContentLength","formatWithBiome","final","applyTemplateLiteralStyle","finalLength","totalChangePercent","biomeCommand","biomePath","promises","access","tempDir","os","tmpdir","tempFile","biomeArgs","unlink","biomeError","biomeSetupError","parser","semi","singleQuote","trailingComma","prettierError","simpleFormat","simpleHtmlFormat","simpleCssFormat","combined","tryCreateSingleLineTag","success","skipToIndex","tagMatch","tagName","openingLine","expectedClosingTag","textContent","currentIndex","foundClosing","expressionRegex","preview","totalExpressions","nestedTemplateExpressions","contentLines","indentStr","inputLines","outputLength","DebugLogger","getInstance","LogLevel","logLevel","INFO","enabledComponents","logBuffer","maxBufferSize","loadConfiguration","onDidChangeConfiguration","affectsConfiguration","instance","levelString","stringToLogLevel","level","WARN","DEBUG","TRACE","shouldLog","component","outputToChannel","logLine","padEnd","warn","trace","getLogBuffer","exportLogs","safeExecute","operation","fallback","safeExecuteSync","COORDINATOR","DISCOVERY","FORMATTING","PARSER","VALIDATOR","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","o","f","chunkId","u","obj","prop","r","moreModules","modules","chunkIds","ids","runtime","installChunk","__webpack_exports__"],"sourceRoot":""}